[{"D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\index.js":"1","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\App.js":"2","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\Header.js":"3","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\SubMenuHeader.js":"4","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\store.js":"5","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\reducers\\categoryReducers.js":"6","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\reducers\\rootCategoryReducers.js":"7","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\reducers\\productReducers.js":"8","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\reducers\\orderReducers.js":"9","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\reducers\\cartReducers.js":"10","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\reducers\\userReducers.js":"11","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\constants\\rootCategoryConstants.js":"12","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\constants\\productConstants.js":"13","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\constants\\categoryConstants.js":"14","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\constants\\orderConstants.js":"15","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\constants\\cartConstants.js":"16","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\constants\\userConstants.js":"17","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\screens\\MoreTippy.js":"18","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\actions\\userAction.js":"19","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\ZipCodeTracker.js":"20","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\CategoriesSubMenu.js":"21","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\Theme.js":"22","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\screens\\HomeScreen.js":"23","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\screens\\ProductScreen.js":"24","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\screens\\ShippingScreen.js":"25","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\screens\\RegisterScreen.js":"26","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\screens\\CartScreen.js":"27","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\screens\\LoginScreen.js":"28","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\screens\\PaymentScreen.js":"29","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\screens\\PlaceOrderScreen.js":"30","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\screens\\ProfileScreen.js":"31","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\screens\\UserListScreen.js":"32","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\screens\\DashboardScreen.js":"33","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\screens\\OrderScreen.js":"34","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\screens\\UserEditScreen.js":"35","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\screens\\ProductListScreen.js":"36","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\screens\\OrderListScreen.js":"37","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\screens\\ProductEditScreen.js":"38","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\actions\\productAction.js":"39","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\actions\\orderAction.js":"40","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\screens\\MainCarousel.js":"41","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\screens\\DashboardGrid.js":"42","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\actions\\cartAction.js":"43","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\CheckoutSteps.js":"44","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\Message.js":"45","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\Popup.js":"46","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\AddProductForm.js":"47","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\Rating.js":"48","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\Writeup.js":"49","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\controls\\BulkLooseRadioGroup.js":"50","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\controls\\MUIControls.js":"51","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\controls\\Input.js":"52","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\controls\\Button.js":"53","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\controls\\ActionButton.js":"54","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\controls\\Select.js":"55","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\controls\\RadioGroup.js":"56","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\controls\\Checkbox.js":"57","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\controls\\Spinner.js":"58","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\controls\\RupeeIcon.js":"59","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\atoms\\index.js":"60","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\atoms\\ScrollTop\\index.js":"61","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\atoms\\Image\\index.js":"62","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\atoms\\IconText\\index.js":"63","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\atoms\\DarkModeToggler\\index.js":"64","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\atoms\\Icon\\index.js":"65","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\atoms\\LearnMoreLink\\index.js":"66","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\atoms\\ScrollTop\\ScrollTop.js":"67","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\atoms\\Image\\Image.js":"68","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\atoms\\DarkModeToggler\\DarkModeToggler.js":"69","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\atoms\\Icon\\Icon.js":"70","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\atoms\\LearnMoreLink\\LearnMoreLink.js":"71","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\atoms\\IconText\\IconText.js":"72","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\molecules\\index.js":"73","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\molecules\\SwiperNumber\\index.js":"74","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\molecules\\SectionHeader\\index.js":"75","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\molecules\\CountUpNumber\\index.js":"76","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\molecules\\DescriptionCta\\index.js":"77","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\molecules\\OverlapedImages\\index.js":"78","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\molecules\\SwiperImage\\index.js":"79","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\molecules\\TypedText\\index.js":"80","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\molecules\\IconAlternate\\index.js":"81","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\molecules\\SectionHeader\\SectionHeader.js":"82","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\molecules\\DescriptionCta\\DescriptionCta.js":"83","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\molecules\\SwiperNumber\\SwiperNumber.js":"84","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\molecules\\CountUpNumber\\CountUpNumber.js":"85","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\molecules\\OverlapedImages\\OverlapedImages.js":"86","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\molecules\\SwiperImage\\SwiperImage.js":"87","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\molecules\\TypedText\\TypedText.js":"88","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\molecules\\IconAlternate\\IconAlternate.js":"89","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\controls\\SectionHeader.js":"90","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\screens\\CartLayoutScreen.js":"91","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\OrderTypeDialog.js":"92","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\MuiHeader.js":"93","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\Product.js":"94","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\CategoriesSubMenuVer2.js":"95","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\categoriesMenuData.js":"96","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\MorePopper.js":"97","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\Contact.js":"98","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\AboutUs.js":"99","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\organisms\\Section\\index.js":"100","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\organisms\\Section\\Section.js":"101","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\organisms\\index.js":"102","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\organisms\\CardReview\\index.js":"103","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\organisms\\DescriptionListIcon\\index.js":"104","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\organisms\\SectionAlternate\\index.js":"105","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\organisms\\CardBase\\index.js":"106","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\organisms\\CardCategory\\index.js":"107","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\organisms\\CardJobMinimal\\index.js":"108","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\organisms\\CardJobTag\\index.js":"109","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\organisms\\CardJob\\index.js":"110","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\organisms\\CardJobCompany\\index.js":"111","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\organisms\\HeroShaped\\index.js":"112","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\organisms\\HeroSideImage\\index.js":"113","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\organisms\\Accordion\\index.js":"114","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\organisms\\HeroBackground\\index.js":"115","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\organisms\\CardProduct\\index.js":"116","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\organisms\\Map\\index.js":"117","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\organisms\\CardPromo\\index.js":"118","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\organisms\\CardCategoryLink\\index.js":"119","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\organisms\\HeroSimpleBackground\\index.js":"120","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\organisms\\ContactForm\\index.js":"121","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\organisms\\Parallax\\index.js":"122","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\organisms\\CardPricingStandard\\index.js":"123","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\organisms\\DescriptionListIcon\\DescriptionListIcon.js":"124","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\organisms\\CardReview\\CardReview.js":"125","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\organisms\\SectionAlternate\\SectionAlternate.js":"126","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\organisms\\CardJobMinimal\\CardJobMinimal.js":"127","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\organisms\\HeroSideImage\\HeroSideImage.js":"128","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\organisms\\CardJob\\CardJob.js":"129","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\organisms\\CardJobCompany\\CardJobCompany.js":"130","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\organisms\\CardJobTag\\CardJobTag.js":"131","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\organisms\\Accordion\\Accordion.js":"132","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\organisms\\HeroShaped\\HeroShaped.js":"133","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\organisms\\HeroBackground\\HeroBackground.js":"134","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\organisms\\CardBase\\CardBase.js":"135","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\organisms\\CardProduct\\CardProduct.js":"136","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\organisms\\CardCategory\\CardCategory.js":"137","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\organisms\\Map\\Map.js":"138","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\organisms\\HeroSimpleBackground\\HeroSimpleBackground.js":"139","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\organisms\\CardCategoryLink\\CardCategoryLink.js":"140","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\organisms\\CardPromo\\CardPromo.js":"141","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\organisms\\Parallax\\Parallax.js":"142","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\organisms\\ContactForm\\ContactForm.js":"143","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\organisms\\CardPricingStandard\\CardPricingStandard.js":"144","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\data\\index.js":"145","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\Gallery.js":"146","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\WhoWeAre.js":"147","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\Story.js":"148","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\Team.js":"149","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\Partners.js":"150","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\Hero.js":"151","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\BestSellingProducts.js":"152","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\OurProducts.js":"153","D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\index.js":"154","D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\App.js":"155","D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\store.js":"156","D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\components\\CategoriesSubMenu.js":"157","D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\components\\AboutUs.js":"158","D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\components\\SubMenuHeader.js":"159","D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\components\\Theme.js":"160","D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\components\\Contact.js":"161","D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\components\\CategoriesSubMenuVer2.js":"162","D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\components\\MuiHeader.js":"163","D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\components\\Header.js":"164","D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\reducers\\categoryReducers.js":"165","D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\reducers\\cartReducers.js":"166","D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\reducers\\orderReducers.js":"167","D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\reducers\\rootCategoryReducers.js":"168","D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\reducers\\productReducers.js":"169","D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\reducers\\userReducers.js":"170","D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\components\\WhoWeAre.js":"171","D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\components\\Story.js":"172","D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\components\\Team.js":"173","D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\components\\Partners.js":"174","D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\components\\Message.js":"175","D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\components\\Hero.js":"176","D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\components\\Writeup.js":"177","D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\components\\Gallery.js":"178","D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\components\\CheckoutSteps.js":"179","D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\components\\controls\\Spinner.js":"180","D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\components\\controls\\Button.js":"181","D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\actions\\productAction.js":"182","D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\actions\\orderAction.js":"183","D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\actions\\cartAction.js":"184","D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\actions\\userAction.js":"185","D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\constants\\orderConstants.js":"186","D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\constants\\userConstants.js":"187","D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\constants\\productConstants.js":"188","D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\constants\\cartConstants.js":"189","D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\constants\\rootCategoryConstants.js":"190","D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\constants\\categoryConstants.js":"191","D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\components\\atoms\\Image\\Image.js":"192","D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\components\\ZipCodeTracker.js":"193","D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\components\\controls\\RupeeIcon.js":"194","D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\components\\MorePopper.js":"195","D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\components\\organisms\\index.js":"196","D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\data\\index.js":"197","D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\components\\controls\\BulkLooseRadioGroup.js":"198","D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\components\\BestSellingProducts.js":"199","D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\components\\atoms\\Image\\index.js":"200","D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\components\\organisms\\CardBase\\index.js":"201","D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\components\\molecules\\SectionHeader\\index.js":"202","D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\components\\molecules\\index.js":"203","D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\components\\molecules\\SectionHeader\\SectionHeader.js":"204","D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\components\\organisms\\CardBase\\CardBase.js":"205","D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\components\\controls\\SectionHeader.js":"206","D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\components\\categoriesMenuData.js":"207","D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\components\\Rating.js":"208","D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\components\\CustomizedBadges.js":"209","D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\components\\Grid\\GridItem.js":"210","D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\components\\Grid\\GridContainer.js":"211","D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\components\\Table\\Table.js":"212","D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\components\\Card\\Card.js":"213","D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\components\\Card\\CardHeader.js":"214","D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\components\\Card\\CardBody.js":"215","D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\assets\\jss\\material-dashboard-react\\components\\cardBodyStyle.js":"216","D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\assets\\jss\\material-dashboard-react\\components\\cardHeaderStyle.js":"217","D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\assets\\jss\\material-dashboard-react\\components\\cardStyle.js":"218","D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\assets\\jss\\material-dashboard-react.js":"219","D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\assets\\jss\\material-dashboard-react\\components\\tableStyle.js":"220","D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\components\\ProductOverview.js":"221","D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\components\\MainCategories.js":"222","D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\actions\\categoryAction.js":"223","D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\components\\Paginate.js":"224","D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\components\\CategoryWiseProducts.js":"225","D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\components\\OrderScreen.js":"226","D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\components\\PaymentScreen.js":"227","D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\components\\UserListScreen.js":"228","D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\components\\ProfileScreen.js":"229","D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\components\\UserEditScreen.js":"230","D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\components\\ProductScreen.js":"231","D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\components\\ShippingScreen.js":"232","D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\components\\Dashboard.js":"233","D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\components\\ProductListScreen.js":"234","D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\components\\LoginScreen.js":"235","D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\components\\CartLayoutScreen.js":"236","D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\components\\ProductEditScreen.js":"237","D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\components\\PlaceOrderScreen.js":"238","D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\components\\OrderListScreen.js":"239","D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\components\\ProductCreateScreen.js":"240","D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\components\\ShoppingCartCountScreen.js":"241","D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\components\\StepperScreen.js":"242","D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\components\\SignUpScreen.js":"243","D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\components\\ProductSettingsScreen.js":"244","D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\components\\ProductConfigureForm.js":"245","D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\components\\ProductConfigureTable.js":"246"},{"size":264,"mtime":1612011955220,"results":"247","hashOfConfig":"248"},{"size":3958,"mtime":1612951969596,"results":"249","hashOfConfig":"248"},{"size":6022,"mtime":1612262739643,"results":"250","hashOfConfig":"248"},{"size":11988,"mtime":1612011497408,"results":"251","hashOfConfig":"248"},{"size":3099,"mtime":1612011703910,"results":"252","hashOfConfig":"248"},{"size":2093,"mtime":1612011667244,"results":"253","hashOfConfig":"248"},{"size":2277,"mtime":1612011667259,"results":"254","hashOfConfig":"248"},{"size":3620,"mtime":1612011667255,"results":"255","hashOfConfig":"248"},{"size":3328,"mtime":1612011667248,"results":"256","hashOfConfig":"248"},{"size":1237,"mtime":1612011667146,"results":"257","hashOfConfig":"248"},{"size":3478,"mtime":1612011667261,"results":"258","hashOfConfig":"248"},{"size":1274,"mtime":1612011658092,"results":"259","hashOfConfig":"248"},{"size":1496,"mtime":1612011658071,"results":"260","hashOfConfig":"248"},{"size":883,"mtime":1612011658059,"results":"261","hashOfConfig":"248"},{"size":1237,"mtime":1612011658062,"results":"262","hashOfConfig":"248"},{"size":279,"mtime":1612011657963,"results":"263","hashOfConfig":"248"},{"size":1476,"mtime":1612011658095,"results":"264","hashOfConfig":"248"},{"size":965,"mtime":1612436471771,"results":"265","hashOfConfig":"248"},{"size":7101,"mtime":1612030541975,"results":"266","hashOfConfig":"248"},{"size":1813,"mtime":1612181999075,"results":"267","hashOfConfig":"248"},{"size":11798,"mtime":1612540263450,"results":"268","hashOfConfig":"248"},{"size":2281,"mtime":1612758382927,"results":"269","hashOfConfig":"248"},{"size":2136,"mtime":1612239221458,"results":"270","hashOfConfig":"248"},{"size":6719,"mtime":1612507676670,"results":"271","hashOfConfig":"248"},{"size":6190,"mtime":1612421240945,"results":"272","hashOfConfig":"248"},{"size":3080,"mtime":1612018580212,"results":"273","hashOfConfig":"248"},{"size":2143,"mtime":1612069639315,"results":"274","hashOfConfig":"248"},{"size":6015,"mtime":1612256031875,"results":"275","hashOfConfig":"248"},{"size":3176,"mtime":1612242420289,"results":"276","hashOfConfig":"248"},{"size":10628,"mtime":1612433076797,"results":"277","hashOfConfig":"248"},{"size":5888,"mtime":1612020625611,"results":"278","hashOfConfig":"248"},{"size":2705,"mtime":1612020634962,"results":"279","hashOfConfig":"248"},{"size":950,"mtime":1612844585223,"results":"280","hashOfConfig":"248"},{"size":7887,"mtime":1612424418390,"results":"281","hashOfConfig":"248"},{"size":1553,"mtime":1612019647017,"results":"282","hashOfConfig":"248"},{"size":1802,"mtime":1612020631295,"results":"283","hashOfConfig":"248"},{"size":2493,"mtime":1612020615914,"results":"284","hashOfConfig":"248"},{"size":2662,"mtime":1612019607569,"results":"285","hashOfConfig":"248"},{"size":5741,"mtime":1612024460838,"results":"286","hashOfConfig":"248"},{"size":5821,"mtime":1612011650649,"results":"287","hashOfConfig":"248"},{"size":1134,"mtime":1612020566884,"results":"288","hashOfConfig":"248"},{"size":1450,"mtime":1612955854525,"results":"289","hashOfConfig":"248"},{"size":1270,"mtime":1612011650619,"results":"290","hashOfConfig":"248"},{"size":1142,"mtime":1612106934430,"results":"291","hashOfConfig":"248"},{"size":241,"mtime":1612021202167,"results":"292","hashOfConfig":"248"},{"size":1485,"mtime":1612016079981,"results":"293","hashOfConfig":"248"},{"size":1133,"mtime":1612015695240,"results":"294","hashOfConfig":"248"},{"size":1638,"mtime":1612015735517,"results":"295","hashOfConfig":"248"},{"size":2121,"mtime":1612846056320,"results":"296","hashOfConfig":"248"},{"size":1581,"mtime":1612194065535,"results":"297","hashOfConfig":"248"},{"size":334,"mtime":1612015991512,"results":"298","hashOfConfig":"248"},{"size":458,"mtime":1612016020216,"results":"299","hashOfConfig":"248"},{"size":709,"mtime":1612016020110,"results":"300","hashOfConfig":"248"},{"size":839,"mtime":1612016020037,"results":"301","hashOfConfig":"248"},{"size":893,"mtime":1612016020381,"results":"302","hashOfConfig":"248"},{"size":777,"mtime":1612016020307,"results":"303","hashOfConfig":"248"},{"size":725,"mtime":1612016020165,"results":"304","hashOfConfig":"248"},{"size":492,"mtime":1612016729608,"results":"305","hashOfConfig":"248"},{"size":501,"mtime":1612038631434,"results":"306","hashOfConfig":"248"},{"size":311,"mtime":1612032237315,"results":"307","hashOfConfig":"248"},{"size":38,"mtime":1612032237314,"results":"308","hashOfConfig":"248"},{"size":35,"mtime":1612032237306,"results":"309","hashOfConfig":"248"},{"size":38,"mtime":1612032237302,"results":"310","hashOfConfig":"248"},{"size":45,"mtime":1612032237284,"results":"311","hashOfConfig":"248"},{"size":34,"mtime":1612032237296,"results":"312","hashOfConfig":"248"},{"size":43,"mtime":1612032237310,"results":"313","hashOfConfig":"248"},{"size":1033,"mtime":1612032237312,"results":"314","hashOfConfig":"248"},{"size":1556,"mtime":1612032237305,"results":"315","hashOfConfig":"248"},{"size":3028,"mtime":1612032237269,"results":"316","hashOfConfig":"248"},{"size":1212,"mtime":1612520822028,"results":"317","hashOfConfig":"248"},{"size":2439,"mtime":1612032237309,"results":"318","hashOfConfig":"248"},{"size":1862,"mtime":1612033715101,"results":"319","hashOfConfig":"248"},{"size":496,"mtime":1612523526231,"results":"320","hashOfConfig":"248"},{"size":42,"mtime":1612032237388,"results":"321","hashOfConfig":"248"},{"size":43,"mtime":1612032237377,"results":"322","hashOfConfig":"248"},{"size":43,"mtime":1612032237356,"results":"323","hashOfConfig":"248"},{"size":44,"mtime":1612032237359,"results":"324","hashOfConfig":"248"},{"size":45,"mtime":1612032237374,"results":"325","hashOfConfig":"248"},{"size":41,"mtime":1612032237385,"results":"326","hashOfConfig":"248"},{"size":39,"mtime":1612032237391,"results":"327","hashOfConfig":"248"},{"size":43,"mtime":1612032237369,"results":"328","hashOfConfig":"248"},{"size":5466,"mtime":1612032237376,"results":"329","hashOfConfig":"248"},{"size":3859,"mtime":1612032237358,"results":"330","hashOfConfig":"248"},{"size":3279,"mtime":1612032237387,"results":"331","hashOfConfig":"248"},{"size":3373,"mtime":1612032237355,"results":"332","hashOfConfig":"248"},{"size":2779,"mtime":1612032237372,"results":"333","hashOfConfig":"248"},{"size":3636,"mtime":1612032237379,"results":"334","hashOfConfig":"248"},{"size":787,"mtime":1612032237390,"results":"335","hashOfConfig":"248"},{"size":2470,"mtime":1612521976156,"results":"336","hashOfConfig":"248"},{"size":5712,"mtime":1612041659261,"results":"337","hashOfConfig":"248"},{"size":8395,"mtime":1612960061465,"results":"338","hashOfConfig":"248"},{"size":3112,"mtime":1612189217019,"results":"339","hashOfConfig":"248"},{"size":9817,"mtime":1612952531506,"results":"340","hashOfConfig":"248"},{"size":8873,"mtime":1612953995208,"results":"341","hashOfConfig":"248"},{"size":4226,"mtime":1612792936548,"results":"342","hashOfConfig":"248"},{"size":14665,"mtime":1612755369190,"results":"343","hashOfConfig":"248"},{"size":6170,"mtime":1612539943465,"results":"344","hashOfConfig":"248"},{"size":4009,"mtime":1612521686426,"results":"345","hashOfConfig":"248"},{"size":1911,"mtime":1612539523567,"results":"346","hashOfConfig":"248"},{"size":37,"mtime":1612032237535,"results":"347","hashOfConfig":"248"},{"size":1600,"mtime":1612032237528,"results":"348","hashOfConfig":"248"},{"size":1334,"mtime":1612523751403,"results":"349","hashOfConfig":"248"},{"size":40,"mtime":1612032237490,"results":"350","hashOfConfig":"248"},{"size":49,"mtime":1612032237499,"results":"351","hashOfConfig":"248"},{"size":46,"mtime":1612032237539,"results":"352","hashOfConfig":"248"},{"size":38,"mtime":1612032237436,"results":"353","hashOfConfig":"248"},{"size":42,"mtime":1612032237441,"results":"354","hashOfConfig":"248"},{"size":44,"mtime":1612032237459,"results":"355","hashOfConfig":"248"},{"size":40,"mtime":1612032237472,"results":"356","hashOfConfig":"248"},{"size":37,"mtime":1612032237452,"results":"357","hashOfConfig":"248"},{"size":44,"mtime":1612032237456,"results":"358","hashOfConfig":"248"},{"size":40,"mtime":1612032237506,"results":"359","hashOfConfig":"248"},{"size":43,"mtime":1612032237509,"results":"360","hashOfConfig":"248"},{"size":39,"mtime":1612032237428,"results":"361","hashOfConfig":"248"},{"size":44,"mtime":1612032237503,"results":"362","hashOfConfig":"248"},{"size":41,"mtime":1612032237483,"results":"363","hashOfConfig":"248"},{"size":33,"mtime":1612032237519,"results":"364","hashOfConfig":"248"},{"size":39,"mtime":1612032237487,"results":"365","hashOfConfig":"248"},{"size":49,"mtime":1612523757488,"results":"366","hashOfConfig":"248"},{"size":50,"mtime":1612032237511,"results":"367","hashOfConfig":"248"},{"size":41,"mtime":1612032237493,"results":"368","hashOfConfig":"248"},{"size":38,"mtime":1612032237526,"results":"369","hashOfConfig":"248"},{"size":49,"mtime":1612032237476,"results":"370","hashOfConfig":"248"},{"size":2780,"mtime":1612032237495,"results":"371","hashOfConfig":"248"},{"size":4148,"mtime":1612032237489,"results":"372","hashOfConfig":"248"},{"size":1444,"mtime":1612032237538,"results":"373","hashOfConfig":"248"},{"size":3343,"mtime":1612523291246,"results":"374","hashOfConfig":"248"},{"size":2859,"mtime":1612523366320,"results":"375","hashOfConfig":"248"},{"size":3465,"mtime":1612032237450,"results":"376","hashOfConfig":"248"},{"size":3071,"mtime":1612523193939,"results":"377","hashOfConfig":"248"},{"size":3287,"mtime":1612032237471,"results":"378","hashOfConfig":"248"},{"size":4324,"mtime":1612523155070,"results":"379","hashOfConfig":"248"},{"size":2903,"mtime":1612032237505,"results":"380","hashOfConfig":"248"},{"size":2969,"mtime":1612032237502,"results":"381","hashOfConfig":"248"},{"size":3006,"mtime":1612032237435,"results":"382","hashOfConfig":"248"},{"size":3286,"mtime":1612032237479,"results":"383","hashOfConfig":"248"},{"size":1156,"mtime":1612032237439,"results":"384","hashOfConfig":"248"},{"size":2483,"mtime":1612522352696,"results":"385","hashOfConfig":"248"},{"size":1810,"mtime":1612032237510,"results":"386","hashOfConfig":"248"},{"size":4201,"mtime":1612523765972,"results":"387","hashOfConfig":"248"},{"size":4419,"mtime":1612032237486,"results":"388","hashOfConfig":"248"},{"size":1739,"mtime":1612032237525,"results":"389","hashOfConfig":"248"},{"size":4300,"mtime":1612032237492,"results":"390","hashOfConfig":"248"},{"size":4982,"mtime":1612032237475,"results":"391","hashOfConfig":"248"},{"size":3421,"mtime":1612522274055,"results":"392","hashOfConfig":"248"},{"size":1309,"mtime":1612523041250,"results":"393","hashOfConfig":"248"},{"size":1792,"mtime":1612523569399,"results":"394","hashOfConfig":"248"},{"size":2437,"mtime":1612522978408,"results":"395","hashOfConfig":"248"},{"size":3114,"mtime":1612539127371,"results":"396","hashOfConfig":"248"},{"size":1965,"mtime":1612523012552,"results":"397","hashOfConfig":"248"},{"size":2296,"mtime":1612523429040,"results":"398","hashOfConfig":"248"},{"size":4476,"mtime":1612960264682,"results":"399","hashOfConfig":"248"},{"size":8445,"mtime":1612959417846,"results":"400","hashOfConfig":"248"},{"size":264,"mtime":1612011955220,"results":"401","hashOfConfig":"402"},{"size":4790,"mtime":1615872783970,"results":"403","hashOfConfig":"402"},{"size":3602,"mtime":1615261855192,"results":"404","hashOfConfig":"402"},{"size":11798,"mtime":1612540263450,"results":"405","hashOfConfig":"402"},{"size":1911,"mtime":1612539523567,"results":"406","hashOfConfig":"402"},{"size":11988,"mtime":1612011497408,"results":"407","hashOfConfig":"402"},{"size":3251,"mtime":1615203662972,"results":"408","hashOfConfig":"402"},{"size":4009,"mtime":1612521686426,"results":"409","hashOfConfig":"402"},{"size":3972,"mtime":1614230190167,"results":"410","hashOfConfig":"402"},{"size":8502,"mtime":1615610856594,"results":"411","hashOfConfig":"402"},{"size":6022,"mtime":1612262739643,"results":"412","hashOfConfig":"402"},{"size":2093,"mtime":1612011667244,"results":"413","hashOfConfig":"402"},{"size":1461,"mtime":1615798037248,"results":"414","hashOfConfig":"402"},{"size":3374,"mtime":1614326914278,"results":"415","hashOfConfig":"402"},{"size":2277,"mtime":1612011667259,"results":"416","hashOfConfig":"402"},{"size":6710,"mtime":1614576313928,"results":"417","hashOfConfig":"402"},{"size":3478,"mtime":1612011667261,"results":"418","hashOfConfig":"402"},{"size":1792,"mtime":1612523569399,"results":"419","hashOfConfig":"402"},{"size":2437,"mtime":1612522978408,"results":"420","hashOfConfig":"402"},{"size":3114,"mtime":1612539127371,"results":"421","hashOfConfig":"402"},{"size":1965,"mtime":1612523012552,"results":"422","hashOfConfig":"402"},{"size":243,"mtime":1614004063337,"results":"423","hashOfConfig":"402"},{"size":2296,"mtime":1612523429040,"results":"424","hashOfConfig":"402"},{"size":2121,"mtime":1612846056320,"results":"425","hashOfConfig":"402"},{"size":1309,"mtime":1612523041250,"results":"426","hashOfConfig":"402"},{"size":1142,"mtime":1612106934430,"results":"427","hashOfConfig":"402"},{"size":492,"mtime":1612016729608,"results":"428","hashOfConfig":"402"},{"size":709,"mtime":1612016020110,"results":"429","hashOfConfig":"402"},{"size":10628,"mtime":1615362408931,"results":"430","hashOfConfig":"402"},{"size":5670,"mtime":1615998239598,"results":"431","hashOfConfig":"402"},{"size":3224,"mtime":1615798007513,"results":"432","hashOfConfig":"402"},{"size":6959,"mtime":1616241421910,"results":"433","hashOfConfig":"402"},{"size":1237,"mtime":1612011658062,"results":"434","hashOfConfig":"402"},{"size":1476,"mtime":1612011658095,"results":"435","hashOfConfig":"402"},{"size":2975,"mtime":1614557368283,"results":"436","hashOfConfig":"402"},{"size":384,"mtime":1615788219743,"results":"437","hashOfConfig":"402"},{"size":1274,"mtime":1612011658092,"results":"438","hashOfConfig":"402"},{"size":883,"mtime":1612011658059,"results":"439","hashOfConfig":"402"},{"size":1556,"mtime":1612032237305,"results":"440","hashOfConfig":"402"},{"size":1813,"mtime":1612181999075,"results":"441","hashOfConfig":"402"},{"size":501,"mtime":1612038631434,"results":"442","hashOfConfig":"402"},{"size":6170,"mtime":1612539943465,"results":"443","hashOfConfig":"402"},{"size":1334,"mtime":1612523751403,"results":"444","hashOfConfig":"402"},{"size":3421,"mtime":1612522274055,"results":"445","hashOfConfig":"402"},{"size":2239,"mtime":1614549177681,"results":"446","hashOfConfig":"402"},{"size":3949,"mtime":1615185533195,"results":"447","hashOfConfig":"402"},{"size":35,"mtime":1612032237306,"results":"448","hashOfConfig":"402"},{"size":38,"mtime":1612032237436,"results":"449","hashOfConfig":"402"},{"size":43,"mtime":1612032237377,"results":"450","hashOfConfig":"402"},{"size":496,"mtime":1612523526231,"results":"451","hashOfConfig":"402"},{"size":5466,"mtime":1612032237376,"results":"452","hashOfConfig":"402"},{"size":3006,"mtime":1612032237435,"results":"453","hashOfConfig":"402"},{"size":5712,"mtime":1612041659261,"results":"454","hashOfConfig":"402"},{"size":14665,"mtime":1612755369190,"results":"455","hashOfConfig":"402"},{"size":1638,"mtime":1612015735517,"results":"456","hashOfConfig":"402"},{"size":1664,"mtime":1614350753939,"results":"457","hashOfConfig":"402"},{"size":616,"mtime":1614508567161,"results":"458","hashOfConfig":"402"},{"size":651,"mtime":1614508567151,"results":"459","hashOfConfig":"402"},{"size":2199,"mtime":1614509308593,"results":"460","hashOfConfig":"402"},{"size":1049,"mtime":1614509818359,"results":"461","hashOfConfig":"402"},{"size":1261,"mtime":1614509366003,"results":"462","hashOfConfig":"402"},{"size":1020,"mtime":1614509068005,"results":"463","hashOfConfig":"402"},{"size":298,"mtime":1614509016970,"results":"464","hashOfConfig":"402"},{"size":3005,"mtime":1614509195987,"results":"465","hashOfConfig":"402"},{"size":821,"mtime":1614509225708,"results":"466","hashOfConfig":"402"},{"size":7032,"mtime":1614510789068,"results":"467","hashOfConfig":"402"},{"size":1458,"mtime":1614509246129,"results":"468","hashOfConfig":"402"},{"size":3003,"mtime":1615825357456,"results":"469","hashOfConfig":"402"},{"size":4120,"mtime":1614615118888,"results":"470","hashOfConfig":"402"},{"size":2653,"mtime":1614573169240,"results":"471","hashOfConfig":"402"},{"size":750,"mtime":1614617736173,"results":"472","hashOfConfig":"402"},{"size":2324,"mtime":1615184652529,"results":"473","hashOfConfig":"402"},{"size":9993,"mtime":1616048476435,"results":"474","hashOfConfig":"402"},{"size":4735,"mtime":1615784747080,"results":"475","hashOfConfig":"402"},{"size":2768,"mtime":1615184654511,"results":"476","hashOfConfig":"402"},{"size":6834,"mtime":1615184654144,"results":"477","hashOfConfig":"402"},{"size":1553,"mtime":1615184654425,"results":"478","hashOfConfig":"402"},{"size":12156,"mtime":1615801816172,"results":"479","hashOfConfig":"402"},{"size":6885,"mtime":1615784703900,"results":"480","hashOfConfig":"402"},{"size":1449,"mtime":1615184652596,"results":"481","hashOfConfig":"402"},{"size":9030,"mtime":1615871578595,"results":"482","hashOfConfig":"402"},{"size":6031,"mtime":1615817217772,"results":"483","hashOfConfig":"402"},{"size":11928,"mtime":1615802044692,"results":"484","hashOfConfig":"402"},{"size":14648,"mtime":1615184653912,"results":"485","hashOfConfig":"402"},{"size":17569,"mtime":1615785518506,"results":"486","hashOfConfig":"402"},{"size":7454,"mtime":1616048125547,"results":"487","hashOfConfig":"402"},{"size":16502,"mtime":1615832970653,"results":"488","hashOfConfig":"402"},{"size":957,"mtime":1615610833567,"results":"489","hashOfConfig":"402"},{"size":4585,"mtime":1615784714796,"results":"490","hashOfConfig":"402"},{"size":8516,"mtime":1616241431965,"results":"491","hashOfConfig":"402"},{"size":2082,"mtime":1616051016763,"results":"492","hashOfConfig":"402"},{"size":5489,"mtime":1616051311094,"results":"493","hashOfConfig":"402"},{"size":3674,"mtime":1616066640823,"results":"494","hashOfConfig":"402"},{"filePath":"495","messages":"496","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"497"},"pr1xef",{"filePath":"498","messages":"499","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"500","usedDeprecatedRules":"497"},{"filePath":"501","messages":"502","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"503","usedDeprecatedRules":"497"},{"filePath":"504","messages":"505","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"506","usedDeprecatedRules":"497"},{"filePath":"507","messages":"508","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"497"},{"filePath":"509","messages":"510","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"497"},{"filePath":"511","messages":"512","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"497"},{"filePath":"513","messages":"514","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"497"},{"filePath":"515","messages":"516","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"497"},{"filePath":"517","messages":"518","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"497"},{"filePath":"519","messages":"520","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"497"},{"filePath":"521","messages":"522","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"497"},{"filePath":"523","messages":"524","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"497"},{"filePath":"525","messages":"526","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"497"},{"filePath":"527","messages":"528","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"497"},{"filePath":"529","messages":"530","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"497"},{"filePath":"531","messages":"532","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"497"},{"filePath":"533","messages":"534","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"497"},{"filePath":"535","messages":"536","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"497"},{"filePath":"537","messages":"538","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"539","usedDeprecatedRules":"497"},{"filePath":"540","messages":"541","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"497"},{"filePath":"542","messages":"543","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"497"},{"filePath":"544","messages":"545","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"546","usedDeprecatedRules":"497"},{"filePath":"547","messages":"548","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"549","usedDeprecatedRules":"497"},{"filePath":"550","messages":"551","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"552","usedDeprecatedRules":"497"},{"filePath":"553","messages":"554","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"555","usedDeprecatedRules":"497"},{"filePath":"556","messages":"557","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"558","messages":"559","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"560","usedDeprecatedRules":"497"},{"filePath":"561","messages":"562","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"497"},{"filePath":"563","messages":"564","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"565","usedDeprecatedRules":"497"},{"filePath":"566","messages":"567","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"568","usedDeprecatedRules":"497"},{"filePath":"569","messages":"570","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"497"},{"filePath":"571","messages":"572","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"573","usedDeprecatedRules":"497"},{"filePath":"574","messages":"575","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"576","usedDeprecatedRules":"497"},{"filePath":"577","messages":"578","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"579","usedDeprecatedRules":"497"},{"filePath":"580","messages":"581","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"582","usedDeprecatedRules":"497"},{"filePath":"583","messages":"584","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"497"},{"filePath":"585","messages":"586","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"587","usedDeprecatedRules":"497"},{"filePath":"588","messages":"589","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"497"},{"filePath":"590","messages":"591","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"497"},{"filePath":"592","messages":"593","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"497"},{"filePath":"594","messages":"595","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"596","usedDeprecatedRules":"497"},{"filePath":"597","messages":"598","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"497"},{"filePath":"599","messages":"600","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"497"},{"filePath":"601","messages":"602","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"497"},{"filePath":"603","messages":"604","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"605"},{"filePath":"606","messages":"607","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"608","usedDeprecatedRules":"605"},{"filePath":"609","messages":"610","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"497"},{"filePath":"611","messages":"612","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"613","usedDeprecatedRules":"497"},{"filePath":"614","messages":"615","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"497"},{"filePath":"616","messages":"617","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"605"},{"filePath":"618","messages":"619","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"605"},{"filePath":"620","messages":"621","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"497"},{"filePath":"622","messages":"623","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"605"},{"filePath":"624","messages":"625","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"605"},{"filePath":"626","messages":"627","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"605"},{"filePath":"628","messages":"629","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"605"},{"filePath":"630","messages":"631","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"497"},{"filePath":"632","messages":"633","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"497"},{"filePath":"634","messages":"635","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"636"},{"filePath":"637","messages":"638","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"636"},{"filePath":"639","messages":"640","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"497"},{"filePath":"641","messages":"642","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"636"},{"filePath":"643","messages":"644","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"636"},{"filePath":"645","messages":"646","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"636"},{"filePath":"647","messages":"648","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"636"},{"filePath":"649","messages":"650","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"636"},{"filePath":"651","messages":"652","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"497"},{"filePath":"653","messages":"654","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"636"},{"filePath":"655","messages":"656","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"636"},{"filePath":"657","messages":"658","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"636"},{"filePath":"659","messages":"660","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"636"},{"filePath":"661","messages":"662","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"497"},{"filePath":"663","messages":"664","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"636"},{"filePath":"665","messages":"666","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"497"},{"filePath":"667","messages":"668","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"636"},{"filePath":"669","messages":"670","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"636"},{"filePath":"671","messages":"672","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"636"},{"filePath":"673","messages":"674","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"636"},{"filePath":"675","messages":"676","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"636"},{"filePath":"677","messages":"678","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"636"},{"filePath":"679","messages":"680","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"497"},{"filePath":"681","messages":"682","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"636"},{"filePath":"683","messages":"684","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"636"},{"filePath":"685","messages":"686","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"636"},{"filePath":"687","messages":"688","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"636"},{"filePath":"689","messages":"690","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"636"},{"filePath":"691","messages":"692","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"636"},{"filePath":"693","messages":"694","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"636"},{"filePath":"695","messages":"696","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"497"},{"filePath":"697","messages":"698","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"699","usedDeprecatedRules":"497"},{"filePath":"700","messages":"701","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"702","usedDeprecatedRules":"605"},{"filePath":"703","messages":"704","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"705","usedDeprecatedRules":"497"},{"filePath":"706","messages":"707","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"708","usedDeprecatedRules":"497"},{"filePath":"709","messages":"710","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"497"},{"filePath":"711","messages":"712","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"713"},{"filePath":"714","messages":"715","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"716","usedDeprecatedRules":"497"},{"filePath":"717","messages":"718","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"719","usedDeprecatedRules":"497"},{"filePath":"720","messages":"721","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"722","usedDeprecatedRules":"497"},{"filePath":"723","messages":"724","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"636"},{"filePath":"725","messages":"726","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"636"},{"filePath":"727","messages":"728","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"497"},{"filePath":"729","messages":"730","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"636"},{"filePath":"731","messages":"732","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"636"},{"filePath":"733","messages":"734","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"636"},{"filePath":"735","messages":"736","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"497"},{"filePath":"737","messages":"738","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"636"},{"filePath":"739","messages":"740","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"636"},{"filePath":"741","messages":"742","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"636"},{"filePath":"743","messages":"744","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"636"},{"filePath":"745","messages":"746","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"636"},{"filePath":"747","messages":"748","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"636"},{"filePath":"749","messages":"750","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"636"},{"filePath":"751","messages":"752","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"636"},{"filePath":"753","messages":"754","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"636"},{"filePath":"755","messages":"756","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"636"},{"filePath":"757","messages":"758","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"636"},{"filePath":"759","messages":"760","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"636"},{"filePath":"761","messages":"762","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"636"},{"filePath":"763","messages":"764","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"636"},{"filePath":"765","messages":"766","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"636"},{"filePath":"767","messages":"768","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"636"},{"filePath":"769","messages":"770","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"636"},{"filePath":"771","messages":"772","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"636"},{"filePath":"773","messages":"774","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"636"},{"filePath":"775","messages":"776","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"636"},{"filePath":"777","messages":"778","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"636"},{"filePath":"779","messages":"780","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"781","messages":"782","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"636"},{"filePath":"783","messages":"784","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"785","messages":"786","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"636"},{"filePath":"787","messages":"788","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"789","messages":"790","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"636"},{"filePath":"791","messages":"792","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"636"},{"filePath":"793","messages":"794","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"497"},{"filePath":"795","messages":"796","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"636"},{"filePath":"797","messages":"798","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"636"},{"filePath":"799","messages":"800","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"636"},{"filePath":"801","messages":"802","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"636"},{"filePath":"803","messages":"804","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"805","messages":"806","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"636"},{"filePath":"807","messages":"808","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"636"},{"filePath":"809","messages":"810","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"636"},{"filePath":"811","messages":"812","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"636"},{"filePath":"813","messages":"814","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"497"},{"filePath":"815","messages":"816","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"497"},{"filePath":"817","messages":"818","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"497"},{"filePath":"819","messages":"820","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"497"},{"filePath":"821","messages":"822","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"497"},{"filePath":"823","messages":"824","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"497"},{"filePath":"825","messages":"826","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"497"},{"filePath":"827","messages":"828","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"829","usedDeprecatedRules":"497"},{"filePath":"830","messages":"831","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"832","usedDeprecatedRules":"497"},{"filePath":"833","messages":"834","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"835"},"1p0arm1",{"filePath":"836","messages":"837","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"838","usedDeprecatedRules":"835"},{"filePath":"839","messages":"840","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"835"},{"filePath":"841","messages":"842","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"835"},{"filePath":"843","messages":"844","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"722","usedDeprecatedRules":"835"},{"filePath":"845","messages":"846","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"506","usedDeprecatedRules":"835"},{"filePath":"847","messages":"848","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"835"},{"filePath":"849","messages":"850","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"851","usedDeprecatedRules":"835"},{"filePath":"852","messages":"853","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"835"},{"filePath":"854","messages":"855","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"856","usedDeprecatedRules":"835"},{"filePath":"857","messages":"858","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"503","usedDeprecatedRules":"835"},{"filePath":"859","messages":"860","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"835"},{"filePath":"861","messages":"862","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"863","usedDeprecatedRules":"835"},{"filePath":"864","messages":"865","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"835"},{"filePath":"866","messages":"867","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"835"},{"filePath":"868","messages":"869","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"835"},{"filePath":"870","messages":"871","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"835"},{"filePath":"872","messages":"873","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"835"},{"filePath":"874","messages":"875","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"835"},{"filePath":"876","messages":"877","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"835"},{"filePath":"878","messages":"879","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"835"},{"filePath":"880","messages":"881","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"835"},{"filePath":"882","messages":"883","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"835"},{"filePath":"884","messages":"885","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"613","usedDeprecatedRules":"835"},{"filePath":"886","messages":"887","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"835"},{"filePath":"888","messages":"889","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"835"},{"filePath":"890","messages":"891","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"835"},{"filePath":"892","messages":"893","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"894"},{"filePath":"895","messages":"896","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"897","usedDeprecatedRules":"835"},{"filePath":"898","messages":"899","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"900","usedDeprecatedRules":"835"},{"filePath":"901","messages":"902","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"835"},{"filePath":"903","messages":"904","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"905","messages":"906","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"835"},{"filePath":"907","messages":"908","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"835"},{"filePath":"909","messages":"910","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"835"},{"filePath":"911","messages":"912","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"835"},{"filePath":"913","messages":"914","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"835"},{"filePath":"915","messages":"916","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"835"},{"filePath":"917","messages":"918","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"835"},{"filePath":"919","messages":"920","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"539","usedDeprecatedRules":"835"},{"filePath":"921","messages":"922","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"923"},{"filePath":"924","messages":"925","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"716","usedDeprecatedRules":"926"},{"filePath":"927","messages":"928","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"835"},{"filePath":"929","messages":"930","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"835"},{"filePath":"931","messages":"932","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"933","usedDeprecatedRules":"934"},{"filePath":"935","messages":"936","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"937","usedDeprecatedRules":"835"},{"filePath":"938","messages":"939","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"835"},{"filePath":"940","messages":"941","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"835"},{"filePath":"942","messages":"943","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"835"},{"filePath":"944","messages":"945","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"835"},{"filePath":"946","messages":"947","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"835"},{"filePath":"948","messages":"949","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"835"},{"filePath":"950","messages":"951","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"952"},{"filePath":"953","messages":"954","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"835"},{"filePath":"955","messages":"956","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"952"},{"filePath":"957","messages":"958","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"959","usedDeprecatedRules":"835"},{"filePath":"960","messages":"961","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"835"},{"filePath":"962","messages":"963","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"835"},{"filePath":"964","messages":"965","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"894"},{"filePath":"966","messages":"967","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"835"},{"filePath":"968","messages":"969","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"835"},{"filePath":"970","messages":"971","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"835"},{"filePath":"972","messages":"973","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"835"},{"filePath":"974","messages":"975","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"835"},{"filePath":"976","messages":"977","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"835"},{"filePath":"978","messages":"979","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"835"},{"filePath":"980","messages":"981","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"894"},{"filePath":"982","messages":"983","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"984","usedDeprecatedRules":"835"},{"filePath":"985","messages":"986","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"987","usedDeprecatedRules":"835"},{"filePath":"988","messages":"989","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"835"},{"filePath":"990","messages":"991","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"835"},{"filePath":"992","messages":"993","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"994","usedDeprecatedRules":"835"},{"filePath":"995","messages":"996","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"997","messages":"998","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"999","usedDeprecatedRules":"835"},{"filePath":"1000","messages":"1001","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"835"},{"filePath":"1002","messages":"1003","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1004","usedDeprecatedRules":"835"},{"filePath":"1005","messages":"1006","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"579","usedDeprecatedRules":"835"},{"filePath":"1007","messages":"1008","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1009","usedDeprecatedRules":"835"},{"filePath":"1010","messages":"1011","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1012","usedDeprecatedRules":"835"},{"filePath":"1013","messages":"1014","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1015","usedDeprecatedRules":"835"},{"filePath":"1016","messages":"1017","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1018","usedDeprecatedRules":"835"},{"filePath":"1019","messages":"1020","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1021","usedDeprecatedRules":"835"},{"filePath":"1022","messages":"1023","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1024","usedDeprecatedRules":"835"},{"filePath":"1025","messages":"1026","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1027","usedDeprecatedRules":"835"},{"filePath":"1028","messages":"1029","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1030","usedDeprecatedRules":"835"},{"filePath":"1031","messages":"1032","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1033","messages":"1034","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1035","usedDeprecatedRules":"835"},{"filePath":"1036","messages":"1037","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"835"},{"filePath":"1038","messages":"1039","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1040","usedDeprecatedRules":"835"},{"filePath":"1041","messages":"1042","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1043","messages":"1044","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1045","usedDeprecatedRules":"835"},{"filePath":"1046","messages":"1047","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1048","messages":"1049","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\index.js",[],["1050","1051"],"D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\App.js",["1052","1053","1054"],"import CategoriesSubMenu from \"./components/CategoriesSubMenu\";\nimport { Container } from \"@material-ui/core\";\nimport SubMenuHeader from \"./components/SubMenuHeader\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { ThemeProvider } from \"@material-ui/core\";\nimport theme from \"./components/Theme\";\nimport Header from \"./components/Header\";\nimport HomeScreen from \"./screens/HomeScreen\";\nimport Contact from \"./components/Contact\";\nimport AboutUs from \"./components/AboutUs\";\nimport ProductScreen from \"./screens/ProductScreen\";\nimport CartLayoutScreen from \"./screens/CartLayoutScreen\";\nimport LoginScreen from \"./screens/LoginScreen\";\nimport RegisterScreen from \"./screens/RegisterScreen\";\nimport ProfileScreen from \"./screens/ProfileScreen\";\nimport ShippingScreen from \"./screens/ShippingScreen\";\nimport PaymentScreen from \"./screens/PaymentScreen\";\nimport PlaceOrderScreen from \"./screens/PlaceOrderScreen\";\nimport OrderScreen from \"./screens/OrderScreen\";\nimport UserListScreen from \"./screens/UserListScreen\";\nimport UserEditScreen from \"./screens/UserEditScreen\";\nimport ProductListScreen from \"./screens/ProductListScreen\";\nimport ProductEditScreen from \"./screens/ProductEditScreen\";\nimport OrderListScreen from \"./screens/OrderListScreen\";\n// import SubMenuHeader from \"./components/SubMenuHeader\";\nimport DashboardScreen from \"./screens/DashboardScreen\";\nimport MuiHeader from \"./components/MuiHeader\";\nimport CategoriesSubMenuVer2 from \"./components/CategoriesSubMenuVer2\";\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <Router>\n        {/* NEED TO APPLY MARGIN  TO APP BAR REFER MUI C...\n            AND COMMENT THE BELOW LIKE AFTER MAKING CHANGES  -KSP\n        */}\n        {/* <CategoriesSubMenu /> */}\n        {/* <MuiHeader /> */}\n        <MuiHeader />\n        {/* <SubMenuHeader /> */}\n        <CategoriesSubMenuVer2 />\n        <main className=\"py-0\">\n          <Container>\n            <Route path=\"/order/:id\" component={OrderScreen} />\n            <Route path=\"/shipping\" component={ShippingScreen} />\n            <Route path=\"/payment\" component={PaymentScreen} />\n            <Route path=\"/placeorder\" component={PlaceOrderScreen} />\n            <Route path=\"/login\" component={LoginScreen} />\n            <Route path=\"/register\" component={RegisterScreen} />\n            <Route path=\"/profile\" component={ProfileScreen} />\n            <Route path=\"/product/:id\" component={ProductScreen} />\n            <Route path=\"/cart/:id?\" component={CartLayoutScreen} />\n            <Route path=\"/showcart\" component={CartLayoutScreen} />\n            {/* <Route path=\"/\" component={CartLayoutScreen} /> */}\n            <Route path=\"/admin/userlist\" component={UserListScreen} />\n            <Route path=\"/admin/user/:id/edit\" component={UserEditScreen} />\n            <Route\n              path=\"/admin/productlist\"\n              component={ProductListScreen}\n              exact\n            />\n            <Route\n              path=\"/admin/productlist/:pageNumber\"\n              component={ProductListScreen}\n              exact\n            />\n            <Route\n              path=\"/admin/product/:id/edit\"\n              component={ProductEditScreen}\n            />\n            <Route path=\"/admin/orderlist\" component={OrderListScreen} />\n            <Route path=\"/search/:keyword\" component={HomeScreen} exact />\n            <Route path=\"/page/:pageNumber\" component={HomeScreen} exact />\n            <Route\n              path=\"/search/:keyword/page/:pageNumber\"\n              component={HomeScreen}\n              exact\n            />\n            <Route path=\"/home\" component={HomeScreen} exact />\n            <Route path=\"/\" component={DashboardScreen} exact />\n            <Route path=\"/contact\" component={Contact} exact />\n            <Route path=\"/aboutus\" component={AboutUs} exact />\n          </Container>\n        </main>\n      </Router>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\Header.js",["1055","1056","1057","1058","1059","1060","1061","1062","1063","1064","1065","1066"],"import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport useScrollTrigger from \"@material-ui/core/useScrollTrigger\";\r\nimport { Container, Grid } from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ShoppingCartIcon from \"@material-ui/icons/ShoppingCart\";\r\nimport { logout } from \"../actions/userAction\";\r\nimport ZipCodeTracker from \"./ZipCodeTracker\";\r\nimport logo from \"../assets/images/logo.jpg\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    display: \"none\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      display: \"block\",\r\n    },\r\n  },\r\n  appTitle: {\r\n    fontSize: \"1.75rem\",\r\n  },\r\n\r\n  sectionDesktop: {\r\n    display: \"none\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      display: \"flex\",\r\n    },\r\n  },\r\n  sectionMobile: {\r\n    display: \"flex\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      display: \"none\",\r\n    },\r\n    loginBtn: {\r\n      color: \"#2874f0\",\r\n      fontWeight: \"500\",\r\n      backgroundColor: \"#fff\",\r\n      cursor: \"pointer\",\r\n      borderRadius: \"2px\",\r\n      height: \"32px\",\r\n      padding: \"5px 40px\",\r\n      border: \"1px solid #dbdbdb\",\r\n    },\r\n  },\r\n}));\r\nfunction ElevationScroll(props) {\r\n  const { children } = props;\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\r\n\r\n  const isMenuOpen = Boolean(anchorEl);\r\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\r\n\r\n  const handleProfileMenuOpen = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleMobileMenuClose = () => {\r\n    setMobileMoreAnchorEl(null);\r\n  };\r\n\r\n  const handleMenuClose = () => {\r\n    setAnchorEl(null);\r\n    handleMobileMenuClose();\r\n  };\r\n\r\n  const handleMobileMenuOpen = (event) => {\r\n    setMobileMoreAnchorEl(event.currentTarget);\r\n  };\r\n  const trigger = useScrollTrigger({\r\n    disableHysteresis: true,\r\n    threshold: 0,\r\n  });\r\n\r\n  return React.cloneElement(children, {\r\n    elevation: trigger ? 4 : 0,\r\n  });\r\n}\r\n\r\nElevationScroll.propTypes = {\r\n  children: PropTypes.element.isRequired,\r\n  /**\r\n   * Injected by the documentation to work in an iframe.\r\n   * You won't need it on your project.\r\n   */\r\n  window: PropTypes.func,\r\n};\r\n\r\nexport default function Header({ props }) {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const logoutHandler = () => {\r\n    dispatch(logout());\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <CssBaseline />\r\n      <ElevationScroll {...props}>\r\n        <AppBar>\r\n          <Toolbar disableGutters={true}>\r\n            <div>\r\n              <img\r\n                className=\"img-thumbnail\"\r\n                alt=\"Staples\"\r\n                src={logo}\r\n                style={{\r\n                  height: \"3.5rem\",\r\n                  width: \"3.5rem\",\r\n                  marginRight: \"5em\",\r\n                }}\r\n              />\r\n            </div>\r\n            <Link to=\"/\">\r\n              <span className={classes.appTitle}>\r\n                <b>\r\n                  <i>\r\n                    <h5>Tagline Traders</h5>\r\n                  </i>\r\n                </b>\r\n              </span>\r\n            </Link>\r\n            <div className={classes.grow} />\r\n            {/* IMPLEMENT GRID HERE TO ENSURE THE ELEMENBTS ARE PLACED ALIGNED CENTER AND HAVING SPACE IN BETWEEN -KSP */}\r\n            <Grid container fluid>\r\n              <Grid item xs={3}>\r\n                {\" \"}\r\n                <ZipCodeTracker />\r\n              </Grid>\r\n              <Grid item xs={3}>\r\n                {\" \"}\r\n              </Grid>\r\n              <Grid item xs={3}>\r\n                {userInfo ? (\r\n                  <>\r\n                    <Link to=\"/profile\">\r\n                      <div>{userInfo.name}</div>\r\n                    </Link>\r\n                    <Link to=\"/logout\">\r\n                      <div\r\n                        onClick={logoutHandler}\r\n                        style={{ marginLeft: \"1.5em\" }}\r\n                      >\r\n                        Logout\r\n                      </div>\r\n                    </Link>\r\n                  </>\r\n                ) : (\r\n                  <div>\r\n                    <Link to=\"/login\">\r\n                      <i className=\"fas fa-user\" />\r\n                    </Link>\r\n                  </div>\r\n                )}\r\n              </Grid>\r\n              <Grid item xs={3}>\r\n                {\" \"}\r\n                <Link to=\"/login\">\r\n                  <i className=\"fas fa-user\" />\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n            <div style={{ marginLeft: \"5em\" }}>\r\n              <ZipCodeTracker />\r\n            </div>\r\n            <Link to=\"/cart\">\r\n              <ShoppingCartIcon count=\"10\" />\r\n            </Link>\r\n            {userInfo ? (\r\n              <>\r\n                <Link to=\"/profile\">\r\n                  <div style={{ marginRight: \"1.5em\" }}>{userInfo.name}</div>\r\n                </Link>\r\n                <Link to=\"/logout\" style={{ marginRight: \"1.5em\" }}>\r\n                  <div onClick={logoutHandler} style={{ marginLeft: \"1.5em\" }}>\r\n                    Logout\r\n                  </div>\r\n                </Link>\r\n              </>\r\n            ) : (\r\n              <Link to=\"/login\">\r\n                <i className=\"fas fa-user\" />\r\n              </Link>\r\n            )}\r\n          </Toolbar>\r\n        </AppBar>\r\n      </ElevationScroll>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\SubMenuHeader.js",["1067","1068"],"import React from \"react\";\r\nimport { fade, makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  groceries: {\r\n    fontWeight: \"bold\",\r\n    color: \"#fff\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    margin: \"0 20px\",\r\n    cursor: \"pointer\",\r\n  },\r\n}));\r\nconst SubMenuHeader = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div id=\"container\">\r\n      <div>\r\n        <div className=\"_331-kn _2tvxW\">\r\n          <div\r\n            className=\"InyRMC _3Il5oO\"\r\n            data-tkid=\"M_cac3f597-4795-46b1-855d-8f1527f4ee4e_2_TD249NVPLJWU\"\r\n          >\r\n            <div className=\"_37M3Pb\">\r\n              <div\r\n                className=\"eFQ30H\"\r\n                data-tkid=\"M_cac3f597-4795-46b1-855d-8f1527f4ee4e_2_TD249NVPLJWU_MC.Z59MBD3MYEZK\"\r\n              >\r\n                <div className=\"_1mkliO\">\r\n                  <div\r\n                    className=\"CXW8mj\"\r\n                    style={{ height: \"64px\", width: \"64px\" }}\r\n                  >\r\n                    <img\r\n                      className=\"_396cs4 _3exPp9\"\r\n                      alt=\"Staples\"\r\n                      src=\"/Staples.jpg\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"_1psGvi SLyWEo\">\r\n                  <div>\r\n                    <div className=\"xtXmba\">\r\n                      Packaged Food\r\n                      <svg\r\n                        width=\"5\"\r\n                        height=\"8\"\r\n                        viewBox=\"0 0 16 27\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                        className=\"_2sVfI7\"\r\n                      >\r\n                        <path\r\n                          d=\"M16 23.207L6.11 13.161 16 3.093 12.955 0 0 13.161l12.955 13.161z\"\r\n                          fill=\"#fff\"\r\n                          className=\"_1zrN4q\"\r\n                        ></path>\r\n                      </svg>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div\r\n                className=\"eFQ30H\"\r\n                data-tkid=\"M_cac3f597-4795-46b1-855d-8f1527f4ee4e_2_TD249NVPLJWU_MC.Z59MBD3MYEZK\"\r\n              >\r\n                <div className=\"_1mkliO\">\r\n                  <div\r\n                    className=\"CXW8mj\"\r\n                    style={{ height: \"64px\", width: \"64px\" }}\r\n                  >\r\n                    <img\r\n                      className=\"_396cs4 _3exPp9\"\r\n                      alt=\"Snacks - Beverages\"\r\n                      src=\"/Snacks-Beverages.jpg\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"_1psGvi SLyWEo\">\r\n                  <div>\r\n                    <div className=\"xtXmba\"></div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              {/* <div\r\n                className=\"eFQ30H\"\r\n                data-tkid=\"M_cac3f597-4795-46b1-855d-8f1527f4ee4e_2_TD249NVPLJWU_MC.HI2REO8H1YPI\"\r\n              >\r\n                <>\r\n                  <div className=\"_1mkliO\">\r\n                    <div\r\n                      className=\"CXW8mj\"\r\n                      style={{ height: \"64px\", width: \"64px\" }}\r\n                    >\r\n                      <img\r\n                        className=\"_396cs4 _3exPp9\"\r\n                        alt=\"Snacks &amp; Beverages \"\r\n                        src=\"Snacks-Beverages.jpg\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"_1psGvi SLyWEo\">\r\n                    <DropdownMenu\r\n                      className={classes.groceries}\r\n                      menu={\r\n                        <span>\r\n                          Snacks & Beverages\r\n                          <IoIosArrowDown />\r\n                        </span>\r\n                      }\r\n                      menus={[\r\n                        {\r\n                          label: \"Biscuits\",\r\n                          href: \"\",\r\n                          icon: null,\r\n                        },\r\n                        {\r\n                          label: \"Chips,Namkeen & Snacks\",\r\n                          href: \"\",\r\n                          icon: null,\r\n                        },\r\n                        { label: \"Tea\", href: \"\", icon: null },\r\n\r\n                        {\r\n                          label: \"Coffee\",\r\n                          href: \"\",\r\n                          icon: null,\r\n                        },\r\n                        {\r\n                          label: \"Juices\",\r\n                          href: \"\",\r\n                          icon: null,\r\n                        },\r\n                        {\r\n                          label: \"Health Drink Mix\",\r\n                          href: \"\",\r\n                          icon: null,\r\n                        },\r\n                        {\r\n                          label: \"Soft Drinks\",\r\n                          href: \"\",\r\n                          icon: null,\r\n                        },\r\n                        {\r\n                          label: \"Water\",\r\n                          href: \"\",\r\n                          icon: null,\r\n                        },\r\n                      ]}\r\n                    />\r\n                  </div>\r\n                </>\r\n              </div> */}\r\n              <div\r\n                className=\"eFQ30H\"\r\n                data-tkid=\"M_cac3f597-4795-46b1-855d-8f1527f4ee4e_2_TD249NVPLJWU_MC.Z59MBD3MYEZK\"\r\n              >\r\n                <div className=\"_1mkliO\">\r\n                  <div\r\n                    className=\"CXW8mj\"\r\n                    style={{ height: \"64px\", width: \"64px\" }}\r\n                  >\r\n                    <img\r\n                      className=\"_396cs4 _3exPp9\"\r\n                      alt=\"Packaged Food\"\r\n                      src=\"/Packaged-Food.jpg\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"_1psGvi SLyWEo\">\r\n                  <div>\r\n                    <div className=\"xtXmba\">\r\n                      Packaged Food\r\n                      <svg\r\n                        width=\"5\"\r\n                        height=\"8\"\r\n                        viewBox=\"0 0 16 27\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                        className=\"_2sVfI7\"\r\n                      >\r\n                        <path\r\n                          d=\"M16 23.207L6.11 13.161 16 3.093 12.955 0 0 13.161l12.955 13.161z\"\r\n                          fill=\"#fff\"\r\n                          className=\"_1zrN4q\"\r\n                        ></path>\r\n                      </svg>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div\r\n                className=\"eFQ30H\"\r\n                data-tkid=\"M_cac3f597-4795-46b1-855d-8f1527f4ee4e_2_TD249NVPLJWU_MC.VGFMBXS1MB2C\"\r\n              >\r\n                <div className=\"_1mkliO\">\r\n                  <div\r\n                    className=\"CXW8mj\"\r\n                    style={{ height: \"64px\", width: \"64px\" }}\r\n                  >\r\n                    <img\r\n                      className=\"_396cs4 _3exPp9\"\r\n                      alt=\"Personal &amp;  Baby Care\"\r\n                      src=\"/Baby-Care.jpg  \"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"_1psGvi SLyWEo\">\r\n                  <div>\r\n                    <div className=\"xtXmba\">\r\n                      Personal &amp; Baby Care\r\n                      <svg\r\n                        width=\"5\"\r\n                        height=\"8\"\r\n                        viewBox=\"0 0 16 27\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                        className=\"_2sVfI7\"\r\n                      >\r\n                        <path\r\n                          d=\"M16 23.207L6.11 13.161 16 3.093 12.955 0 0 13.161l12.955 13.161z\"\r\n                          fill=\"#fff\"\r\n                          className=\"_1zrN4q\"\r\n                        ></path>\r\n                      </svg>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div\r\n                className=\"eFQ30H\"\r\n                data-tkid=\"M_cac3f597-4795-46b1-855d-8f1527f4ee4e_2_TD249NVPLJWU_MC.Z59MBD3MYEZK\"\r\n              >\r\n                <div className=\"_1mkliO\">\r\n                  <div\r\n                    className=\"CXW8mj\"\r\n                    style={{ height: \"64px\", width: \"64px\" }}\r\n                  >\r\n                    <img\r\n                      className=\"_396cs4 _3exPp9\"\r\n                      alt=\"Snacks - Beverages\"\r\n                      src=\"/Household-Care.jpg\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"_1psGvi SLyWEo\">\r\n                  <div>\r\n                    <div className=\"xtXmba\">\r\n                      Household Care\r\n                      <svg\r\n                        width=\"5\"\r\n                        height=\"8\"\r\n                        viewBox=\"0 0 16 27\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                        className=\"_2sVfI7\"\r\n                      >\r\n                        <path\r\n                          d=\"M16 23.207L6.11 13.161 16 3.093 12.955 0 0 13.161l12.955 13.161z\"\r\n                          fill=\"#fff\"\r\n                          className=\"_1zrN4q\"\r\n                        ></path>\r\n                      </svg>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div\r\n                className=\"eFQ30H\"\r\n                data-tkid=\"M_cac3f597-4795-46b1-855d-8f1527f4ee4e_2_TD249NVPLJWU_MC.Z59MBD3MYEZK\"\r\n              >\r\n                <div className=\"_1mkliO\">\r\n                  <div\r\n                    className=\"CXW8mj\"\r\n                    style={{ height: \"64px\", width: \"64px\" }}\r\n                  >\r\n                    <img\r\n                      className=\"_396cs4 _3exPp9\"\r\n                      alt=\"Dairy - Eggs\"\r\n                      src=\"/Dairy-Eggs.jpg\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"_1psGvi SLyWEo\">\r\n                  <div>\r\n                    <div className=\"xtXmba\">\r\n                      Dairy - Eggs\r\n                      <svg\r\n                        width=\"5\"\r\n                        height=\"8\"\r\n                        viewBox=\"0 0 16 27\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                        className=\"_2sVfI7\"\r\n                      >\r\n                        <path\r\n                          d=\"M16 23.207L6.11 13.161 16 3.093 12.955 0 0 13.161l12.955 13.161z\"\r\n                          fill=\"#fff\"\r\n                          className=\"_1zrN4q\"\r\n                        ></path>\r\n                      </svg>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"_3LxdjL _3NzWOH\">\r\n          <div className=\"_1TVFmy _23XefD\">\r\n            <div\r\n              className=\"ZM3_EH\"\r\n              style={{ transform: \"scaleX(0.811128)\" }}\r\n            ></div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"_1EcK2J _38JCdA\">\r\n          <div className=\"bra6U8\">\r\n            <svg\r\n              width=\"16\"\r\n              height=\"27\"\r\n              viewBox=\"0 0 16 27\"\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              className=\"_2TdLiZ\"\r\n            >\r\n              <path\r\n                d=\"M16 23.207L6.11 13.161 16 3.093 12.955 0 0 13.161l12.955 13.161z\"\r\n                fill=\"#fff\"\r\n                className=\"_3ZKfA2\"\r\n              ></path>\r\n            </svg>\r\n            <span>Back to top</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SubMenuHeader;\r\n","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\store.js",[],"D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\reducers\\categoryReducers.js",[],"D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\reducers\\rootCategoryReducers.js",[],"D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\reducers\\productReducers.js",[],"D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\reducers\\orderReducers.js",[],"D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\reducers\\cartReducers.js",[],"D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\reducers\\userReducers.js",[],"D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\constants\\rootCategoryConstants.js",[],"D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\constants\\productConstants.js",[],"D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\constants\\categoryConstants.js",[],"D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\constants\\orderConstants.js",[],"D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\constants\\cartConstants.js",[],"D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\constants\\userConstants.js",[],"D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\screens\\MoreTippy.js",[],"D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\actions\\userAction.js",[],"D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\ZipCodeTracker.js",["1069"],"import React from \"react\";\r\nimport RoomOutlinedIcon from \"@material-ui/icons/RoomOutlined\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport $ from \"jquery\";\r\nconst ZipCodeTracker = () => {\r\n  const getCurrentLocationZipCode = () => {\r\n    let latitude = 0.0;\r\n    let longitude = 0.0;\r\n    const KEY = \"AIzaSyDt-KMX0JInMJHvQ55xBfCGE0YkXh4P7Ys\";\r\n    const errorCB = (err) => {\r\n      console.warn(`ERROR(${err.code}): ${err.message}`);\r\n    };\r\n    const successCB = (pos) => {\r\n      let crd = pos.coords;\r\n      console.log(`Latitude : ${crd.latitude} Longitude: ${crd.longitude}`);\r\n      latitude = `${crd.latitude}`;\r\n      longitude = `${crd.longitude}`;\r\n      const URL = `https://maps.googleapis.com/maps/api/geocode/json?latlng=${latitude},${longitude}&key=${KEY}`;\r\n      console.log(\r\n        `Now Fetching the Zip Code for  ${crd.latitude} Longitude: ${crd.longitude} `\r\n      );\r\n\r\n      fetch(URL)\r\n        .then((response) => response.json())\r\n        .then((results) => {\r\n          console.log(results);\r\n          const zip_code = results.results[0].address_components.find(\r\n            (addr) => addr.types[0] === \"postal_code\"\r\n          ).short_name;\r\n          console.log(\"zip_code : \" + zip_code);\r\n          $(\"#zip_code\").html(\"Deliver to \" + zip_code);\r\n        });\r\n    };\r\n    const accuracyOptions = {\r\n      enableHighAccuracy: true,\r\n    };\r\n    navigator.geolocation.getCurrentPosition(\r\n      successCB,\r\n      errorCB,\r\n      accuracyOptions\r\n    );\r\n  };\r\n  return (\r\n    <div className=\"flex\">\r\n      <RoomOutlinedIcon\r\n        onClick={() => {\r\n          getCurrentLocationZipCode();\r\n        }}\r\n      />\r\n      <div id=\"zip_code\" style={{ fontSize: \"0.85rem\" }}>\r\n        Search city\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ZipCodeTracker;\r\n","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\CategoriesSubMenu.js",[],"D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\Theme.js",[],"D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\screens\\HomeScreen.js",["1070","1071","1072","1073","1074","1075","1076","1077","1078","1079","1080"],"import React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Product from \"../components/Product\";\nimport Message from \"../components/Message\";\nimport { listProducts } from \"../actions/productAction\";\nimport Spinner from \"../components/controls/Spinner\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport {\n  useMediaQuery,\n  Grid,\n  Card,\n  CardMedia,\n  CardContent,\n  Typography,\n} from \"@material-ui/core\";\nimport Image from \"../components/atoms/Image/Image\";\nimport logo from \"../assets/images/logo.jpg\";\n// import { Image, IcontText } from \"../components/atoms\";\n// import { IcontText } from \"../components/atoms/IconText\";\n\nconst useStyles = makeStyles((theme) => ({\n  image: {\n    objectFit: \"contain\",\n    height: 120,\n  },\n  fontWeightBold: {\n    fontWeight: \"bold\",\n  },\n  cardMedia: {\n    padding: theme.spacing(2, 2, 0, 2),\n    display: \"flex\",\n    justifyContent: \"center\",\n  },\n}));\n\nconst HomeScreen = ({ match }) => {\n  // const { className, ...rest } = props;\n  const classes = useStyles();\n\n  const theme = useTheme();\n  const isMd = useMediaQuery(theme.breakpoints.up(\"md\"), {\n    defaultMatches: true,\n  });\n\n  const keyword = match.params.keyword;\n\n  const pageNumber = match.params.pageNumber || 1;\n\n  const dispatch = useDispatch();\n\n  const productList = useSelector((state) => state.productList);\n  const { loading, error, products, page, pages } = productList;\n\n  useEffect(() => {\n    dispatch(listProducts(keyword, pageNumber));\n  }, [dispatch, keyword, pageNumber]);\n\n  return (\n    <>\n      {loading ? (\n        <Spinner />\n      ) : error ? (\n        <Message variant=\"danger\">{error}</Message>\n      ) : (\n        <div>\n          <Grid container spacing={isMd ? 4 : 2}>\n            {products.map((item, index) => (\n              <Grid item xs={12} sm={6} md={3} key={index} data-aos=\"fade-up\">\n                <Product product={item} />\n              </Grid>\n            ))}\n          </Grid>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default HomeScreen;\n","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\screens\\ProductScreen.js",["1081","1082","1083","1084","1085","1086"],"import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport Rating from \"../components/Rating\";\nimport Message from \"../components/Message\";\nimport Spinner from \"../components/controls/Spinner\";\nimport SectionHeader from \"../components/controls/SectionHeader\";\nimport Select from \"@material-ui/core/Select\";\nimport { listProductDetails } from \"../actions/productAction\";\nimport { PRODUCT_CREATE_REVIEW_RESET } from \"../constants/productConstants\";\nimport Image from \"../components/atoms/Image/Image\";\n// import Image from \"./atoms/Image/Image\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport {\n  useMediaQuery,\n  Grid,\n  Button,\n  Icon,\n  MenuItem,\n  Paper,\n} from \"@material-ui/core\";\nimport rupeeSvgIcon from \"../assets/images/currency-inr.svg\";\nimport { Link } from \"react-router-dom\";\nimport logo from \"../assets/images/products/Cashews.jpg\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: \"center\",\n    color: theme.palette.text.secondary,\n  },\n\n  imageFrame: {\n    boxShadow: `0 5px 12px 0 ${theme.palette.cardShadow}`,\n    borderRadius: theme.spacing(1),\n  },\n  listGrid: {\n    overflow: \"hidden\",\n  },\n  partnerImage: {\n    maxWidth: 120,\n  },\n  imageIcon: {\n    height: \"100%\",\n  },\n  iconRoot: {\n    textAlign: \"center\",\n  },\n  image: {\n    objectFit: \"contain\",\n    height: 120,\n  },\n}));\n\nconst ProductScreen = ({ history, match }) => {\n  const [qty, setQty] = useState(1);\n  const classes = useStyles();\n\n  const theme = useTheme();\n  const isMd = useMediaQuery(theme.breakpoints.up(\"md\"), {\n    defaultMatches: true,\n  });\n\n  const dispatch = useDispatch();\n\n  const productDetails = useSelector((state) => state.productDetails);\n  const { loading, error, product } = productDetails;\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  useEffect(() => {\n    if (!product._id || product._id !== match.params.id) {\n      dispatch(listProductDetails(match.params.id));\n    }\n  }, [dispatch, match]);\n\n  const addToCartHandler = () => {\n    history.push(`/cart/${match.params.id}?qty=${qty}`);\n  };\n\n  return (\n    <>\n      {loading ? (\n        <Spinner />\n      ) : error ? (\n        <Message variant=\"danger\">{error}</Message>\n      ) : (\n        <div className={classes.root}>\n          <Grid container spacing={1}>\n            <Grid item xs={12}>\n              <Link\n                className=\"btn\"\n                to=\"/home\"\n                style={{\n                  color: \"white\",\n                  backgroundColor: \"#26A541\",\n                  marginRight: \"5rem\",\n                }}\n              >\n                Go to Supermarket\n              </Link>\n            </Grid>\n\n            <Grid item xs={6}>\n              <Paper className={classes.paper}>\n                <Grid container spacing={2}>\n                  <Grid item xs={12}>\n                    <SectionHeader\n                      title={product.name}\n                      subtitle={product.description}\n                      ctaGroup={[\n                        <Rating\n                          value={product.rating}\n                          text={`${product.numReviews} reviews`}\n                        />,\n                      ]}\n                      align=\"center\"\n                      disableGutter\n                    />\n                  </Grid>\n                  <Grid item xs={12}>\n                    <Grid container spacing={2} data-aos=\"fade-up\">\n                      <Grid item xs={12} align=\"center\">\n                        {/* <Typography variant=\"h6\" align=\"center\"> */}\n                        Price\n                        <Icon classes={{ root: classes.iconRoot }}>\n                          <img\n                            alt=\"curency inr\"\n                            src={rupeeSvgIcon}\n                            className={classes.imageIcon}\n                          />\n                        </Icon>{\" \"}\n                        {product.price}\n                        {/* </Typography> */}\n                      </Grid>\n                      <Grid item xs={12} align=\"center\">\n                        {/* <Typography variant=\"h6\" color=\"primary\" align=\"center\"> */}\n                        In Stock ?{product.countInStock}\n                        {/* </Typography> */}\n                      </Grid>\n                      <Grid item xs={12}>\n                        <Grid container spacing={2}>\n                          <Grid item xs={6} align=\"right\">\n                            {/* <Typography variant=\"h6\" align=\"right\"> */}\n                            Quantity {product.qty}\n                            {/* </Typography> */}\n                          </Grid>\n                          <Grid item xs={6}>\n                            <Select\n                              value={qty}\n                              align=\"center\"\n                              onChange={(e) => setQty(e.target.value)}\n                            >\n                              {[...Array(product.countInStock).keys()].map(\n                                (x) => (\n                                  <MenuItem key={x + 1} value={x + 1}>\n                                    {x + 1}\n                                  </MenuItem>\n                                )\n                              )}\n                            </Select>\n                          </Grid>\n                        </Grid>\n                      </Grid>\n                      <Grid item xs={12} align=\"center\">\n                        <Button\n                          align=\"center\"\n                          size=\"small\"\n                          variant=\"contained\"\n                          type=\"submit\"\n                          color=\"primary\"\n                          onClick={addToCartHandler}\n                        >\n                          Add To Cart\n                        </Button>\n                      </Grid>\n                    </Grid>\n                  </Grid>\n                </Grid>\n              </Paper>\n            </Grid>\n            <Grid item xs={6}>\n              <Paper className={classes.paper}>\n                <img\n                  alt=\"productImage\"\n                  src={product.image}\n                  className={classes.imageIcon}\n                />\n              </Paper>\n            </Grid>\n          </Grid>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default ProductScreen;\n","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\screens\\ShippingScreen.js",["1087","1088","1089","1090","1091","1092","1093","1094","1095","1096","1097","1098","1099"],"import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport CheckoutSteps from \"../components/CheckoutSteps\";\nimport { saveShippingAddress } from \"../actions/cartAction\";\nimport { Link } from \"react-router-dom\";\nimport {\n  useMediaQuery,\n  Grid,\n  Typography,\n  Button,\n  Select,\n  IconButton,\n  Paper,\n  FormControlLabel,\n  FormGroup,\n  Input,\n  TextField,\n  FormControl,\n  InputLabel,\n  FormHelperText,\n  FormLabel,\n} from \"@material-ui/core\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport { addToCart, removeFromCart } from \"../actions/cartAction\";\nimport rupeeSvgIcon from \"../assets/images/currency-inr.svg\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    justifyContent: \"center\",\n  },\n  paper: {\n    height: \"100%\",\n    width: \"150vh\",\n    padding: \"2rem\",\n  },\n  control: {\n    padding: theme.spacing(2),\n  },\n}));\n\nconst ShippingScreen = ({ history }) => {\n  const [spacing, setSpacing] = React.useState(2);\n  const classes = useStyles();\n  const theme = useTheme();\n  const isMd = useMediaQuery(theme.breakpoints.up(\"md\"), {\n    defaultMatches: true,\n  });\n  const cart = useSelector((state) => state.cart);\n  const { shippingAddress } = cart;\n\n  const [address, setAddress] = useState(shippingAddress.address);\n  const [city, setCity] = useState(shippingAddress.city);\n  const [postalCode, setPostalCode] = useState(shippingAddress.postalCode);\n  const [country, setCountry] = useState(shippingAddress.country);\n  const [formState, setFormState] = React.useState({\n    isValid: false,\n    values: {},\n    touched: {},\n    errors: {},\n  });\n\n  const dispatch = useDispatch();\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(saveShippingAddress({ address, city, postalCode, country }));\n    history.push(\"/payment\");\n  };\n  const hasError = (field) =>\n    formState.touched[field] && formState.errors[field] ? true : false;\n\n  return (\n    <>\n      <CheckoutSteps step1 step2 />\n\n      <Grid container className={classes.root} spacing={2}>\n        <Grid item xs={12}>\n          <Grid container justify=\"center\" spacing={spacing}>\n            <Grid item>\n              <Paper className={classes.paper}>\n                <form className={classes.container} onSubmit={submitHandler}>\n                  <Grid container className={classes.root} spacing={2}>\n                    <Grid item xs={6}>\n                      <FormLabel component=\"legend\">Shipping Details</FormLabel>\n                    </Grid>\n                    <Grid item xs={6}>\n                      <Link\n                        style={{\n                          color: \"white\",\n                          backgroundColor: \"#26A541\",\n                        }}\n                        className=\"btn\"\n                        to=\"/home\"\n                      >\n                        Go to Supermarket\n                      </Link>\n                    </Grid>\n                  </Grid>\n\n                  <Grid container className={classes.root} spacing={2}>\n                    <Grid item xs={12} container justify=\"center\">\n                      <FormControl>\n                        <InputLabel htmlFor=\"address-input\">Address</InputLabel>\n                        <Input\n                          id=\"address-input\"\n                          aria-describedby=\"address-input-helper-text\"\n                          name=\"address\"\n                          error={hasError(\"address\")}\n                          onChange={(e) => setAddress(e.target.value)}\n                          value={address}\n                        />\n                      </FormControl>\n                    </Grid>\n                    <Grid item xs={12} container justify=\"center\">\n                      <FormControl>\n                        <InputLabel htmlFor=\"city-input\">City</InputLabel>\n                        <Input\n                          id=\"city-input\"\n                          aria-describedby=\"city-input-helper-text\"\n                          name=\"city\"\n                          error={hasError(\"city\")}\n                          onChange={(e) => setCity(e.target.value)}\n                          value={city}\n                        />\n                      </FormControl>\n                    </Grid>\n                    <Grid item xs={12} container justify=\"center\">\n                      <FormControl>\n                        <InputLabel htmlFor=\"postalcode-input\">\n                          Postal Code\n                        </InputLabel>\n                        <Input\n                          id=\"postalcode-input\"\n                          aria-describedby=\"postalcode-input-helper-text\"\n                          name=\"postalcode\"\n                          error={hasError(\"postalcode\")}\n                          onChange={(e) => setPostalCode(e.target.value)}\n                          value={postalCode}\n                        />\n                      </FormControl>\n                    </Grid>\n                    <Grid item xs={12} container justify=\"center\">\n                      <FormControl>\n                        <InputLabel htmlFor=\"country-input\">Country</InputLabel>\n                        <Input\n                          id=\"country-input\"\n                          aria-describedby=\"country-input-helper-text\"\n                          name=\"country\"\n                          error={hasError(\"country\")}\n                          onChange={(e) => setCountry(e.target.value)}\n                          value={country}\n                        />\n                      </FormControl>\n                    </Grid>\n                    <Grid item xs={12} container justify=\"center\">\n                      <Button\n                        size=\"small\"\n                        variant=\"contained\"\n                        type=\"submit\"\n                        color=\"primary\"\n                      >\n                        Continue\n                      </Button>\n                    </Grid>\n                  </Grid>\n                </form>\n              </Paper>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default ShippingScreen;\n","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\screens\\RegisterScreen.js",["1100","1101","1102","1103","1104","1105"],"import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\n// import { Form, Button, Row, Col } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../components/Message\";\nimport Spinner from \"../components/controls/Spinner\";\nimport { register } from \"../actions/userAction\";\n\nconst RegisterScreen = ({ location, history }) => {\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [message, setMessage] = useState(null);\n\n  const dispatch = useDispatch();\n\n  const userRegister = useSelector((state) => state.userRegister);\n  const { loading, error, userInfo } = userRegister;\n\n  const redirect = location.search ? location.search.split(\"=\")[1] : \"/\";\n\n  useEffect(() => {\n    if (userInfo) {\n      history.push(redirect);\n    }\n  }, [history, userInfo, redirect]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    if (password !== confirmPassword) {\n      setMessage(\"Passwords do not match\");\n    } else {\n      dispatch(register(name, email, password));\n    }\n  };\n\n  return (\n    <>\n      <h1>Sign Up</h1>\n      {message && <Message variant=\"danger\">{message}</Message>}\n      {error && <Message variant=\"danger\">{error}</Message>}\n      {loading && <Spinner />}\n      {/* <Form onSubmit={submitHandler}>\n        <Form.Group controlId=\"name\">\n          <Form.Label>Name</Form.Label>\n          <Form.Control\n            type=\"name\"\n            placeholder=\"Enter name\"\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId=\"email\">\n          <Form.Label>Email Address</Form.Label>\n          <Form.Control\n            type=\"email\"\n            placeholder=\"Enter email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId=\"password\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            placeholder=\"Enter password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId=\"confirmPassword\">\n          <Form.Label>Confirm Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            placeholder=\"Confirm password\"\n            value={confirmPassword}\n            onChange={(e) => setConfirmPassword(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Button type=\"submit\" variant=\"primary\">\n          Register\n        </Button>\n      </Form>\n\n      <Row className=\"py-3\">\n        <Col>\n          Have an Account?{\" \"}\n          <Link to={redirect ? `/login?redirect=${redirect}` : \"/login\"}>\n            Login\n          </Link>\n        </Col>\n      </Row> */}\n    </>\n  );\n};\n\nexport default RegisterScreen;\n","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\screens\\CartScreen.js",["1106","1107","1108","1109","1110","1111","1112","1113","1114","1115","1116"],"D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\screens\\LoginScreen.js",["1117","1118","1119"],"import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../components/Message\";\nimport Spinner from \"../components/controls/Spinner\";\nimport { login } from \"../actions/userAction\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Typography, Grid, Button, TextField, Paper } from \"@material-ui/core\";\nimport validate from \"validate.js\";\nimport { Link } from \"react-router-dom\";\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    height: \"30vh\",\n    width: \"50vh\",\n  },\n  inputText: {\n    margin: \"auto\",\n    padding: \"1rem\",\n    alignContent: \"center\",\n  },\n  customBtnStyle: {\n    margin: \"auto\",\n    padding: \"1rem\",\n    alignContent: \"center\",\n  },\n}));\n\nconst schema = {\n  email: {\n    presence: { allowEmpty: false, message: \"is required\" },\n    email: true,\n    length: {\n      maximum: 300,\n    },\n  },\n  password: {\n    presence: { allowEmpty: false, message: \"is required\" },\n    length: {\n      maximum: 300,\n    },\n  },\n};\n\nconst LoginScreen = ({ location, history }) => {\n  const classes = useStyles();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [formState, setFormState] = React.useState({\n    isValid: false,\n    values: {},\n    touched: {},\n    errors: {},\n  });\n  const dispatch = useDispatch();\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { loading, error, userInfo } = userLogin;\n\n  const redirect = location.search ? location.search.split(\"=\")[1] : \"/home\";\n\n  useEffect(() => {\n    if (userInfo) {\n      history.push(redirect);\n    }\n  }, [history, userInfo, redirect]);\n\n  React.useEffect(() => {\n    const errors = validate(formState.values, schema);\n\n    setFormState((formState) => ({\n      ...formState,\n      isValid: errors ? false : true,\n      errors: errors || {},\n    }));\n  }, [formState.values]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(login(email, password));\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    if (formState.isValid) {\n      window.location.replace(\"/\");\n    }\n\n    setFormState((formState) => ({\n      ...formState,\n      touched: {\n        ...formState.touched,\n        ...formState.errors,\n      },\n    }));\n  };\n  const handleChange = (event) => {\n    event.persist();\n\n    setFormState((formState) => ({\n      ...formState,\n      values: {\n        ...formState.values,\n        [event.target.name]:\n          event.target.type === \"checkbox\"\n            ? event.target.checked\n            : event.target.value,\n      },\n      touched: {\n        ...formState.touched,\n        [event.target.name]: true,\n      },\n    }));\n  };\n  \n  const hasError = (field) =>\n    formState.touched[field] && formState.errors[field] ? true : false;\n\n  return (\n    <>\n      {error && <Message variant=\"danger\">{error}</Message>}\n      {loading && <Spinner />}\n\n      <Grid container className={classes.root} spacing={2} justify=\"center\">\n        <Grid item xs={12}>\n          <Grid container justify=\"center\" spacing={1}>\n            <Grid item>\n              <form onSubmit={submitHandler}>\n                <Paper className={classes.paper}>\n                  <Grid item xs={12}>\n                    <TextField\n                      className={classes.inputText}\n                      align=\"center\"\n                      placeholder=\"E-mail\"\n                      label=\"E-mail *\"\n                      variant=\"outlined\"\n                      size=\"small\"\n                      name=\"email\"\n                      fullWidth\n                      helperText={\n                        hasError(\"email\") ? formState.errors.email[0] : null\n                      }\n                      error={hasError(\"email\")}\n                      onChange={(e) => setEmail(e.target.value)}\n                      type=\"email\"\n                      value={email}\n                    />\n                  </Grid>\n                  <Grid item xs={12}>\n                    <TextField\n                      className={classes.inputText}\n                      placeholder=\"Password\"\n                      label=\"Password*\"\n                      variant=\"outlined\"\n                      size=\"small\"\n                      name=\"password\"\n                      fullWidth\n                      helperText={\n                        hasError(\"password\")\n                          ? formState.errors.password[0]\n                          : null\n                      }\n                      error={hasError(\"password\")}\n                      onChange={(e) => setPassword(e.target.value)}\n                      type=\"password\"\n                      value={password}\n                    />\n                  </Grid>\n\n                  <Grid item xs={12}>\n                    <Grid container>\n                      <Grid item xs={12}>\n                        <Button\n                          fullWidth\n                          className={classes.customBtnStyle}\n                          size=\"small\"\n                          variant=\"contained\"\n                          type=\"submit\"\n                          color=\"primary\"\n                        >\n                          Sign In\n                        </Button>\n                      </Grid>\n                      <Grid item xs={12} style={{ alignContent: \"center\" }}>\n                        New Customer?{\" \"}\n                        <Link\n                          to={\n                            redirect\n                              ? `/register?redirect=${redirect}`\n                              : \"/register\"\n                          }\n                        >\n                          Register\n                        </Link>\n                      </Grid>\n                    </Grid>\n                  </Grid>\n                </Paper>\n              </form>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default LoginScreen;\n","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\screens\\PaymentScreen.js",[],"D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\screens\\PlaceOrderScreen.js",["1120","1121","1122","1123","1124","1125","1126","1127","1128","1129","1130","1131","1132"],"import React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../components/Message\";\nimport CheckoutSteps from \"../components/CheckoutSteps\";\nimport { createOrder } from \"../actions/orderAction\";\nimport { ORDER_CREATE_RESET } from \"../constants/orderConstants\";\nimport { USER_DETAILS_RESET } from \"../constants/userConstants\";\nimport {\n  Button,\n  FormLabel,\n  Paper,\n  useMediaQuery,\n  Grid,\n  Typography,\n  Select,\n  IconButton,\n  FormControlLabel,\n  FormGroup,\n  Input,\n  TextField,\n  FormControl,\n  InputLabel,\n  FormHelperText,\n  Icon,\n} from \"@material-ui/core\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport { Image } from \"@material-ui/icons\";\nimport { Divider } from \"@material-ui/core\";\nimport rupeeSvgIcon from \"../assets/images/currency-inr.svg\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    justifyContent: \"center\",\n  },\n  imageIcon: {\n    height: \"100%\",\n  },\n  paper: {\n    height: \"100%\",\n    width: \"150vh\",\n    padding: \".5rem\",\n  },\n  control: {\n    padding: theme.spacing(2),\n  },\n  link: {\n    color: \"white\",\n    backgroundColor: \"#26A541\",\n  },\n  iconRoot: {\n    textAlign: \"center\",\n  },\n}));\nconst PlaceOrderScreen = ({ history }) => {\n  const classes = useStyles();\n  const theme = useTheme();\n  const isMd = useMediaQuery(theme.breakpoints.up(\"md\"), {\n    defaultMatches: true,\n  });\n\n  const dispatch = useDispatch();\n  const cart = useSelector((state) => state.cart);\n\n  if (!cart.shippingAddress.address) {\n    history.push(\"/shipping\");\n  } else if (!cart.paymentMethod) {\n    history.push(\"/payment\");\n  }\n  //   Calculate prices\n  const addDecimals = (num) => {\n    return (Math.round(num * 100) / 100).toFixed(2);\n  };\n\n  cart.itemsPrice = addDecimals(\n    cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0)\n  );\n  cart.shippingPrice = addDecimals(cart.itemsPrice > 100 ? 0 : 100);\n  cart.taxPrice = addDecimals(Number((0.15 * cart.itemsPrice).toFixed(2)));\n  cart.totalPrice = (\n    Number(cart.itemsPrice) +\n    Number(cart.shippingPrice) +\n    Number(cart.taxPrice)\n  ).toFixed(2);\n\n  const orderCreate = useSelector((state) => state.orderCreate);\n  const { order, success, error } = orderCreate;\n\n  useEffect(() => {\n    if (success) {\n      history.push(`/order/${order._id}`);\n      dispatch({ type: USER_DETAILS_RESET });\n      dispatch({ type: ORDER_CREATE_RESET });\n    }\n    // eslint-disable-next-line\n  }, [history, success]);\n\n  const placeOrderHandler = () => {\n    dispatch(\n      createOrder({\n        orderItems: cart.cartItems,\n        shippingAddress: cart.shippingAddress,\n        paymentMethod: cart.paymentMethod,\n        itemsPrice: cart.itemsPrice,\n        shippingPrice: cart.shippingPrice,\n        taxPrice: cart.taxPrice,\n        totalPrice: cart.totalPrice,\n      })\n    );\n  };\n\n  return (\n    <>\n      {/* <CheckoutSteps step1 step2 step3 /> */}\n      <Grid container className={classes.root} spacing={2}>\n        <Grid item xs={8} container justify=\"center\">\n          <Paper className={classes.paper}>\n            <form onSubmit={placeOrderHandler}>\n              <Grid container className={classes.root} spacing={1}>\n                <Grid item xs={6}>\n                  <FormLabel component=\"legend\">Order Details</FormLabel>\n                </Grid>\n                <Grid item xs={6}>\n                  <Link\n                    style={{\n                      color: \"white\",\n                      backgroundColor: \"#26A541\",\n                    }}\n                    className=\"btn\"\n                    to=\"/home\"\n                  >\n                    Go to Supermarket\n                  </Link>\n                </Grid>\n              </Grid>\n              <Divider />\n              <Grid item container>\n                <Grid item xs={2} container justify=\"flex-start\">\n                  Shipping Details\n                </Grid>\n                <Grid item xs={10}>\n                  <Grid container>\n                    <Grid item xs={12}>\n                      {\"\"}\n                      {cart.shippingAddress.address}\n                    </Grid>\n                    <Grid item xs={12}>\n                      {cart.shippingAddress.city}\n                    </Grid>\n                    <Grid item xs={12}>\n                      {cart.shippingAddress.postalCode}\n                    </Grid>\n                    <Grid item xs={12}>\n                      {cart.shippingAddress.country}\n                    </Grid>\n                  </Grid>\n\n                  {/* {cart.shippingAddress.city}\n                  {cart.shippingAddress.postalCode}\n                  {cart.shippingAddress.country} */}\n                </Grid>\n              </Grid>\n              <Divider />\n              <Grid item container>\n                {/* <Grid item xs={2} container justify=\"flex-start\">\n                  Item Details\n                </Grid> */}\n                <Grid item xs={12} container>\n                  {cart.cartItems.length === 0 ? (\n                    <Message>Your cart is empty</Message>\n                  ) : (\n                    <Grid conatiner row>\n                      {cart.cartItems.map((item, index) => (\n                        <Grid item key={index}>\n                          <Grid container>\n                            <Grid item xs={3}>\n                              <img\n                                className=\"img-thumbnail\"\n                                src={item.image}\n                                alt={item.name}\n                                style={{\n                                  height: \"3.5rem\",\n                                  width: \"3.5rem\",\n                                  // justify: \"flex-start\",\n                                  marginRight: \"5rem\",\n                                }}\n                              />\n                            </Grid>\n                            <Grid item xs={3}>\n                              <Link\n                                to={`/product/${item.product}`}\n                                style={{\n                                  justify: \"center\",\n                                  marginRight: \"5rem\",\n                                }}\n                              >\n                                {item.name}\n                              </Link>\n                            </Grid>\n                            <Grid item xs={3}>\n                              {item.qty} x{\" \"}\n                              <Icon classes={{ root: classes.iconRoot }}>\n                                <img alt=\"curency inr\" src={rupeeSvgIcon} />\n                              </Icon>\n                              {item.price}=\n                            </Grid>\n                            <Grid item xs={3} align=\"right\">\n                              <Icon classes={{ root: classes.iconRoot }}>\n                                <img\n                                  alt=\"curency inr\"\n                                  src={rupeeSvgIcon}\n                                  className={classes.imageIcon}\n                                />\n                              </Icon>\n                              {item.qty * item.price}\n                            </Grid>\n                          </Grid>\n                          <Divider />\n                        </Grid>\n                      ))}\n                    </Grid>\n                  )}\n                </Grid>\n              </Grid>\n            </form>\n          </Paper>\n        </Grid>\n        <Grid item xs={4} container justify=\"center\">\n          <Paper className={classes.paper}>\n            {/* <form onSubmit={placeOrderHandler}> */}\n            <FormLabel component=\"legend\"> Order Summary</FormLabel>\n            <Divider />\n            <Grid\n              container\n              spacing={1}\n              row\n              justifyContent=\"center\"\n              justify=\"center\"\n            >\n              <Grid item xs={12} justifyContent=\"center\" justify=\"center\">\n                <Grid container>\n                  <Grid item xs={6}>\n                    Items Cost\n                  </Grid>\n                  <Grid item xs={6}>\n                    <Icon classes={{ root: classes.iconRoot }}>\n                      <img alt=\"curency inr\" src={rupeeSvgIcon} />\n                    </Icon>\n                    {cart.itemsPrice}\n                  </Grid>\n                </Grid>\n              </Grid>\n              <Divider />\n              <Grid item xs={12}>\n                <Grid container>\n                  <Grid item xs={6}>\n                    Shipping Cost\n                  </Grid>\n                  <Grid item xs={6}>\n                    <Icon classes={{ root: classes.iconRoot }}>\n                      <img alt=\"curency inr\" src={rupeeSvgIcon} />\n                    </Icon>\n                    {cart.shippingPrice}\n                  </Grid>\n                </Grid>\n              </Grid>\n              <Grid item xs={12}>\n                <Grid container>\n                  <Grid item xs={6}>\n                    Tax\n                  </Grid>\n                  <Grid item xs={6}>\n                    <Icon classes={{ root: classes.iconRoot }}>\n                      <img alt=\"curency inr\" src={rupeeSvgIcon} />\n                    </Icon>\n                    {cart.taxPrice}\n                  </Grid>\n                </Grid>\n              </Grid>\n              <Grid item xs={12}>\n                <Grid container>\n                  <Grid item xs={6}>\n                    Total\n                  </Grid>\n                  <Grid item xs={6}>\n                    <Icon classes={{ root: classes.iconRoot }}>\n                      <img alt=\"curency inr\" src={rupeeSvgIcon} />\n                    </Icon>\n                    {cart.totalPrice}\n                  </Grid>\n                </Grid>\n              </Grid>\n              <Grid item xs={12}>\n                {error && <Message variant=\"danger\">{error}</Message>}\n              </Grid>\n              <Grid item xs={12} align=\"center\">\n                <Button\n                  size=\"small\"\n                  variant=\"contained\"\n                  type=\"submit\"\n                  color=\"primary\"\n                  onClick={placeOrderHandler}\n                  disabled={cart.cartItems === 0}\n                  justify=\"center\"\n                >\n                  Place Order\n                </Button>\n              </Grid>\n            </Grid>\n            {/* </form> */}\n          </Paper>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default PlaceOrderScreen;\n","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\screens\\ProfileScreen.js",["1133","1134","1135","1136","1137","1138","1139","1140","1141","1142","1143"],"import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../components/Message\";\nimport Spinner from \"../components/controls/Spinner\";\nimport { getUserDetails, updateUserProfile } from \"../actions/userAction\";\nimport { listMyOrders } from \"../actions/orderAction\";\nimport { USER_UPDATE_PROFILE_RESET } from \"../constants/userConstants\";\n\nconst ProfileScreen = ({ location, history }) => {\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [message, setMessage] = useState(null);\n\n  const dispatch = useDispatch();\n\n  const userDetails = useSelector((state) => state.userDetails);\n  const { loading, error, user } = userDetails;\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const userUpdateProfile = useSelector((state) => state.userUpdateProfile);\n  const { success } = userUpdateProfile;\n\n  const orderListMy = useSelector((state) => state.orderListMy);\n  const { loading: loadingOrders, error: errorOrders, orders } = orderListMy;\n\n  useEffect(() => {\n    if (!userInfo) {\n      history.push(\"/login\");\n    } else {\n      if (!user || !user.name || success) {\n        dispatch({ type: USER_UPDATE_PROFILE_RESET });\n        dispatch(getUserDetails(\"profile\"));\n        dispatch(listMyOrders());\n      } else {\n        setName(user.name);\n        setEmail(user.email);\n      }\n    }\n  }, [dispatch, history, userInfo, user, success]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    if (password !== confirmPassword) {\n      setMessage(\"Passwords do not match\");\n    } else {\n      dispatch(updateUserProfile({ id: user._id, name, email, password }));\n    }\n  };\n\n  return (\n    // <Row>\n    //   <Col md={3}>\n    //     <h2>User Profile</h2>\n    //     {message && <Message variant=\"danger\">{message}</Message>}\n    //     {}\n    //     {success && <Message variant=\"success\">Profile Updated</Message>}\n    //     {loading ? (\n    //       <Spinner />\n    //     ) : error ? (\n    //       <Message variant=\"danger\">{error}</Message>\n    //     ) : (\n    //       <Form onSubmit={submitHandler}>\n    //         <Form.Group controlId=\"name\">\n    //           <Form.Label>Name</Form.Label>\n    //           <Form.Control\n    //             type=\"name\"\n    //             placeholder=\"Enter name\"\n    //             value={name}\n    //             onChange={(e) => setName(e.target.value)}\n    //           ></Form.Control>\n    //         </Form.Group>\n\n    //         <Form.Group controlId=\"email\">\n    //           <Form.Label>Email Address</Form.Label>\n    //           <Form.Control\n    //             type=\"email\"\n    //             placeholder=\"Enter email\"\n    //             value={email}\n    //             onChange={(e) => setEmail(e.target.value)}\n    //           ></Form.Control>\n    //         </Form.Group>\n\n    //         <Form.Group controlId=\"password\">\n    //           <Form.Label>Password</Form.Label>\n    //           <Form.Control\n    //             type=\"password\"\n    //             placeholder=\"Enter password\"\n    //             value={password}\n    //             onChange={(e) => setPassword(e.target.value)}\n    //           ></Form.Control>\n    //         </Form.Group>\n\n    //         <Form.Group controlId=\"confirmPassword\">\n    //           <Form.Label>Confirm Password</Form.Label>\n    //           <Form.Control\n    //             type=\"password\"\n    //             placeholder=\"Confirm password\"\n    //             value={confirmPassword}\n    //             onChange={(e) => setConfirmPassword(e.target.value)}\n    //           ></Form.Control>\n    //         </Form.Group>\n\n    //         <Button type=\"submit\" variant=\"primary\">\n    //           Update\n    //         </Button>\n    //       </Form>\n    //     )}\n    //   </Col>\n    //   <Col md={9}>\n    //     <h2>My Orders</h2>\n    //     {loadingOrders ? (\n    //       <Spinner />\n    //     ) : errorOrders ? (\n    //       <Message variant=\"danger\">{errorOrders}</Message>\n    //     ) : (\n    //       <Table striped bordered hover responsive className=\"table-sm\">\n    //         <thead>\n    //           <tr>\n    //             <th>ID</th>\n    //             <th>DATE</th>\n    //             <th>TOTAL</th>\n    //             <th>PAID</th>\n    //             <th>DELIVERED</th>\n    //             <th></th>\n    //           </tr>\n    //         </thead>\n    //         <tbody>\n    //           {orders.map((order) => (\n    //             <tr key={order._id}>\n    //               <td>{order._id}</td>\n    //               <td>{order.createdAt.substring(0, 10)}</td>\n    //               <td>{order.totalPrice}</td>\n    //               <td>\n    //                 {order.isPaid ? (\n    //                   order.paidAt.substring(0, 10)\n    //                 ) : (\n    //                   <i className=\"fas fa-times\" style={{ color: \"red\" }}></i>\n    //                 )}\n    //               </td>\n    //               <td>\n    //                 {order.isDelivered ? (\n    //                   order.deliveredAt.substring(0, 10)\n    //                 ) : (\n    //                   <i className=\"fas fa-times\" style={{ color: \"red\" }}></i>\n    //                 )}\n    //               </td>\n    //               <td>\n    //                 <LinkContainer to={`/order/${order._id}`}>\n    //                   <Button className=\"btn-sm\" variant=\"light\">\n    //                     Details\n    //                   </Button>\n    //                 </LinkContainer>\n    //               </td>\n    //             </tr>\n    //           ))}\n    //         </tbody>\n    //       </Table>\n    //     )}\n    //   </Col>\n    // </Row>\n    <div>Profile Screen</div>\n  );\n};\n\nexport default ProfileScreen;\n","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\screens\\UserListScreen.js",[],"D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\screens\\DashboardScreen.js",["1144","1145","1146","1147","1148","1149","1150","1151"],"import React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Writeup from \"../components/Writeup\";\nimport { listProducts } from \"../actions/productAction\";\nimport DashboardGrid from \"./DashboardGrid\";\nimport MainCarousel from \"./MainCarousel\";\n\nconst DashboardScreen = ({ match }) => {\n  const keyword = match.params.keyword;\n\n  const pageNumber = match.params.pageNumber || 1;\n\n  const dispatch = useDispatch();\n\n  const productList = useSelector((state) => state.productList);\n  const { loading, error, products, page, pages } = productList;\n\n  useEffect(() => {\n    dispatch(listProducts(keyword, pageNumber));\n  }, [dispatch, keyword, pageNumber]);\n\n  return (\n    <>\n      {/* <Writeup /> */}\n      <DashboardGrid style={{ marginBottom: \"2rem\" }} />\n      {/* <MainCarousel style={{ marginTop: \"5rem\" }} /> */}\n    </>\n  );\n};\n\nexport default DashboardScreen;\n","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\screens\\OrderScreen.js",["1152","1153","1154","1155","1156","1157","1158","1159","1160","1161"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../components/Message\";\nimport Spinner from \"../components/controls/Spinner\";\nimport {\n  getOrderDetails,\n  payOrder,\n  deliverOrder,\n} from \"../actions/orderAction\";\nimport {\n  ORDER_PAY_RESET,\n  ORDER_DELIVER_RESET,\n} from \"../constants/orderConstants\";\nimport RupeeIcon from \"../components/controls/RupeeIcon\";\n\nconst OrderScreen = ({ match, history }) => {\n  const orderId = match.params.id;\n\n  const [sdkReady, setSdkReady] = useState(false);\n\n  const dispatch = useDispatch();\n\n  const orderDetails = useSelector((state) => state.orderDetails);\n  const { order, loading, error } = orderDetails;\n\n  const orderPay = useSelector((state) => state.orderPay);\n  const { loading: loadingPay, success: successPay } = orderPay;\n\n  const orderDeliver = useSelector((state) => state.orderDeliver);\n  const { loading: loadingDeliver, success: successDeliver } = orderDeliver;\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  if (!loading) {\n    //   Calculate prices\n    const addDecimals = (num) => {\n      return (Math.round(num * 100) / 100).toFixed(2);\n    };\n\n    order.itemsPrice = addDecimals(\n      order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0)\n    );\n  }\n\n  useEffect(() => {\n    if (!userInfo) {\n      history.push(\"/login\");\n    }\n\n    if (!order || successPay || successDeliver || order._id !== orderId) {\n      dispatch({ type: ORDER_PAY_RESET });\n      dispatch({ type: ORDER_DELIVER_RESET });\n      dispatch(getOrderDetails(orderId));\n    } else if (!order.isPaid) {\n    }\n  }, [dispatch, orderId, successPay, successDeliver, order]);\n\n  const successPaymentHandler = (paymentResult) => {\n    console.log(paymentResult);\n    dispatch(payOrder(orderId, paymentResult));\n  };\n\n  const deliverHandler = () => {\n    dispatch(deliverOrder(order));\n  };\n\n  return loading ? (\n    <Spinner />\n  ) : error ? (\n    <Message variant=\"danger\">{error}</Message>\n  ) : (\n    <>\n      <h1>Order {order._id}</h1>\n      {/* <Row>\n        <Col md={8}>\n          <ListGroup variant=\"flush\">\n            <ListGroup.Item>\n              <h2>Shipping</h2>\n              <p>\n                <strong>Name: </strong> {order.user.name}\n              </p>\n              <p>\n                <strong>Email: </strong>{\" \"}\n                <a href={`mailto:${order.user.email}`}>{order.user.email}</a>\n              </p>\n              <p>\n                <strong>Address:</strong>\n                {order.shippingAddress.address}, {order.shippingAddress.city}{\" \"}\n                {order.shippingAddress.postalCode},{\" \"}\n                {order.shippingAddress.country}\n              </p>\n              {order.isDelivered ? (\n                <Message variant=\"success\">\n                  Delivered on {order.deliveredAt}\n                </Message>\n              ) : (\n                <Message variant=\"danger\">Not Delivered</Message>\n              )}\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <h2>Payment Method</h2>\n              <p>\n                <strong>Method: </strong>\n                {order.paymentMethod}\n              </p>\n              {order.isPaid ? (\n                <Message variant=\"success\">Paid on {order.paidAt}</Message>\n              ) : (\n                <Message variant=\"danger\">Not Paid</Message>\n              )}\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <h2>Order Items</h2>\n              {order.orderItems.length === 0 ? (\n                <Message>Order is empty</Message>\n              ) : (\n                <ListGroup variant=\"flush\">\n                  {order.orderItems.map((item, index) => (\n                    <ListGroup.Item key={index}>\n                      <Row>\n                        <Col md={1}>\n                          <Image\n                            src={item.image}\n                            alt={item.name}\n                            fluid\n                            rounded\n                          />\n                        </Col>\n                        <Col>\n                          <Link to={`/product/${item.product}`}>\n                            {item.name}\n                          </Link>\n                        </Col>\n                        <Col md={4}>\n                          {item.qty} x{\" \"}\n                          <span style={{ position: \"absolute\", right: \"1px\" }}>\n                            <RupeeIcon />\n                          </span>{\" \"}\n                          {item.price} ={\" \"}\n                          <span style={{ position: \"absolute\", right: \"1px\" }}>\n                            <RupeeIcon />\n                          </span>{\" \"}\n                          {item.qty * item.price}\n                        </Col>\n                      </Row>\n                    </ListGroup.Item>\n                  ))}\n                </ListGroup>\n              )}\n            </ListGroup.Item>\n          </ListGroup>\n        </Col>\n        <Col md={4}>\n          <Card>\n            <ListGroup variant=\"flush\">\n              <ListGroup.Item>\n                <h2>Order Summary</h2>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Items</Col>\n                  <Col>\n                    <span style={{ position: \"absolute\", right: \"1px\" }}>\n                      <RupeeIcon />\n                    </span>{\" \"}\n                    {order.itemsPrice}\n                  </Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Shipping</Col>\n                  <Col>\n                    <span style={{ position: \"absolute\", right: \"1px\" }}>\n                      <RupeeIcon />\n                    </span>{\" \"}\n                    {order.shippingPrice}\n                  </Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Tax</Col>\n                  <Col>\n                    <span style={{ position: \"absolute\", right: \"1px\" }}>\n                      <RupeeIcon />\n                    </span>{\" \"}\n                    {order.taxPrice}\n                  </Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Total</Col>\n                  <Col>\n                    <span style={{ position: \"absolute\", right: \"1px\" }}>\n                      <RupeeIcon />\n                    </span>{\" \"}\n                    {order.totalPrice}\n                  </Col>\n                </Row>\n              </ListGroup.Item>\n              {!order.isPaid && (\n                <ListGroup.Item>\n                  {loadingPay && <Spinner />}\n                  {!sdkReady ? (\n                    <Spinner />\n                  ) : (\n                    <Button\n                      amount={order.totalPrice}\n                      onSuccess={successPaymentHandler}\n                    />\n                  )}\n                </ListGroup.Item>\n              )}\n              {loadingDeliver && <Spinner />}\n              {userInfo &&\n                userInfo.isAdmin &&\n                order.isPaid &&\n                !order.isDelivered && (\n                  <ListGroup.Item>\n                    <Button\n                      type=\"button\"\n                      className=\"btn btn-block\"\n                      onClick={deliverHandler}\n                    >\n                      Mark As Delivered\n                    </Button>\n                  </ListGroup.Item>\n                )}\n            </ListGroup>\n          </Card>\n        </Col>\n      </Row> */}\n    </>\n  );\n};\n\nexport default OrderScreen;\n","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\screens\\UserEditScreen.js",["1162","1163","1164","1165","1166","1167","1168","1169"],"import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../components/Message\";\nimport Spinner from \"../components/controls/Spinner\";\nimport { getUserDetails, updateUser } from \"../actions/userAction\";\nimport { USER_UPDATE_RESET } from \"../constants/userConstants\";\n\nconst UserEditScreen = ({ match, history }) => {\n  const userId = match.params.id;\n\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [isAdmin, setIsAdmin] = useState(false);\n\n  const dispatch = useDispatch();\n\n  const userDetails = useSelector((state) => state.userDetails);\n  const { loading, error, user } = userDetails;\n\n  const userUpdate = useSelector((state) => state.userUpdate);\n  const {\n    loading: loadingUpdate,\n    error: errorUpdate,\n    success: successUpdate,\n  } = userUpdate;\n\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({ type: USER_UPDATE_RESET });\n      history.push(\"/admin/userlist\");\n    } else {\n      if (!user.name || user._id !== userId) {\n        dispatch(getUserDetails(userId));\n      } else {\n        setName(user.name);\n        setEmail(user.email);\n        setIsAdmin(user.isAdmin);\n      }\n    }\n  }, [dispatch, history, userId, user, successUpdate]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(updateUser({ _id: userId, name, email, isAdmin }));\n  };\n\n  return (\n    <>\n      <h3>User Edit Screen</h3>\n    </>\n  );\n};\n\nexport default UserEditScreen;\n","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\screens\\ProductListScreen.js",["1170","1171","1172","1173","1174","1175","1176","1177","1178","1179","1180","1181","1182"],"import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../components/Message\";\nimport Spinner from \"../components/controls/Spinner\";\nimport {\n  listProducts,\n  deleteProduct,\n  createProduct,\n} from \"../actions/productAction\";\nimport { PRODUCT_CREATE_RESET } from \"../constants/productConstants\";\n\nconst ProductListScreen = ({ history, match }) => {\n  const pageNumber = match.params.pageNumber || 1;\n\n  const dispatch = useDispatch();\n\n  const productList = useSelector((state) => state.productList);\n  const { loading, error, products, page, pages } = productList;\n\n  const productDelete = useSelector((state) => state.productDelete);\n  const {\n    loading: loadingDelete,\n    error: errorDelete,\n    success: successDelete,\n  } = productDelete;\n\n  const productCreate = useSelector((state) => state.productCreate);\n  const {\n    loading: loadingCreate,\n    error: errorCreate,\n    success: successCreate,\n    product: createdProduct,\n  } = productCreate;\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  useEffect(() => {\n    dispatch({ type: PRODUCT_CREATE_RESET });\n\n    if (!userInfo || !userInfo.isAdmin) {\n      history.push(\"/login\");\n    }\n\n    if (successCreate) {\n      history.push(`/admin/product/${createdProduct._id}/edit`);\n    } else {\n      dispatch(listProducts(\"\", pageNumber));\n    }\n  }, [\n    dispatch,\n    history,\n    userInfo,\n    successDelete,\n    successCreate,\n    createdProduct,\n    pageNumber,\n  ]);\n\n  const deleteHandler = (id) => {\n    if (window.confirm(\"Are you sure\")) {\n      dispatch(deleteProduct(id));\n    }\n  };\n\n  const createProductHandler = () => {\n    dispatch(createProduct());\n  };\n\n  return <></>;\n};\n\nexport default ProductListScreen;\n","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\screens\\OrderListScreen.js",[],"D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\screens\\ProductEditScreen.js",["1183","1184","1185","1186","1187","1188","1189","1190","1191","1192"],"import axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../components/Message\";\nimport Spinner from \"../components/controls/Spinner\";\nimport { listProductDetails, updateProduct } from \"../actions/productAction\";\nimport { PRODUCT_UPDATE_RESET } from \"../constants/productConstants\";\n\nconst ProductEditScreen = ({ match, history }) => {\n  const productId = match.params.id;\n\n  const [name, setName] = useState(\"\");\n  const [price, setPrice] = useState(0);\n  const [image, setImage] = useState(\"\");\n  const [brand, setBrand] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n  const [countInStock, setCountInStock] = useState(0);\n  const [description, setDescription] = useState(\"\");\n  const [uploading, setUploading] = useState(false);\n\n  const dispatch = useDispatch();\n\n  const productDetails = useSelector((state) => state.productDetails);\n  const { loading, error, product } = productDetails;\n\n  const productUpdate = useSelector((state) => state.productUpdate);\n  const {\n    loading: loadingUpdate,\n    error: errorUpdate,\n    success: successUpdate,\n  } = productUpdate;\n\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({ type: PRODUCT_UPDATE_RESET });\n      history.push(\"/admin/productlist\");\n    } else {\n      if (!product.name || product._id !== productId) {\n        dispatch(listProductDetails(productId));\n      } else {\n        setName(product.name);\n        setPrice(product.price);\n        setImage(product.image);\n        setBrand(product.brand);\n        setCategory(product.category);\n        setCountInStock(product.countInStock);\n        setDescription(product.description);\n      }\n    }\n  }, [dispatch, history, productId, product, successUpdate]);\n\n  const uploadFileHandler = async (e) => {\n    const file = e.target.files[0];\n    const formData = new FormData();\n    formData.append(\"image\", file);\n    setUploading(true);\n\n    try {\n      const config = {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\",\n        },\n      };\n\n      const { data } = await axios.post(\"/api/upload\", formData, config);\n\n      setImage(data);\n      setUploading(false);\n    } catch (error) {\n      console.error(error);\n      setUploading(false);\n    }\n  };\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(\n      updateProduct({\n        _id: productId,\n        name,\n        price,\n        image,\n        brand,\n        category,\n        description,\n        countInStock,\n      })\n    );\n  };\n\n  return <></>;\n};\nexport default ProductEditScreen;\n","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\actions\\productAction.js",[],"D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\actions\\orderAction.js",[],"D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\screens\\MainCarousel.js",[],"D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\screens\\DashboardGrid.js",["1193","1194","1195","1196"],"import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport Writeup from \"../components/Writeup\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport BestSellingProducts from \"../components/BestSellingProducts\";\r\nimport OurProducts from \"../components/OurProducts\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    height: \"5rem\",\r\n    width: \"5rem\",\r\n  },\r\n  control: {\r\n    padding: theme.spacing(2),\r\n  },\r\n  imageContainer: {\r\n    height: \"5rem\",\r\n    width: \"5rem\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundSize: \"5rem 5rem\",\r\n    backgroundImage: `url(${\"/images/products/Chilli.jpg\"})`,\r\n  },\r\n}));\r\n\r\nconst DashboardGrid = ({ history }) => {\r\n  const classes = useStyles();\r\n  history = useHistory();\r\n\r\n  const addToCartHandler = () => {\r\n    const product_id = \"60207430a5771666e458b358\";\r\n    history.push(`/cart/${product_id}`);\r\n  };\r\n  return (\r\n    <>\r\n      <Grid container className={classes.root} spacing={2}>\r\n        <Grid item xs={12}>\r\n          <Writeup />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <OurProducts />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <BestSellingProducts />\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\nexport default DashboardGrid;\r\n","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\actions\\cartAction.js",[],"D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\CheckoutSteps.js",[],"D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\Message.js",[],"D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\Popup.js",[],["1197","1198"],"D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\AddProductForm.js",["1199"],"import React, { useState } from \"react\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\n\r\nconst orderType = [\r\n  { id: \"loose\", title: \"Loose\" },\r\n  { id: \"bulk\", title: \"Bulk\" },\r\n];\r\n\r\nexport default function AddProductForm() {\r\n  const [value, setValue] = useState(\"loose\");\r\n\r\n  const handleChange = (event) => {\r\n    setValue(event.target.value);\r\n    console.log(\"Selected\" + event.target.value);\r\n  };\r\n\r\n  return (\r\n    <FormControl component=\"fieldset\">\r\n      <FormLabel component=\"legend\">\r\n        <h5>Order Type</h5>\r\n      </FormLabel>\r\n      <RadioGroup\r\n        aria-label=\"orderType\"\r\n        name=\"orderType\"\r\n        value={value}\r\n        onChange={handleChange}\r\n      >\r\n        <FormControlLabel value=\"loose\" control={<Radio />} label=\"Loose\" />\r\n        <FormControlLabel value=\"bulk\" control={<Radio />} label=\"Bulk\" />\r\n      </RadioGroup>\r\n    </FormControl>\r\n  );\r\n}\r\n","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\Rating.js",[],"D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\Writeup.js",["1200","1201"],"import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    minWidth: 275,\r\n    padding: 0,\r\n  },\r\n  title: {\r\n    fontSize: 18,\r\n    fontWeight: 500,\r\n    justifyContent: \"center\",\r\n  },\r\n  subtitle: {\r\n    fontSize: 14,\r\n    fontWeight: 400,\r\n    justifyContent: \"center\",\r\n  },\r\n  caption: {\r\n    fontSize: 20,\r\n    fontWeight: 500,\r\n    alignItems: \"center\",\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n  cardcontent: {\r\n    padding: 0,\r\n    \"&:last-child\": {\r\n      paddingBottom: 0,\r\n    },\r\n  },\r\n});\r\n\r\nexport default function SimpleCard() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent className={classes.cardcontent}>\r\n        <Typography color=\"secondary\" className={classes.title} align=\"center\">\r\n          Established in the year 2007, Tagline Tarders Private Limited in\r\n          Gachibowli , Hyderabad is a top player in the category of spices in\r\n          Hyderabad.\r\n        </Typography>\r\n        <Typography color=\"secondary\" className={classes.subtitle}>\r\n          It's flagship Brands \"Vishudha Chilli, Vishudha Turmeric, Vishudha\r\n          Coriander\" ar manufactured with the latest equipement totally\r\n          untouched by Hands..\r\n        </Typography>\r\n        <Typography align=\"center\">\r\n          <span style={{ backgroundColor: \"#800000\", color: \"white\" }}>\r\n            Vishudha Chilli, Turmeric, Coriander guarantees\r\n          </span>\r\n        </Typography>\r\n        <Typography\r\n          color=\"secondary\"\r\n          className={classes.caption}\r\n          align=\"center\"\r\n        >\r\n          <span style={{ backgroundColor: \"#800000\", color: \"white\" }}>\r\n            \"The Real Aroma of Quality\"\r\n          </span>\r\n        </Typography>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\controls\\BulkLooseRadioGroup.js",[],"D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\controls\\MUIControls.js",[],"D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\controls\\Input.js",[],"D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\controls\\Button.js",[],"D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\controls\\ActionButton.js",[],"D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\controls\\Select.js",[],"D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\controls\\RadioGroup.js",[],"D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\controls\\Checkbox.js",[],"D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\controls\\Spinner.js",[],"D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\controls\\RupeeIcon.js",[],"D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\atoms\\index.js",[],["1202","1203"],"D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\atoms\\ScrollTop\\index.js",[],"D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\atoms\\Image\\index.js",[],"D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\atoms\\IconText\\index.js",[],"D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\atoms\\DarkModeToggler\\index.js",[],"D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\atoms\\Icon\\index.js",[],"D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\atoms\\LearnMoreLink\\index.js",[],"D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\atoms\\ScrollTop\\ScrollTop.js",[],"D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\atoms\\Image\\Image.js",[],"D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\atoms\\DarkModeToggler\\DarkModeToggler.js",[],"D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\atoms\\Icon\\Icon.js",[],"D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\atoms\\LearnMoreLink\\LearnMoreLink.js",[],"D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\atoms\\IconText\\IconText.js",[],"D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\molecules\\index.js",[],"D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\molecules\\SwiperNumber\\index.js",[],"D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\molecules\\SectionHeader\\index.js",[],"D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\molecules\\CountUpNumber\\index.js",[],"D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\molecules\\DescriptionCta\\index.js",[],"D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\molecules\\OverlapedImages\\index.js",[],"D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\molecules\\SwiperImage\\index.js",[],"D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\molecules\\TypedText\\index.js",[],"D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\molecules\\IconAlternate\\index.js",[],"D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\molecules\\SectionHeader\\SectionHeader.js",[],"D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\molecules\\DescriptionCta\\DescriptionCta.js",[],"D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\molecules\\SwiperNumber\\SwiperNumber.js",[],"D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\molecules\\CountUpNumber\\CountUpNumber.js",[],"D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\molecules\\OverlapedImages\\OverlapedImages.js",[],"D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\molecules\\SwiperImage\\SwiperImage.js",[],"D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\molecules\\TypedText\\TypedText.js",[],"D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\molecules\\IconAlternate\\IconAlternate.js",[],"D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\controls\\SectionHeader.js",[],"D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\screens\\CartLayoutScreen.js",["1204","1205","1206"],"import React, { useEffect } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Message from \"../components/Message\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { addToCart, removeFromCart } from \"../actions/cartAction\";\r\nimport rupeeSvgIcon from \"../assets/images/currency-inr.svg\";\r\nimport {\r\n  useMediaQuery,\r\n  Grid,\r\n  Typography,\r\n  Button,\r\n  Select,\r\n  IconButton,\r\n  Icon,\r\n} from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { DeleteOutline } from \"@material-ui/icons\";\r\nimport Image from \"../components/atoms/Image/Image\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    display: \"grid\",\r\n    gridTemplateColumns: \"repeat(12, 1fr)\",\r\n    gridGap: theme.spacing(3),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(1),\r\n    textAlign: \"center\",\r\n    color: theme.palette.text.secondary,\r\n    whiteSpace: \"nowrap\",\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n  childPaper: {\r\n    padding: theme.spacing(1),\r\n    textAlign: \"center\",\r\n    color: theme.palette.text.secondary,\r\n    whiteSpace: \"nowrap\",\r\n    width: \"100%\",\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n  divider: {\r\n    margin: theme.spacing(2, 0),\r\n  },\r\n}));\r\n\r\nexport default function CartLayoutScreen({ match, location, history }) {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const dispatch = useDispatch();\r\n\r\n  const isMd = useMediaQuery(theme.breakpoints.up(\"md\"), {\r\n    defaultMatches: true,\r\n  });\r\n  const productId = match.params.id;\r\n  const qty = location.search ? Number(location.search.split(\"=\")[1]) : 1;\r\n\r\n  const cart = useSelector((state) => state.cart);\r\n  const { cartItems } = cart;\r\n\r\n  useEffect(() => {\r\n    if (productId) {\r\n      dispatch(addToCart(productId, qty));\r\n    }\r\n  }, [dispatch, productId, qty]);\r\n\r\n  const removeFromCartHandler = (id) => {\r\n    dispatch(removeFromCart(id));\r\n  };\r\n\r\n  const checkoutHandler = () => {\r\n    history.push(\"/login?redirect=shipping\");\r\n  };\r\n  const emptyCartContent = (\r\n    <>\r\n      <Grid container spacing={1}>\r\n        <Grid item xs={12}>\r\n          <Paper className={classes.paper}>\r\n            <Message>\r\n              Your cart is empty <Link to=\"/\">Supermarket</Link>\r\n            </Message>\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n  const cartItemsConetnt = cartItems.map((item) => (\r\n    <Grid item xs={8}>\r\n      <Paper className={classes.paper}>\r\n        <Grid container spacing={1} row>\r\n          <Grid item xs={3}>\r\n            <img\r\n              className=\"img-thumbnail\"\r\n              src={item.image}\r\n              alt={item.name}\r\n              style={{\r\n                height: \"3.5rem\",\r\n                width: \"3.5rem\",\r\n              }}\r\n            />\r\n            {console.log(\"Image URL: \" + item.image)}\r\n          </Grid>\r\n          <Grid item xs={2}>\r\n            <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n          </Grid>\r\n          <Grid item xs={2}>\r\n            <img alt=\"curency inr\" src={rupeeSvgIcon} /> {item.price}\r\n          </Grid>\r\n          <Grid xs={2}>\r\n            <Select\r\n              as=\"select\"\r\n              value={item.qty}\r\n              defaultValue={1}\r\n              onChange={(e) =>\r\n                dispatch(addToCart(item.product, Number(e.target.value)))\r\n              }\r\n            >\r\n              {[...Array(item.countInStock).keys()].map((x) => (\r\n                <option key={x + 1} value={x + 1}>\r\n                  {x + 1}\r\n                </option>\r\n              ))}\r\n            </Select>\r\n          </Grid>\r\n          <Grid xs={3}>\r\n            <IconButton\r\n              aria-label=\"delete\"\r\n              onClick={() => removeFromCartHandler(item.product)}\r\n            >\r\n              <DeleteOutline />\r\n            </IconButton>\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n    </Grid>\r\n  ));\r\n\r\n  return (\r\n    <div>\r\n      <Grid container spacing={1}>\r\n        <Grid item xs={12}>\r\n          <Link\r\n            style={{\r\n              color: \"white\",\r\n              backgroundColor: \"#26A541\",\r\n            }}\r\n            className=\"btn\"\r\n            to=\"/home\"\r\n            align=\"right\"\r\n          >\r\n            Go to Groceries\r\n          </Link>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Typography variant=\"subtitle1\" gutterBottom>\r\n            Shopping Cart\r\n          </Typography>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      {cartItems.length === 0 ? (\r\n        <div>Empty Cart</div>\r\n      ) : (\r\n        <Grid container spacing={1}>\r\n          <Grid item xs={8}>\r\n            <Paper className={classes.childPaper}>\r\n              {cartItems.map((item) => (\r\n                <Grid item xs={12}>\r\n                  <Paper className={classes.paper}>\r\n                    <Grid container spacing={1} row>\r\n                      <Grid item xs={3}>\r\n                        <img\r\n                          className=\"img-thumbnail\"\r\n                          src={item.image}\r\n                          alt={item.name}\r\n                          style={{\r\n                            height: \"3.5rem\",\r\n                            width: \"3.5rem\",\r\n                          }}\r\n                        />\r\n                        {console.log(\"Image URL: \" + item.image)}\r\n                      </Grid>\r\n                      <Grid item xs={2}>\r\n                        <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                      </Grid>\r\n                      <Grid item xs={2}>\r\n                        <img alt=\"curency inr\" src={rupeeSvgIcon} />{\" \"}\r\n                        {item.price}\r\n                      </Grid>\r\n                      <Grid xs={2}>\r\n                        {/* <Select\r\n                          as=\"select\"\r\n                          value={item.qty}\r\n                          defaultValue={1}\r\n                          onChange={(e) =>\r\n                            dispatch(\r\n                              addToCart(item.product, Number(e.target.value))\r\n                            )\r\n                          }\r\n                        >\r\n                          {[...Array(item.countInStock).keys()].map((x) => (\r\n                            <option key={x + 1} value={x + 1}>\r\n                              {x + 1}\r\n                            </option>\r\n                          ))}\r\n                        </Select> */}\r\n                      </Grid>\r\n                      <Grid xs={3}>\r\n                        <IconButton\r\n                          aria-label=\"delete\"\r\n                          onClick={() => removeFromCartHandler(item.product)}\r\n                        >\r\n                          <DeleteOutline />\r\n                        </IconButton>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Paper>\r\n                </Grid>\r\n              ))}\r\n            </Paper>\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n            <Paper className={classes.paper}>\r\n              <Grid container spacing={1} data-aos=\"fade-up\">\r\n                <Grid item xs={12}>\r\n                  <Typography\r\n                    variant=\"h6\"\r\n                    color=\"primary\"\r\n                    align={isMd ? \"left\" : \"center\"}\r\n                  >\r\n                    Subtotal (\r\n                    {cartItems.reduce((acc, item) => acc + item.qty, 0)}) items\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <Icon classes={{ root: classes.iconRoot }}>\r\n                    <img alt=\"curency inr\" src={rupeeSvgIcon} />\r\n                  </Icon>\r\n                  {cartItems\r\n                    .reduce((acc, item) => acc + item.qty * item.price, 0)\r\n                    .toFixed(2)}\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <Button\r\n                    disabled={cartItems.length === 0}\r\n                    size=\"small\"\r\n                    variant=\"contained\"\r\n                    type=\"submit\"\r\n                    color=\"primary\"\r\n                    onClick={checkoutHandler}\r\n                  >\r\n                    Proceed To Checkout\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n            </Paper>\r\n          </Grid>\r\n        </Grid>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\OrderTypeDialog.js",["1207"],"import React from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport MuiDialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport MuiDialogContent from \"@material-ui/core/DialogContent\";\r\nimport MuiDialogActions from \"@material-ui/core/DialogActions\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n  },\r\n  closeButton: {\r\n    position: \"absolute\",\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)((props) => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton\r\n          aria-label=\"close\"\r\n          className={classes.closeButton}\r\n          onClick={onClose}\r\n        >\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst DialogContent = withStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}))(MuiDialogContent);\r\n\r\nconst DialogActions = withStyles((theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(1),\r\n  },\r\n}))(MuiDialogActions);\r\n\r\nexport default function OrderTypeDialog() {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        onClose={handleClose}\r\n        aria-labelledby=\"customized-dialog-title\"\r\n        open={open}\r\n      >\r\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\r\n          Modal title\r\n        </DialogTitle>\r\n        <DialogContent dividers>\r\n          <Typography gutterBottom>\r\n            Cras mattis consectetur purus sit amet fermentum. Cras justo odio,\r\n            dapibus ac facilisis in, egestas eget quam. Morbi leo risus, porta\r\n            ac consectetur ac, vestibulum at eros.\r\n          </Typography>\r\n          <Typography gutterBottom>\r\n            Praesent commodo cursus magna, vel scelerisque nisl consectetur et.\r\n            Vivamus sagittis lacus vel augue laoreet rutrum faucibus dolor\r\n            auctor.\r\n          </Typography>\r\n          <Typography gutterBottom>\r\n            Aenean lacinia bibendum nulla sed consectetur. Praesent commodo\r\n            cursus magna, vel scelerisque nisl consectetur et. Donec sed odio\r\n            dui. Donec ullamcorper nulla non metus auctor fringilla.\r\n          </Typography>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button autoFocus onClick={handleClose} color=\"primary\">\r\n            Save changes\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\MuiHeader.js",["1208","1209","1210","1211","1212","1213"],"import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Badge from \"@material-ui/core/Badge\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\r\nimport MailIcon from \"@material-ui/icons/Mail\";\r\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\r\nimport MoreIcon from \"@material-ui/icons/MoreVert\";\r\nimport ZipCodeTracker from \"./ZipCodeTracker\";\r\nimport ShoppingCartIcon from \"@material-ui/icons/ShoppingCart\";\r\nimport logo from \"../assets/images/logo.jpg\";\r\nimport { Link } from \"react-router-dom\";\r\nimport LoginScreen from \"../screens/LoginScreen\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { logout } from \"../actions/userAction\";\r\nimport Tippy from \"@tippyjs/react\";\r\nimport MoreTippy from \"../screens/MoreTippy\";\r\nimport MorePopper from \"./MorePopper\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    display: \"none\",\r\n    fontSize: \"20px\",\r\n    fontFamily: \"Roboto\",\r\n    fontWeight: \"500\",\r\n    fontStyle: \"italic\",\r\n\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      display: \"block\",\r\n    },\r\n  },\r\n  appTitle: {\r\n    fontSize: \"1.75rem\",\r\n  },\r\n\r\n  sectionDesktop: {\r\n    display: \"none\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      display: \"flex\",\r\n    },\r\n  },\r\n  sectionMobile: {\r\n    display: \"flex\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n  loginBtn: {\r\n    color: \"#2874f0\",\r\n    fontWeight: \"500\",\r\n    backgroundColor: \"#fff\",\r\n    cursor: \"pointer\",\r\n    borderRadius: \"2px\",\r\n    height: \"32px\",\r\n    padding: \"5px 40px\",\r\n    border: \"1px solid #dbdbdb\",\r\n  },\r\n}));\r\nexport default function MuiHeader({ location, history }) {\r\n  // const history = { props };\r\n  let [alreadyLoggedIn, setAlreadyLoggedIn] = useState(\"false\");\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\r\n  const dispatch = useDispatch();\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const logoutHandler = () => {\r\n    dispatch(logout());\r\n  };\r\n  const isMenuOpen = Boolean(anchorEl);\r\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\r\n\r\n  const handleProfileMenuOpen = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleMobileMenuClose = () => {\r\n    setMobileMoreAnchorEl(null);\r\n  };\r\n\r\n  const handleMenuClose = () => {\r\n    setAnchorEl(null);\r\n    handleMobileMenuClose();\r\n  };\r\n\r\n  const handleMobileMenuOpen = (event) => {\r\n    setMobileMoreAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const menuId = \"primary-search-account-menu\";\r\n  const renderMenu = (\r\n    <Menu\r\n      anchorEl={anchorEl}\r\n      anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      id={menuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      open={isMenuOpen}\r\n      onClose={handleMenuClose}\r\n    >\r\n      <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\r\n      <MenuItem onClick={handleMenuClose}>My account</MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  const mobileMenuId = \"primary-search-account-menu-mobile\";\r\n  const renderMobileMenu = (\r\n    <Menu\r\n      anchorEl={mobileMoreAnchorEl}\r\n      anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      id={mobileMenuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      open={isMobileMenuOpen}\r\n      onClose={handleMobileMenuClose}\r\n    >\r\n      <MenuItem>\r\n        <Button color=\"primary\">login!</Button>\r\n      </MenuItem>\r\n      <MenuItem>\r\n        <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\r\n          <Badge badgeContent={4} color=\"secondary\">\r\n            <MailIcon />\r\n          </Badge>\r\n        </IconButton>\r\n        <p>Messages</p>\r\n      </MenuItem>\r\n      <MenuItem>\r\n        <IconButton aria-label=\"show 11 new notifications\" color=\"inherit\">\r\n          <Badge badgeContent={11} color=\"secondary\">\r\n            <NotificationsIcon />\r\n          </Badge>\r\n        </IconButton>\r\n        <p>Notifications</p>\r\n      </MenuItem>\r\n      <MenuItem onClick={handleProfileMenuOpen}>\r\n        <IconButton\r\n          aria-label=\"account of current user\"\r\n          aria-controls=\"primary-search-account-menu\"\r\n          aria-haspopup=\"true\"\r\n          color=\"inherit\"\r\n        >\r\n          <AccountCircle />\r\n        </IconButton>\r\n        <p>Profile</p>\r\n      </MenuItem>\r\n    </Menu>\r\n  );\r\n  alreadyLoggedIn = userInfo !== null ? true : false;\r\n  console.log(\"alreadyLoggedIn : \" + alreadyLoggedIn);\r\n  let loginBtnTitle = alreadyLoggedIn === true ? \"logout\" : \"login\";\r\n  let loginBtnUrl = alreadyLoggedIn === true ? \"/logout\" : \"/login\";\r\n  console.log(\"loginBtnTitle : \" + loginBtnTitle);\r\n  const loggedInContent = (\r\n    <div onClick={logoutHandler} style={{ marginLeft: \"1.5em\" }}>\r\n      <Link to=\"/logout\">Click Logout</Link>\r\n    </div>\r\n  );\r\n  const loggedOutContent = (\r\n    <div>\r\n      <Link to=\"/login\">Logout</Link>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className={classes.grow}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <div>\r\n            <img\r\n              className=\"img-thumbnail\"\r\n              alt=\"Staples\"\r\n              src={logo}\r\n              style={{\r\n                height: \"3.5rem\",\r\n                width: \"3.5rem\",\r\n                marginRight: \"5em\",\r\n              }}\r\n            />\r\n          </div>\r\n          <Typography\r\n            className={classes.title}\r\n            variant=\"h6\"\r\n            noWrap\r\n            style={{ color: \"white\" }}\r\n          >\r\n            Tagline Traders Groceries\r\n          </Typography>\r\n\r\n          <div className={classes.grow} />\r\n          <div className={classes.sectionDesktop}>\r\n            <ZipCodeTracker />\r\n            {/* {alreadyLoggedIn === \"true\" ? loggedInContent : loggedOutContent} */}\r\n            <Button\r\n              component={Link}\r\n              className={classes.loginBtn}\r\n              to={loginBtnUrl}\r\n              size=\"small\"\r\n              variant=\"contained\"\r\n              style={{\r\n                color: \"green\",\r\n                backgroundColor: \"white\",\r\n                height: \"2rem\",\r\n                margin: \"0.5rem\",\r\n                alignContent: \"center\",\r\n                verticalAlign: \"baseline\",\r\n              }}\r\n            >\r\n              {loginBtnTitle}\r\n            </Button>\r\n            <MorePopper\r\n              style={{\r\n                color: \"green\",\r\n                backgroundColor: \"white\",\r\n                height: \"2rem\",\r\n                margin: \"0.5rem\",\r\n                alignContent: \"center\",\r\n                verticalAlign: \"baseline\",\r\n              }}\r\n            />\r\n            {/* <Tippy content={<MoreTippy />} interactive={true}>\r\n              <Button>More</Button>\r\n            </Tippy> */}\r\n            {/* <Link\r\n              className={classes.loginBtn}\r\n              to={\"/login\"}\r\n              size=\"small\"\r\n              variant=\"contained\"\r\n              style={{\r\n                color: \"green\",\r\n                backgroundColor: \"white\",\r\n                height: \"2rem\",\r\n                margin: \"0.5rem\",\r\n                alignContent: \"center\",\r\n                verticalAlign: \"baseline\",\r\n              }}\r\n            >\r\n              More\r\n            </Link> */}\r\n            {/* {userInfo ? (\r\n              <>\r\n                {/* <Link\r\n                  to=\"/profile\"\r\n                  style={{\r\n                    color: \"white\",\r\n                    // backgroundColor: \"white\",\r\n                    fontWeight: \"500\",\r\n                    cursor: \"pointer\",\r\n                    height: \"2rem\",\r\n                    margin: \"0.5rem\",\r\n                    alignContent: \"center\",\r\n                    verticalAlign: \"baseline\",\r\n                  }}\r\n                >\r\n                  {userInfo.name}\r\n                </Link> }\r\n              </>\r\n            ) : (\r\n              <div>\r\n                <Link to=\"/login\">\r\n                  <i className=\"fas fa-user\" />\r\n                </Link>\r\n              </div>\r\n            )} */}\r\n\r\n            <IconButton aria-label=\"upload picture\" component=\"span\">\r\n              <Link\r\n                to=\"/showcart\"\r\n                style={{\r\n                  color: \"white\",\r\n                  verticalAlign: \"center\",\r\n                }}\r\n              >\r\n                <ShoppingCartIcon onClick={() => console.log(\"Clicked Cart\")} />\r\n              </Link>\r\n            </IconButton>\r\n            <IconButton\r\n              edge=\"end\"\r\n              aria-label=\"account of current user\"\r\n              aria-controls={menuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleProfileMenuOpen}\r\n              color=\"inherit\"\r\n            >\r\n              <AccountCircle />\r\n            </IconButton>\r\n          </div>\r\n          <div className={classes.sectionMobile}>\r\n            <IconButton\r\n              aria-label=\"show more\"\r\n              aria-controls={mobileMenuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleMobileMenuOpen}\r\n              color=\"inherit\"\r\n            >\r\n              <MoreIcon />\r\n            </IconButton>\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n      {renderMobileMenu}\r\n      {renderMenu}\r\n    </div>\r\n  );\r\n}\r\n","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\Product.js",["1214","1215","1216","1217","1218","1219","1220","1221","1222"],"import React, { useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport {\r\n  Button,\r\n  ButtonGroup,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  FormControl,\r\n  Icon,\r\n  InputLabel,\r\n  MenuItem,\r\n  Select,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles, useTheme } from \"@material-ui/styles\";\r\n\r\nimport {\r\n  Grid,\r\n  Card,\r\n  CardMedia,\r\n  CardContent,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport Image from \"./atoms/Image/Image\";\r\nimport rupeeSvgIcon from \"../assets/images/currency-inr.svg\";\r\nimport BulkLooseRadioGroup from \"./controls/BulkLooseRadioGroup\";\r\n\r\nconst Product = ({ history, match, product }) => {\r\n  const [qty, setQty] = useState(1);\r\n  history = useHistory();\r\n  const [fullWidth, setFullWidth] = React.useState(true);\r\n  const [maxWidth, setMaxWidth] = React.useState(\"md\");\r\n  const useStyles = makeStyles((theme) => ({\r\n    imageIcon: {\r\n      height: \"100%\",\r\n    },\r\n    paper: {\r\n      height: \"90%\",\r\n      width: \"100vh\",\r\n      padding: \".5rem\",\r\n    },\r\n    iconRoot: {\r\n      textAlign: \"center\",\r\n    },\r\n    newButton: {\r\n      position: \"absolute\",\r\n      right: \"10px\",\r\n    },\r\n    image: {\r\n      objectFit: \"contain\",\r\n      height: 120,\r\n    },\r\n    fontWeightBold: {\r\n      fontWeight: \"bold\",\r\n    },\r\n    cardMedia: {\r\n      padding: theme.spacing(2, 2, 0, 2),\r\n      display: \"flex\",\r\n      justifyContent: \"center\",\r\n    },\r\n    addButton: {\r\n      width: \"100%\",\r\n      // padding: 14px 28px;\r\n      // font-size: 16px;\r\n      cursor: \"pointer\",\r\n      // text-align: center;\r\n    },\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 120,\r\n    },\r\n  }));\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  let [orderTypeSelected, setOrderTypeSelected] = useState(\"loose\");\r\n  let [orderType, setOrderType] = useState(\"loose\");\r\n\r\n  const handleIncrement = () => {\r\n    setQty(qty + 1);\r\n  };\r\n\r\n  const handleDecrement = () => {\r\n    setQty(qty - 1);\r\n  };\r\n  const handleChange = (event) => {\r\n    setAge(event.target.value);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const [age, setAge] = React.useState(\"\");\r\n  const [openQty, setOpenQty] = React.useState(false);\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleChangeQty = (event) => {\r\n    setQty(event.target.value);\r\n  };\r\n\r\n  const handleCloseQty = () => {\r\n    setOpenQty(false);\r\n  };\r\n\r\n  const handleOpenQty = () => {\r\n    setOpenQty(true);\r\n  };\r\n  const bulkUI = (\r\n    <FormControl className={classes.formControl}>\r\n      <InputLabel id=\"demo-controlled-open-select-label\">Select Qty</InputLabel>\r\n      <Select\r\n        labelId=\"demo-controlled-open-select-label\"\r\n        id=\"demo-controlled-open-select\"\r\n        open={openQty}\r\n        onClose={handleCloseQty}\r\n        onOpen={handleOpenQty}\r\n        value={qty}\r\n        onChange={handleChangeQty}\r\n      >\r\n        <MenuItem value=\"\">\r\n          <em>None</em>\r\n        </MenuItem>\r\n        <MenuItem value=\"25kg\">25kg</MenuItem>\r\n      </Select>\r\n    </FormControl>\r\n  );\r\n  const looseUI = (\r\n    <FormControl className={classes.formControl}>\r\n      <InputLabel id=\"demo-controlled-open-select-label\">Select Qty</InputLabel>\r\n      <Select\r\n        labelId=\"demo-controlled-open-select-label\"\r\n        id=\"demo-controlled-open-select\"\r\n        open={openQty}\r\n        onClose={handleCloseQty}\r\n        onOpen={handleOpenQty}\r\n        value={qty}\r\n        onChange={handleChangeQty}\r\n      >\r\n        <MenuItem value=\"\">\r\n          <em>None</em>\r\n        </MenuItem>\r\n        <MenuItem value=\"25kg\">1kg</MenuItem>\r\n        <MenuItem value=\"25kg\">5kg</MenuItem>\r\n        <MenuItem value=\"25kg\">10kg</MenuItem>\r\n      </Select>\r\n    </FormControl>\r\n    // <ButtonGroup\r\n    //   style={{ size: \"small\" }}\r\n    //   className=\"small outlined button group\"\r\n    //   aria-label=\"small outlined button group\"\r\n    // >\r\n    //   {<Button onClick={handleDecrement}>-</Button>}\r\n    //   {<Button disabled>{qty}</Button>}\r\n    //   <Button onClick={handleIncrement}>+</Button>\r\n    // </ButtonGroup>\r\n  );\r\n\r\n  const addToCartHandler = () => {\r\n    handleClose();\r\n    history.push(`/cart/${product._id}?qty=${qty}`);\r\n  };\r\n\r\n  const currentCBHandler = (orderTypeValue) => {\r\n    orderTypeSelected = orderTypeValue;\r\n    setOrderTypeSelected(...orderTypeSelected, orderTypeSelected);\r\n\r\n    setOrderType(orderTypeValue);\r\n    console.log(\r\n      \"is Order Type Bulk ? \" +\r\n        orderType +\r\n        \", orderTypeValue: \" +\r\n        orderTypeValue\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n        <CardMedia className={classes.cardMedia}>\r\n          <Link to={`/product/${product._id}`}>\r\n            <Image\r\n              src={product.image}\r\n              alt={product.name}\r\n              className={classes.image}\r\n            />\r\n          </Link>\r\n        </CardMedia>\r\n        <CardContent>\r\n          <Grid container spacing={2} align=\"center\">\r\n            <Grid item xs={12}>\r\n              <Typography\r\n                color=\"textPrimary\"\r\n                variant=\"subtitle1\"\r\n                // className={classes.fontWeightBold}\r\n                align=\"left\"\r\n              >\r\n                {product.name}\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={12} md={6}>\r\n              <Typography\r\n                color=\"textPrimary\"\r\n                variant=\"subtitle1\"\r\n                className={classes.fontWeightBold}\r\n                align=\"right\"\r\n              >\r\n                {/* <Icon classes={{ root: classes.iconRoot }}>\r\n                  <img\r\n                    alt=\"curency inr\"\r\n                    src={rupeeSvgIcon}\r\n                    className={classes.imageIcon}\r\n                  />\r\n                </Icon>{\" \"}\r\n                {product.} */}\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Grid container spacing={2} align=\"center\">\r\n            <Grid item xs={12} align=\"center\">\r\n              <Button\r\n                size=\"small\"\r\n                variant=\"contained\"\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                className={classes.addButton}\r\n                onClick={() => {\r\n                  setOpen(true);\r\n                }}\r\n                disabled={product.countInStock === 0}\r\n              >\r\n                Add to cart\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n      </Card>\r\n\r\n      <div>\r\n        <Dialog\r\n          onClose={handleClose}\r\n          fullWidth={fullWidth}\r\n          maxWidth={maxWidth}\r\n          aria-labelledby=\"customized-dialog-title\"\r\n          open={open}\r\n        >\r\n          <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\r\n            Order Type\r\n          </DialogTitle>\r\n          <DialogContent dividers>\r\n            <Grid container>\r\n              <Grid item xs={3}>\r\n                <Image\r\n                  src={product.image}\r\n                  alt={product.name}\r\n                  width=\"3.5rem\"\r\n                  height=\"3.5rem\"\r\n                  className={classes.image}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={3}>\r\n                <Grid item>\r\n                  <h5>{product.name}</h5>\r\n                </Grid>\r\n                <Grid item>\r\n                  Price:{\" \"}\r\n                  <Icon classes={{ root: classes.iconRoot }}>\r\n                    <img alt=\"curency inr\" src={rupeeSvgIcon} />\r\n                  </Icon>\r\n                  {product.price}\r\n                </Grid>\r\n                <Grid item>\r\n                  <h6>{product.description}</h6>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <Grid container>\r\n                  <Grid item xs={6}>\r\n                    <BulkLooseRadioGroup parentCB={currentCBHandler} />\r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                    {console.log(\r\n                      \"orderTypeSelected BEFORE RENDERING: \" + orderTypeSelected\r\n                    )}\r\n                    {orderTypeSelected.startsWith(\"l\") ? (\r\n                      <h3>{looseUI}</h3>\r\n                    ) : (\r\n                      <h3>{bulkUI}</h3>\r\n                    )}\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button\r\n              autoFocus\r\n              onClick={addToCartHandler}\r\n              size=\"small\"\r\n              variant=\"contained\"\r\n              type=\"submit\"\r\n              color=\"primary\"\r\n            >\r\n              Add to Cart\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Product;\r\n","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\CategoriesSubMenuVer2.js",[],"D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\categoriesMenuData.js",[],["1223","1224"],"D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\MorePopper.js",["1225","1226","1227","1228","1229","1230","1231","1232","1233","1234","1235"],"import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Popper from \"@material-ui/core/Popper\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\r\nimport LiveHelpIcon from \"@material-ui/icons/LiveHelp\";\r\nimport TrendingUpIcon from \"@material-ui/icons/TrendingUp\";\r\nimport GetAppIcon from \"@material-ui/icons/GetApp\";\r\nimport { Divider } from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  scrollContainer: {\r\n    height: 400,\r\n    overflow: \"auto\",\r\n    marginBottom: theme.spacing(3),\r\n  },\r\n  scroll: {\r\n    position: \"relative\",\r\n    width: \"230%\",\r\n    backgroundColor: theme.palette.background.paper,\r\n    height: \"230%\",\r\n  },\r\n  legend: {\r\n    marginTop: theme.spacing(2),\r\n    maxWidth: 300,\r\n  },\r\n  paper: {\r\n    maxWidth: 400,\r\n    overflow: \"auto\",\r\n  },\r\n  select: {\r\n    width: 200,\r\n  },\r\n  popper: {\r\n    zIndex: 1,\r\n    '&[x-placement*=\"bottom\"] $arrow': {\r\n      top: 0,\r\n      left: 0,\r\n      marginTop: \"-0.9em\",\r\n      width: \"3em\",\r\n      height: \"1em\",\r\n      \"&::before\": {\r\n        borderWidth: \"0 1em 1em 1em\",\r\n        borderColor: `transparent transparent ${theme.palette.background.paper} transparent`,\r\n      },\r\n    },\r\n    '&[x-placement*=\"top\"] $arrow': {\r\n      bottom: 0,\r\n      left: 0,\r\n      marginBottom: \"-0.9em\",\r\n      width: \"3em\",\r\n      height: \"1em\",\r\n      \"&::before\": {\r\n        borderWidth: \"1em 1em 0 1em\",\r\n        borderColor: `${theme.palette.background.paper} transparent transparent transparent`,\r\n      },\r\n    },\r\n    '&[x-placement*=\"right\"] $arrow': {\r\n      left: 0,\r\n      marginLeft: \"-0.9em\",\r\n      height: \"3em\",\r\n      width: \"1em\",\r\n      \"&::before\": {\r\n        borderWidth: \"1em 1em 1em 0\",\r\n        borderColor: `transparent ${theme.palette.background.paper} transparent transparent`,\r\n      },\r\n    },\r\n    '&[x-placement*=\"left\"] $arrow': {\r\n      right: 0,\r\n      marginRight: \"-0.9em\",\r\n      height: \"3em\",\r\n      width: \"1em\",\r\n      \"&::before\": {\r\n        borderWidth: \"1em 0 1em 1em\",\r\n        borderColor: `transparent transparent transparent ${theme.palette.background.paper}`,\r\n      },\r\n    },\r\n  },\r\n  moreBtn: {\r\n    color: \"#2874f0\",\r\n    fontWeight: \"500\",\r\n    backgroundColor: \"#fff\",\r\n    cursor: \"pointer\",\r\n    borderRadius: \"2px\",\r\n    height: \"32px\",\r\n    padding: \"5px 40px\",\r\n    border: \"1px solid #dbdbdb\",\r\n  },\r\n  arrow: {\r\n    position: \"absolute\",\r\n    fontSize: 7,\r\n    width: \"3em\",\r\n    height: \"3em\",\r\n    \"&::before\": {\r\n      content: '\"\"',\r\n      margin: \"auto\",\r\n      display: \"block\",\r\n      width: 0,\r\n      height: 0,\r\n      borderStyle: \"solid\",\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function MorePopper() {\r\n  const anchorRef = React.useRef(null);\r\n  const [arrowRef, setArrowRef] = React.useState(null);\r\n\r\n  const [arrow, setArrow] = React.useState(true);\r\n  const [disablePortal, setDisablePortal] = React.useState(false);\r\n  const [flip, setFlip] = React.useState(true);\r\n  const [open, setOpen] = React.useState(false);\r\n  const [placement, setPlacement] = React.useState(\"bottom\");\r\n  const [preventOverflow, setPreventOverflow] = React.useState(\"scrollParent\");\r\n\r\n  const handleClickButton = () => {\r\n    setOpen((prevOpen) => !prevOpen);\r\n  };\r\n\r\n  const classes = useStyles();\r\n\r\n  const jsx = `\r\n  <Popper\r\n    placement=\"${placement}\"\r\n    disablePortal={${disablePortal}}\r\n    modifiers={{\r\n      flip: {\r\n        enabled: ${flip},\r\n      },\r\n      preventOverflow: {\r\n        enabled: ${preventOverflow !== \"disabled\"},\r\n        boundariesElement: '${\r\n          preventOverflow === \"disabled\" ? \"scrollParent\" : preventOverflow\r\n        }',\r\n      },\r\n      arrow: {\r\n        enabled: ${arrow},\r\n        element: arrowRef,\r\n      },\r\n    }}\r\n  >\r\n  `;\r\n  const id = open ? \"scroll-playground\" : null;\r\n\r\n  return (\r\n    <div\r\n      className={classes.root}\r\n      style={{\r\n        color: \"green\",\r\n        backgroundColor: \"white\",\r\n        height: \"2rem\",\r\n        margin: \"0.5rem\",\r\n        alignContent: \"center\",\r\n        verticalAlign: \"baseline\",\r\n      }}\r\n    >\r\n      <div>\r\n        <Grid container alignItems=\"center\" justify=\"center\">\r\n          <div>\r\n            <Button\r\n              ref={anchorRef}\r\n              variant=\"contained\"\r\n              onClick={handleClickButton}\r\n              aria-describedby={id}\r\n              className={classes.moreBtn}\r\n            >\r\n              More\r\n            </Button>\r\n\r\n            <Popper\r\n              id={id}\r\n              open={open}\r\n              anchorEl={anchorRef.current}\r\n              placement={placement}\r\n              disablePortal={disablePortal}\r\n              className={classes.popper}\r\n              modifiers={{\r\n                flip: {\r\n                  enabled: flip,\r\n                },\r\n                arrow: {\r\n                  enabled: arrow,\r\n                  element: arrowRef,\r\n                },\r\n                preventOverflow: {\r\n                  enabled: preventOverflow !== \"disabled\",\r\n                  boundariesElement:\r\n                    preventOverflow === \"disabled\"\r\n                      ? \"scrollParent\"\r\n                      : preventOverflow,\r\n                },\r\n              }}\r\n            >\r\n              {arrow ? (\r\n                <span className={classes.arrow} ref={setArrowRef} />\r\n              ) : null}\r\n              <Paper className={classes.paper}>\r\n                <DialogContent>\r\n                  {/* <Link to=\"/aboutus\">About Us</Link> */}\r\n                  About Us\r\n                  <Divider />\r\n                  Contact Us\r\n                  {/* <Link to=\"/contact\">Contact Us</Link> */}\r\n                </DialogContent>\r\n              </Paper>\r\n            </Popper>\r\n          </div>\r\n        </Grid>\r\n      </div>\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12} sm={6}></Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\Contact.js",["1236","1237"],"import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport {\n  useMediaQuery,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  Avatar,\n} from \"@material-ui/core\";\nimport { SectionHeader } from \"../components/molecules\";\n\nconst useStyles = makeStyles((theme) => ({\n  list: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    [theme.breakpoints.up(\"md\")]: {\n      flexDirection: \"row\",\n    },\n  },\n  listItemText: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    flex: \"0 0 auto\",\n  },\n  listItem: {\n    justifyContent: \"flex-start\",\n    [theme.breakpoints.up(\"md\")]: {\n      justifyContent: \"center\",\n    },\n  },\n  icon: {\n    background: \"transparent\",\n    borderRadius: 0,\n  },\n}));\n\nconst Contact = (props) => {\n  const { className, ...rest } = props;\n  const classes = useStyles();\n\n  const theme = useTheme();\n  const isMd = useMediaQuery(theme.breakpoints.up(\"md\"), {\n    defaultMatches: true,\n  });\n\n  return (\n    <div className={className} {...rest}>\n      {/* <SectionHeader\n        title=\"Contact details\"\n        subtitle=\"Our contact details. We carefully read and answer to all your questions.\"\n        data-aos=\"fade-up\"\n        align={isMd ? \"center\" : \"left\"}\n      /> */}\n      <List disablePadding className={classes.list}>\n        <ListItem\n          disableGutters\n          data-aos=\"fade-up\"\n          className={classes.listItem}\n        >\n          <ListItemAvatar>\n            <Avatar\n              src=\"/assets/images/illustrations/contact-icon-phone.png\"\n              srcSet=\"/assets/images/illustrations/contact-icon-phone@2x.png 2x\"\n              className={classes.icon}\n            />\n          </ListItemAvatar>\n          <ListItemText\n            className={classes.listItemText}\n            primary=\"Phone\"\n            secondary=\"+39 659-657-0133\"\n            primaryTypographyProps={{\n              variant: \"subtitle1\",\n              color: \"textSecondary\",\n            }}\n            secondaryTypographyProps={{\n              variant: \"subtitle1\",\n              color: \"textPrimary\",\n              component: \"span\",\n            }}\n          />\n        </ListItem>\n        <ListItem\n          disableGutters\n          data-aos=\"fade-up\"\n          className={classes.listItem}\n        >\n          <ListItemAvatar>\n            <Avatar\n              src=\"/assets/images/illustrations/contact-icon-mail.png\"\n              srcSet=\"/assets/images/illustrations/contact-icon-mail@2x.png 2x\"\n              className={classes.icon}\n            />\n          </ListItemAvatar>\n          <ListItemText\n            className={classes.listItemText}\n            primary=\"Email\"\n            secondary=\"hi@maccarianagency.com\"\n            primaryTypographyProps={{\n              variant: \"subtitle1\",\n              color: \"textSecondary\",\n            }}\n            secondaryTypographyProps={{\n              variant: \"subtitle1\",\n              color: \"textPrimary\",\n            }}\n          />\n        </ListItem>\n        <ListItem\n          disableGutters\n          data-aos=\"fade-up\"\n          className={classes.listItem}\n        >\n          <ListItemAvatar>\n            <Avatar\n              src=\"/assets/images/illustrations/contact-icon-pin.png\"\n              srcSet=\"/assets/images/illustrations/contact-icon-pin@2x.png 2x\"\n              className={classes.icon}\n            />\n          </ListItemAvatar>\n          <ListItemText\n            className={classes.listItemText}\n            primary=\"Head Office\"\n            secondary=\"Via E. Golla 4\"\n            primaryTypographyProps={{\n              variant: \"subtitle1\",\n              color: \"textSecondary\",\n            }}\n            secondaryTypographyProps={{\n              variant: \"subtitle1\",\n              color: \"textPrimary\",\n            }}\n          />\n        </ListItem>\n      </List>\n    </div>\n  );\n};\n\nContact.propTypes = {\n  /**\n   * External classes\n   */\n  className: PropTypes.string,\n};\n\nexport default Contact;\n","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\AboutUs.js",["1238","1239","1240","1241","1242","1243","1244","1245","1246","1247"],"import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Section, SectionAlternate } from \"./organisms\";\r\nimport Contact from \"./Contact\";\r\nimport Hero from \"../components/Hero\";\r\nimport Story from \"../components/Story\";\r\nimport WhoWeAre from \"../components/WhoWeAre\";\r\nimport Team from \"../components/Team\";\r\nimport Partners from \"../components/Partners\";\r\nimport Gallery from \"../components/Gallery\";\r\n\r\nimport { team, companies, mapData, gallery } from \"../data\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: \"100%\",\r\n    width: \"100%\",\r\n  },\r\n  sectionNoPaddingTop: {\r\n    paddingTop: 0,\r\n  },\r\n  sectionPartners: {\r\n    boxShadow: \"0 5px 20px 0 rgba(90, 202, 157, 0.05)\",\r\n    \"& .section-alternate__content\": {\r\n      paddingTop: theme.spacing(5),\r\n      paddingBottom: theme.spacing(5),\r\n    },\r\n  },\r\n}));\r\n\r\nconst AboutUs = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      Some About Us Content\r\n      <Section />\r\n      <Team data={team} />\r\n      {/* <Hero /> */}\r\n      {/* <Section>\r\n        <Story />\r\n      </Section> */}\r\n      {/* <Hero /> */}\r\n      {/* <Hero />\r\n      <Section>\r\n        <Story />\r\n      </Section>\r\n      <Section className={classes.sectionNoPaddingTop}>\r\n        <WhoWeAre />\r\n      </Section>\r\n      <Section className={classes.sectionNoPaddingTop}>\r\n        <Team data={team} />\r\n      </Section>\r\n      <SectionAlternate className={classes.sectionPartners}>\r\n        <Partners data={companies} />\r\n      </SectionAlternate>\r\n      <Contact data={mapData} />\r\n      <SectionAlternate>\r\n        <Gallery data={gallery} />\r\n      </SectionAlternate> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AboutUs;\r\n// export default AboutUs;\r\n// import React from \"react\";\r\n\r\n// const AboutUs = () => {\r\n//   return <div>About Us</div>;\r\n// };\r\n\r\n// export default AboutUs;\r\n","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\organisms\\Section\\index.js",[],"D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\organisms\\Section\\Section.js",[],"D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\organisms\\index.js",[],"D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\organisms\\CardReview\\index.js",[],"D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\organisms\\DescriptionListIcon\\index.js",[],"D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\organisms\\SectionAlternate\\index.js",[],"D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\organisms\\CardBase\\index.js",[],"D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\organisms\\CardCategory\\index.js",[],"D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\organisms\\CardJobMinimal\\index.js",[],"D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\organisms\\CardJobTag\\index.js",[],"D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\organisms\\CardJob\\index.js",[],"D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\organisms\\CardJobCompany\\index.js",[],"D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\organisms\\HeroShaped\\index.js",[],"D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\organisms\\HeroSideImage\\index.js",[],"D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\organisms\\Accordion\\index.js",[],"D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\organisms\\HeroBackground\\index.js",[],"D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\organisms\\CardProduct\\index.js",[],"D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\organisms\\Map\\index.js",[],"D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\organisms\\CardPromo\\index.js",[],"D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\organisms\\CardCategoryLink\\index.js",[],"D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\organisms\\HeroSimpleBackground\\index.js",[],"D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\organisms\\ContactForm\\index.js",[],"D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\organisms\\Parallax\\index.js",[],"D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\organisms\\CardPricingStandard\\index.js",[],"D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\organisms\\DescriptionListIcon\\DescriptionListIcon.js",[],"D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\organisms\\CardReview\\CardReview.js",[],"D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\organisms\\SectionAlternate\\SectionAlternate.js",[],"D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\organisms\\CardJobMinimal\\CardJobMinimal.js",[],"D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\organisms\\HeroSideImage\\HeroSideImage.js",[],"D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\organisms\\CardJob\\CardJob.js",[],"D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\organisms\\CardJobCompany\\CardJobCompany.js",[],"D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\organisms\\CardJobTag\\CardJobTag.js",[],"D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\organisms\\Accordion\\Accordion.js",[],"D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\organisms\\HeroShaped\\HeroShaped.js",[],"D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\organisms\\HeroBackground\\HeroBackground.js",[],"D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\organisms\\CardBase\\CardBase.js",[],"D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\organisms\\CardProduct\\CardProduct.js",[],"D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\organisms\\CardCategory\\CardCategory.js",[],"D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\organisms\\Map\\Map.js",[],"D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\organisms\\HeroSimpleBackground\\HeroSimpleBackground.js",[],"D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\organisms\\CardCategoryLink\\CardCategoryLink.js",[],"D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\organisms\\CardPromo\\CardPromo.js",[],"D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\organisms\\Parallax\\Parallax.js",[],"D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\organisms\\ContactForm\\ContactForm.js",[],"D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\organisms\\CardPricingStandard\\CardPricingStandard.js",[],"D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\data\\index.js",[],"D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\Gallery.js",[],"D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\WhoWeAre.js",[],"D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\Story.js",[],"D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\Team.js",[],"D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\Partners.js",[],"D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\Hero.js",[],"D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\BestSellingProducts.js",["1248"],"import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { ButtonBase, Card } from \"@material-ui/core\";\r\nimport logo from \"../assets/images/products/Edible-Oils-3.jpg\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    height: 130,\r\n    width: 130,\r\n  },\r\n  focusVisible: {},\r\n  imageButton: {\r\n    position: \"absolute\",\r\n    left: 0,\r\n    right: 0,\r\n    top: 0,\r\n    bottom: 0,\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    color: theme.palette.common.white,\r\n  },\r\n  imageSrc: {\r\n    position: \"absolute\",\r\n    left: 0,\r\n    right: 0,\r\n    top: 0,\r\n    bottom: 0,\r\n    backgroundSize: \"cover\",\r\n    backgroundPosition: \"center 40%\",\r\n  },\r\n  imageBackdrop: {\r\n    position: \"absolute\",\r\n    left: 0,\r\n    right: 0,\r\n    top: 0,\r\n    bottom: 0,\r\n    backgroundColor: theme.palette.common.black,\r\n    opacity: 0.4,\r\n    transition: theme.transitions.create(\"opacity\"),\r\n  },\r\n  imageTitle: {\r\n    position: \"relative\",\r\n    padding: `${theme.spacing(2)}px ${theme.spacing(4)}px ${\r\n      theme.spacing(1) + 6\r\n    }px`,\r\n  },\r\n  imageMarked: {\r\n    height: 3,\r\n    width: 18,\r\n    backgroundColor: theme.palette.common.white,\r\n    position: \"absolute\",\r\n    bottom: -2,\r\n    left: \"calc(50% - 9px)\",\r\n    transition: theme.transitions.create(\"opacity\"),\r\n  },\r\n}));\r\n\r\nexport default function BestSellingProducts() {\r\n  const classes = useStyles();\r\n  const [raised, setRaised] = useState(false);\r\n  const toggleRaised = () => setRaised(!raised);\r\n  const history = useHistory();\r\n  return (\r\n    <Grid container className={classes.root} spacing={1}>\r\n      <Grid item xs={12}>\r\n        <Grid container justify=\"center\" spacing={6}>\r\n          <Grid item>\r\n            <Card\r\n              className={classes.paper}\r\n              spacing={1}\r\n              // onMouseOver={toggleRaised}\r\n              // onMouseOut={toggleRaised}\r\n              // raised={raised}\r\n            >\r\n              <ButtonBase\r\n                focusRipple\r\n                className={classes.image}\r\n                focusVisibleClassName={classes.focusVisible}\r\n                style={{\r\n                  width: \"130\",\r\n                  height: \"130\",\r\n                }}\r\n                onClick={() => {\r\n                  console.log(\"Clicked Chilli\");\r\n                  history.push(`/home`);\r\n                }}\r\n              >\r\n                <img\r\n                  className=\"img-thumbnail\"\r\n                  alt=\"Staples\"\r\n                  src={logo}\r\n                  style={{\r\n                    width: \"130\",\r\n                    height: \"130\",\r\n                  }}\r\n                />\r\n\r\n                <span className={classes.imageBackdrop} />\r\n                <span className={classes.imageButton}></span>\r\n              </ButtonBase>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item>\r\n            <Paper\r\n              className={classes.paper}\r\n              spacing={1}\r\n              //   onMouseOver={toggleRaised}\r\n              //   onMouseOut={toggleRaised}\r\n              //   raised={raised}\r\n            />\r\n          </Grid>\r\n          <Grid item>\r\n            <Card\r\n              className={classes.paper}\r\n              spacing={1}\r\n              //   onMouseOver={toggleRaised}\r\n              //   onMouseOut={toggleRaised}\r\n              //   raised={raised}\r\n            />\r\n          </Grid>\r\n          <Grid item>\r\n            <Card\r\n              className={classes.paper}\r\n              spacing={1}\r\n              //   onMouseOver={toggleRaised}\r\n              //   onMouseOut={toggleRaised}\r\n              //   raised={raised}\r\n            />\r\n          </Grid>\r\n          <Grid item>\r\n            <Card\r\n              className={classes.paper}\r\n              spacing={1}\r\n              //   onMouseOver={toggleRaised}\r\n              //   onMouseOut={toggleRaised}\r\n              //   raised={raised}\r\n            />\r\n          </Grid>\r\n          <Grid item>\r\n            <Card\r\n              className={classes.paper}\r\n              spacing={1}\r\n              //   onMouseOver={toggleRaised}\r\n              //   onMouseOut={toggleRaised}\r\n              //   raised={raised}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","D:\\Work\\Vishudha\\react-workspace\\tagline-traders-ui\\src\\components\\OurProducts.js",["1249"],"import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { ButtonBase, Card } from \"@material-ui/core\";\r\nimport logo from \"../assets/images/logo.jpg\";\r\nimport Turmeric from \"../assets/images/products/Turmeric.jpg\";\r\nimport chilli from \"../assets/images/products/Chilli.jpg\";\r\nimport Coriander from \"../assets/images/products/Coriander.jpg\";\r\nimport Cashews from \"../assets/images/products/Cashews.jpg\";\r\nimport Salt from \"../assets/images/products/Salt.jpg\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    height: 130,\r\n    width: 130,\r\n  },\r\n  focusVisible: {},\r\n  imageButton: {\r\n    position: \"absolute\",\r\n    left: 0,\r\n    right: 0,\r\n    top: 0,\r\n    bottom: 0,\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    color: theme.palette.common.white,\r\n  },\r\n  imageSrc: {\r\n    position: \"absolute\",\r\n    left: 0,\r\n    right: 0,\r\n    top: 0,\r\n    bottom: 0,\r\n    backgroundSize: \"cover\",\r\n    backgroundPosition: \"center 40%\",\r\n  },\r\n  imageBackdrop: {\r\n    position: \"absolute\",\r\n    left: 0,\r\n    right: 0,\r\n    top: 0,\r\n    bottom: 0,\r\n    // backgroundColor: theme.palette.common.black,\r\n    opacity: 0.4,\r\n    transition: theme.transitions.create(\"opacity\"),\r\n  },\r\n  imageTitle: {\r\n    position: \"relative\",\r\n    padding: `${theme.spacing(2)}px ${theme.spacing(4)}px ${\r\n      theme.spacing(1) + 6\r\n    }px`,\r\n  },\r\n  imageMarked: {\r\n    height: 3,\r\n    width: 18,\r\n    backgroundColor: theme.palette.common.white,\r\n    position: \"absolute\",\r\n    bottom: -2,\r\n    left: \"calc(50% - 9px)\",\r\n    transition: theme.transitions.create(\"opacity\"),\r\n  },\r\n}));\r\n\r\nexport default function OurProducts() {\r\n  const classes = useStyles();\r\n  const [raised, setRaised] = useState(false);\r\n  const toggleRaised = () => setRaised(!raised);\r\n  const history = useHistory();\r\n  return (\r\n    <Grid container className={classes.root} spacing={1}>\r\n      <Grid item xs={12}>\r\n        <Grid container justify=\"center\" spacing={6}>\r\n          <Grid item>\r\n            <Card\r\n              className={classes.paper}\r\n              spacing={1}\r\n              onMouseOver={toggleRaised}\r\n              onMouseOut={toggleRaised}\r\n              raised={raised}\r\n            >\r\n              <ButtonBase\r\n                focusRipple\r\n                className={classes.image}\r\n                focusVisibleClassName={classes.focusVisible}\r\n                onClick={() => {\r\n                  console.log(\"Clicked Chilli\");\r\n                  history.push(`/product/60207430a5771666e458b353`);\r\n                }}\r\n                style={{\r\n                  width: \"130\",\r\n                  height: \"130\",\r\n                }}\r\n              >\r\n                <img\r\n                  className=\"img-thumbnail\"\r\n                  alt=\"Staples\"\r\n                  src={chilli}\r\n                  style={{\r\n                    width: \"130\",\r\n                    height: \"130\",\r\n                  }}\r\n                />\r\n\r\n                <span className={classes.imageBackdrop} />\r\n                <span className={classes.imageButton}></span>\r\n              </ButtonBase>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item>\r\n            <Card\r\n              className={classes.paper}\r\n              spacing={1}\r\n              // onMouseOver={toggleRaised}\r\n              // onMouseOut={toggleRaised}\r\n              // raised={raised}\r\n            >\r\n              <ButtonBase\r\n                focusRipple\r\n                className={classes.image}\r\n                focusVisibleClassName={classes.focusVisible}\r\n                style={{\r\n                  width: \"130\",\r\n                  height: \"130\",\r\n                }}\r\n              >\r\n                <img\r\n                  className=\"img-thumbnail\"\r\n                  alt=\"Staples\"\r\n                  src={Turmeric}\r\n                  style={{\r\n                    width: \"130\",\r\n                    height: \"130\",\r\n                  }}\r\n                />\r\n\r\n                <span className={classes.imageBackdrop} />\r\n                <span className={classes.imageButton}></span>\r\n              </ButtonBase>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item>\r\n            <Card\r\n              className={classes.paper}\r\n              spacing={1}\r\n              // onMouseOver={toggleRaised}\r\n              // onMouseOut={toggleRaised}\r\n              // raised={raised}\r\n            >\r\n              <ButtonBase\r\n                focusRipple\r\n                className={classes.image}\r\n                focusVisibleClassName={classes.focusVisible}\r\n                style={{\r\n                  width: \"130\",\r\n                  height: \"130\",\r\n                }}\r\n              >\r\n                <img\r\n                  className=\"img-thumbnail\"\r\n                  alt=\"Staples\"\r\n                  src={Coriander}\r\n                  style={{\r\n                    width: \"130\",\r\n                    height: \"130\",\r\n                  }}\r\n                />\r\n\r\n                <span className={classes.imageBackdrop} />\r\n                <span className={classes.imageButton}></span>\r\n              </ButtonBase>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item>\r\n            <Card\r\n              className={classes.paper}\r\n              spacing={1}\r\n              // onMouseOver={toggleRaised}\r\n              // onMouseOut={toggleRaised}\r\n              // raised={raised}\r\n            >\r\n              <ButtonBase\r\n                focusRipple\r\n                className={classes.image}\r\n                focusVisibleClassName={classes.focusVisible}\r\n                style={{\r\n                  width: \"130\",\r\n                  height: \"130\",\r\n                }}\r\n              >\r\n                <img\r\n                  className=\"img-thumbnail\"\r\n                  alt=\"Staples\"\r\n                  src={Cashews}\r\n                  style={{\r\n                    width: \"130\",\r\n                    height: \"130\",\r\n                  }}\r\n                />\r\n\r\n                <span className={classes.imageBackdrop} />\r\n                <span className={classes.imageButton}></span>\r\n              </ButtonBase>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item>\r\n            <Card\r\n              className={classes.paper}\r\n              spacing={1}\r\n              // onMouseOver={toggleRaised}\r\n              // onMouseOut={toggleRaised}\r\n              // raised={raised}\r\n            >\r\n              <ButtonBase\r\n                focusRipple\r\n                className={classes.image}\r\n                focusVisibleClassName={classes.focusVisible}\r\n                style={{\r\n                  width: \"130\",\r\n                  height: \"130\",\r\n                }}\r\n              >\r\n                <img\r\n                  className=\"img-thumbnail\"\r\n                  alt=\"Staples\"\r\n                  src={Salt}\r\n                  style={{\r\n                    width: \"130\",\r\n                    height: \"130\",\r\n                  }}\r\n                />\r\n\r\n                <span className={classes.imageBackdrop} />\r\n                <span className={classes.imageButton}></span>\r\n              </ButtonBase>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item>\r\n            <Card\r\n              className={classes.paper}\r\n              spacing={1}\r\n              // onMouseOver={toggleRaised}\r\n              // onMouseOut={toggleRaised}\r\n              // raised={raised}\r\n            >\r\n              <ButtonBase\r\n                focusRipple\r\n                className={classes.image}\r\n                focusVisibleClassName={classes.focusVisible}\r\n                style={{\r\n                  width: \"130\",\r\n                  height: \"130\",\r\n                }}\r\n              >\r\n                <img\r\n                  className=\"img-thumbnail\"\r\n                  alt=\"Staples\"\r\n                  src={logo}\r\n                  style={{\r\n                    width: \"130\",\r\n                    height: \"130\",\r\n                  }}\r\n                />\r\n\r\n                <span className={classes.imageBackdrop} />\r\n                <span className={classes.imageButton}></span>\r\n              </ButtonBase>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\index.js",[],["1250","1251"],"D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\App.js",["1252","1253","1254","1255"],"import CategoriesSubMenu from \"./components/CategoriesSubMenu\";\nimport { Container } from \"@material-ui/core\";\nimport SubMenuHeader from \"./components/SubMenuHeader\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { ThemeProvider } from \"@material-ui/core\";\nimport theme from \"./components/Theme\";\nimport Header from \"./components/Header\";\nimport CategoryWiseProducts from \"./components/CategoryWiseProducts\";\nimport Contact from \"./components/Contact\";\nimport AboutUs from \"./components/AboutUs\";\nimport ProductScreen from \"./components/ProductScreen\";\nimport CartLayoutScreen from \"./components/CartLayoutScreen\";\nimport LoginScreen from \"./components/LoginScreen\";\nimport SignUpScreen from \"./components/SignUpScreen\";\nimport ProfileScreen from \"./components/ProfileScreen\";\nimport ShippingScreen from \"./components/ShippingScreen\";\nimport PaymentScreen from \"./components/PaymentScreen\";\nimport PlaceOrderScreen from \"./components/PlaceOrderScreen\";\nimport OrderScreen from \"./components/OrderScreen\";\nimport UserListScreen from \"./components/UserListScreen\";\nimport UserEditScreen from \"./components/UserEditScreen\";\nimport ProductListScreen from \"./components/ProductListScreen\";\nimport ProductEditScreen from \"./components/ProductEditScreen\";\nimport ProductCreateScreen from \"./components/ProductCreateScreen\";\nimport OrderListScreen from \"./components/OrderListScreen\";\n// import SubMenuHeader from \"./components/SubMenuHeader\";\nimport MuiHeader from \"./components/MuiHeader\";\nimport CategoriesSubMenuVer2 from \"./components/CategoriesSubMenuVer2\";\nimport Dashboard from \"./components/Dashboard\";\nimport ProductSettingsScreen from \"./components/ProductSettingsScreen\";\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <Router>\n        {/* NEED TO APPLY MARGIN  TO APP BAR REFER MUI C...\n            AND COMMENT THE BELOW LIKE AFTER MAKING CHANGES  -KSP\n        */}\n        {/* <CategoriesSubMenu /> */}\n        {/* <MuiHeader /> */}\n        <MuiHeader />\n        {/* <SubMenuHeader /> */}\n        {/* <CategoriesSubMenuVer2 /> */}\n        <main className=\"py-0\">\n          <Container>\n            <Route path=\"/order/:id\" component={OrderScreen} />\n            <Route path=\"/shipping\" component={ShippingScreen} />\n            <Route path=\"/payment\" component={PaymentScreen} />\n            <Route path=\"/placeorder\" component={PlaceOrderScreen} />\n            <Route path=\"/login\" component={LoginScreen} />\n            <Route path=\"/signup\" component={SignUpScreen} />\n            <Route path=\"/profile\" component={ProfileScreen} />\n            <Route path=\"/product/:productId\" component={ProductScreen} exact />\n            <Route path=\"/cart/:id?\" component={CartLayoutScreen} />\n            <Route path=\"/showcart\" component={CartLayoutScreen} />\n            {/* <Route path=\"/\" component={CartLayoutScreen} /> */}\n            <Route path=\"/admin/userlist\" component={UserListScreen} exact />\n            <Route path=\"/admin/user/:id/edit\" component={UserEditScreen} />\n            <Route\n              path=\"/admin/productlist\"\n              component={ProductListScreen}\n              exact\n            />\n            <Route\n              path=\"/admin/productlist/:pageNumber\"\n              component={ProductListScreen}\n              exact\n            />\n            <Route\n              path=\"/admin/product/:id/edit\"\n              component={ProductEditScreen}\n              exact\n            />\n            <Route\n              path=\"/admin/product/new\"\n              component={ProductCreateScreen}\n              exact\n            />\n            <Route path=\"/admin/orderlist\" component={OrderListScreen} exact />\n            <Route\n              path=\"/search/:keyword\"\n              component={CategoryWiseProducts}\n              exact\n            />\n            <Route\n              path=\"/page/:pageNumber\"\n              component={CategoryWiseProducts}\n              exact\n            />\n            <Route\n              path=\"/search/:keyword/page/:pageNumber\"\n              component={CategoryWiseProducts}\n              exact\n            />\n            <Route\n              path=\"/category/:categoryId\"\n              component={CategoryWiseProducts}\n              exact\n            />\n            <Route\n              path=\"/admin/product-settings/:productId\"\n              component={ProductSettingsScreen}\n              exact\n            />\n            <Route path=\"/admin/products\" component={ProductListScreen} exact />\n            <Route path=\"/contact\" component={Contact} exact />\n            <Route path=\"/aboutus\" component={AboutUs} exact />\n            <Route path=\"/\" component={Dashboard} exact />\n          </Container>\n        </main>\n      </Router>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\store.js",[],"D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\components\\CategoriesSubMenu.js",[],"D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\components\\AboutUs.js",["1256","1257","1258","1259","1260","1261","1262","1263","1264","1265"],"D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\components\\SubMenuHeader.js",["1266","1267"],"D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\components\\Theme.js",[],"D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\components\\Contact.js",["1268"],"import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport {\n  useMediaQuery,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  Avatar,\n} from \"@material-ui/core\";\n// import { SectionHeader } from \"../components/molecules\";\n\nconst useStyles = makeStyles((theme) => ({\n  list: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    [theme.breakpoints.up(\"md\")]: {\n      flexDirection: \"row\",\n    },\n  },\n  listItemText: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    flex: \"0 0 auto\",\n  },\n  listItem: {\n    justifyContent: \"flex-start\",\n    [theme.breakpoints.up(\"md\")]: {\n      justifyContent: \"center\",\n    },\n  },\n  icon: {\n    background: \"transparent\",\n    borderRadius: 0,\n  },\n}));\n\nconst Contact = (props) => {\n  const { className, ...rest } = props;\n  const classes = useStyles();\n\n  const theme = useTheme();\n  const isMd = useMediaQuery(theme.breakpoints.up(\"md\"), {\n    defaultMatches: true,\n  });\n\n  return (\n    <div className={className} {...rest}>\n      {/* <SectionHeader\n        title=\"Contact details\"\n        subtitle=\"Our contact details. We carefully read and answer to all your questions.\"\n        data-aos=\"fade-up\"\n        align={isMd ? \"center\" : \"left\"}\n      /> */}\n      <List disablePadding className={classes.list}>\n        <ListItem\n          disableGutters\n          data-aos=\"fade-up\"\n          className={classes.listItem}\n        >\n          <ListItemAvatar>\n            <Avatar\n              src=\"/assets/images/illustrations/contact-icon-phone.png\"\n              srcSet=\"/assets/images/illustrations/contact-icon-phone@2x.png 2x\"\n              className={classes.icon}\n            />\n          </ListItemAvatar>\n          <ListItemText\n            className={classes.listItemText}\n            primary=\"Phone\"\n            secondary=\"+39 659-657-0133\"\n            primaryTypographyProps={{\n              variant: \"subtitle1\",\n              color: \"textSecondary\",\n            }}\n            secondaryTypographyProps={{\n              variant: \"subtitle1\",\n              color: \"textPrimary\",\n              component: \"span\",\n            }}\n          />\n        </ListItem>\n        <ListItem\n          disableGutters\n          data-aos=\"fade-up\"\n          className={classes.listItem}\n        >\n          <ListItemAvatar>\n            <Avatar\n              src=\"/assets/images/illustrations/contact-icon-mail.png\"\n              srcSet=\"/assets/images/illustrations/contact-icon-mail@2x.png 2x\"\n              className={classes.icon}\n            />\n          </ListItemAvatar>\n          <ListItemText\n            className={classes.listItemText}\n            primary=\"Email\"\n            secondary=\"hi@maccarianagency.com\"\n            primaryTypographyProps={{\n              variant: \"subtitle1\",\n              color: \"textSecondary\",\n            }}\n            secondaryTypographyProps={{\n              variant: \"subtitle1\",\n              color: \"textPrimary\",\n            }}\n          />\n        </ListItem>\n        <ListItem\n          disableGutters\n          data-aos=\"fade-up\"\n          className={classes.listItem}\n        >\n          <ListItemAvatar>\n            <Avatar\n              src=\"/assets/images/illustrations/contact-icon-pin.png\"\n              srcSet=\"/assets/images/illustrations/contact-icon-pin@2x.png 2x\"\n              className={classes.icon}\n            />\n          </ListItemAvatar>\n          <ListItemText\n            className={classes.listItemText}\n            primary=\"Head Office\"\n            secondary=\"Via E. Golla 4\"\n            primaryTypographyProps={{\n              variant: \"subtitle1\",\n              color: \"textSecondary\",\n            }}\n            secondaryTypographyProps={{\n              variant: \"subtitle1\",\n              color: \"textPrimary\",\n            }}\n          />\n        </ListItem>\n      </List>\n    </div>\n  );\n};\n\nContact.propTypes = {\n  /**\n   * External classes\n   */\n  className: PropTypes.string,\n};\n\nexport default Contact;\n","D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\components\\CategoriesSubMenuVer2.js",[],"D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\components\\MuiHeader.js",["1269","1270","1271","1272","1273","1274","1275","1276","1277"],"import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Badge from \"@material-ui/core/Badge\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\r\nimport ZipCodeTracker from \"./ZipCodeTracker\";\r\nimport ShoppingCartIcon from \"@material-ui/icons/ShoppingCart\";\r\nimport logo from \"../assets/images/logo.jpg\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport LoginScreen from \"../components/LoginScreen\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { logout } from \"../actions/userAction\";\r\nimport CustomizedBadges from \"./CustomizedBadges\";\r\nimport { FormControl, Select } from \"@material-ui/core\";\r\nimport ShoppingCartCountScreen from \"./ShoppingCartCountScreen\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    display: \"none\",\r\n    fontSize: \"20px\",\r\n    fontFamily: \"Roboto\",\r\n    fontWeight: \"500\",\r\n    fontStyle: \"italic\",\r\n\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      display: \"block\",\r\n    },\r\n  },\r\n  appTitle: {\r\n    fontSize: \"1.75rem\",\r\n  },\r\n\r\n  sectionDesktop: {\r\n    display: \"none\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      display: \"flex\",\r\n    },\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n\r\n  loginBtn: {\r\n    color: \"#2874f0\",\r\n    fontWeight: \"500\",\r\n    backgroundColor: \"#fff\",\r\n    cursor: \"pointer\",\r\n    borderRadius: \"2px\",\r\n    height: \"32px\",\r\n    padding: \"5px 40px\",\r\n    border: \"1px solid #dbdbdb\",\r\n  },\r\n}));\r\nconst MuiHeader = () => {\r\n  const history = useHistory();\r\n  console.log(history);\r\n  let [alreadyLoggedIn, setAlreadyLoggedIn] = useState(\"false\");\r\n  const classes = useStyles();\r\n  const [targetUrl, setTargetUrl] = React.useState(\"\");\r\n  const [open, setOpen] = React.useState(false);\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const dispatch = useDispatch();\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n  alreadyLoggedIn = userInfo !== null ? true : false;\r\n  console.log(\"alreadyLoggedIn : \" + alreadyLoggedIn);\r\n  let [loginLogoutBtnTitle, setLoginLogoutTitle] = useState(\"\");\r\n  let [loginLogoutBtnUrl, setLoginLogoutUrl] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (userInfo && userInfo.name) {\r\n      setLoginLogoutTitle(\"logout\");\r\n      setLoginLogoutUrl(\"/logout\");\r\n    } else {\r\n      setLoginLogoutTitle(\"login\");\r\n      setLoginLogoutUrl(\"/login\");\r\n    }\r\n    // loginLogoutBtnUrl = alreadyLoggedIn === true ? \"/logout\" : \"/login\";\r\n    console.log(\r\n      \"loginBtnTitle : \" +\r\n        loginLogoutBtnTitle +\r\n        \" , loginLogoutBtnUrl :\" +\r\n        loginLogoutBtnUrl\r\n    );\r\n  }, [loginLogoutBtnTitle, loginLogoutBtnUrl]);\r\n\r\n  // let loginLogoutBtnTitle = alreadyLoggedIn === true ? \"logout\" : \"login\";\r\n  // let loginLogoutBtnUrl = alreadyLoggedIn === true ? \"/logout\" : \"/login\";\r\n  // console.log(\"loginBtnTitle : \" + loginLogoutBtnTitle);\r\n  const roleOfuserInfoExist = userInfo && userInfo.role ? true : false;\r\n\r\n  const handleChange = (event) => {\r\n    console.log(\"event.target.value : \" + event.target.value);\r\n\r\n    setTargetUrl(event.target.value);\r\n    history.push(\"/admin/\" + event.target.value);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const logoutHandler = () => {\r\n    dispatch(logout());\r\n    history.push(\"/login\");\r\n  };\r\n\r\n  const handleLoginLogout = () => {\r\n    loginLogoutBtnTitle = alreadyLoggedIn === true ? \"logout\" : \"login\";\r\n    console.log(\"loginLogoutBtnTitle : \" + loginLogoutBtnTitle);\r\n    if (alreadyLoggedIn) {\r\n      dispatch(logout());\r\n      history.push(\"/login\");\r\n    }\r\n  };\r\n  const isMenuOpen = Boolean(anchorEl);\r\n\r\n  const handleProfileMenuOpen = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleMenuClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleCartItems = () => {\r\n    console.log(\"Navigating to Cart Screen from the MUI Header Handler\");\r\n    history.push(\"/showCart\");\r\n  };\r\n\r\n  const menuId = \"primary-search-account-menu\";\r\n  const renderMenu = (\r\n    <Menu\r\n      anchorEl={anchorEl}\r\n      anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      id={menuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      open={isMenuOpen}\r\n      onClose={handleMenuClose}\r\n    >\r\n      <MenuItem onClick={handleMenuClose}>\r\n        <Link to=\"/profile\">\r\n          <Typography variant=\"body1\" color=\"primary\">\r\n            Profile\r\n          </Typography>\r\n        </Link>\r\n      </MenuItem>\r\n      <MenuItem onClick={handleMenuClose}>\r\n        {\" \"}\r\n        <Typography variant=\"body1\" color=\"primary\">\r\n          My account\r\n        </Typography>\r\n      </MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  // userInfo !== null && userInfo.role !== null ? true : false;\r\n  return (\r\n    <div className={classes.grow}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <div>\r\n            <img\r\n              className=\"img-thumbnail\"\r\n              alt=\"Staples\"\r\n              src={logo}\r\n              style={{\r\n                height: \"3.5rem\",\r\n                width: \"3.5rem\",\r\n                marginRight: \"5em\",\r\n              }}\r\n            />\r\n          </div>\r\n          <Typography\r\n            className={classes.title}\r\n            variant=\"h6\"\r\n            noWrap\r\n            style={{ color: \"white\" }}\r\n          >\r\n            Tagline Traders Groceries\r\n          </Typography>\r\n\r\n          <div className={classes.grow} />\r\n          <div className={classes.sectionDesktop}>\r\n            <ZipCodeTracker />\r\n\r\n            <Button\r\n              onClick={handleLoginLogout}\r\n              className={classes.loginBtn}\r\n              value={loginLogoutBtnTitle}\r\n              size=\"small\"\r\n              variant=\"contained\"\r\n              style={{\r\n                color: \"green\",\r\n                backgroundColor: \"white\",\r\n                height: \"2rem\",\r\n                margin: \"0.5rem\",\r\n                alignContent: \"center\",\r\n                verticalAlign: \"baseline\",\r\n              }}\r\n            >\r\n              {loginLogoutBtnTitle}\r\n            </Button>\r\n            <ShoppingCartCountScreen />\r\n\r\n            {roleOfuserInfoExist &&\r\n              userInfo.role &&\r\n              userInfo.role === \"ROLE_USER\" && (\r\n                <IconButton\r\n                  edge=\"end\"\r\n                  aria-label=\"account of current user\"\r\n                  aria-controls={menuId}\r\n                  aria-haspopup=\"true\"\r\n                  onClick={handleProfileMenuOpen}\r\n                  color=\"inherit\"\r\n                  title={userInfo.userName}\r\n                >\r\n                  <AccountCircle />\r\n                </IconButton>\r\n              )}\r\n            {roleOfuserInfoExist &&\r\n              userInfo.role &&\r\n              userInfo.role === \"ROLE_ADMIN\" && (\r\n                <FormControl className={classes.formControl}>\r\n                  <Select\r\n                    labelId=\"demo-controlled-open-select-label\"\r\n                    id=\"demo-controlled-open-select\"\r\n                    open={open}\r\n                    defaultValue={userInfo.name}\r\n                    onClose={handleClose}\r\n                    onOpen={handleOpen}\r\n                    color={classes.primary}\r\n                    style={{\r\n                      backgroundColor: \"white\",\r\n                      padding: \"0px 0px 0px 0px\",\r\n                    }}\r\n                    onChange={handleChange}\r\n                  >\r\n                    <MenuItem value={userInfo.name}>{userInfo.name}</MenuItem>\r\n                    <MenuItem value=\"Users\">users</MenuItem>\r\n                    <MenuItem value=\"products\">Products</MenuItem>\r\n                    <MenuItem value=\"orderlist\">Orders</MenuItem>\r\n                  </Select>\r\n                </FormControl>\r\n              )}\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n      {renderMenu}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MuiHeader;\r\n","D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\components\\Header.js",["1278","1279","1280","1281","1282","1283","1284","1285","1286","1287","1288","1289"],"D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\reducers\\categoryReducers.js",[],"D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\reducers\\cartReducers.js",["1290"],"import {\n  CART_ADD_ITEM,\n  CART_EDFIT_ITEM,\n  CART_REMOVE_ITEM,\n  CART_SAVE_SHIPPING_ADDRESS,\n  CART_SAVE_PAYMENT_METHOD,\n  CART_CLEAR_ITEMS,\n} from \"../constants/cartConstants\";\n\nexport const cartReducer = (\n  state = { cartItems: [], shippingAddress: {} },\n  action\n) => {\n  switch (action.type) {\n    case CART_ADD_ITEM:\n      const item = action.payload;\n      const existItem = state.payload;\n      if (existItem) {\n        return {\n          ...state,\n          cartItems: state.cartItems.map((x) =>\n            x.product === existItem.product ? item : x\n          ),\n        };\n      } else {\n        return {\n          ...state,\n          cartItems: [...state.cartItems, item],\n        };\n      }\n\n    case CART_REMOVE_ITEM:\n      console.log(\"action.payload:\" + action.payload);\n      console.log(\n        \"action.payload:\" + action.payload.product + \"\" + action.payload.index\n      );\n      return {\n        ...state,\n        cartItems: state.cartItems\n          .filter((y, index) => index !== action.payload.index)\n          .filter((x) => x.product !== action.payload),\n      };\n    case CART_SAVE_SHIPPING_ADDRESS:\n      return {\n        ...state,\n        shippingAddress: action.payload,\n      };\n    case CART_SAVE_PAYMENT_METHOD:\n      return {\n        ...state,\n        paymentMethod: action.payload,\n      };\n    case CART_CLEAR_ITEMS:\n      return {\n        ...state,\n        cartItems: [],\n      };\n    default:\n      return state;\n  }\n};\n","D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\reducers\\orderReducers.js",[],"D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\reducers\\rootCategoryReducers.js",[],"D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\reducers\\productReducers.js",[],"D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\reducers\\userReducers.js",[],"D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\components\\WhoWeAre.js",[],"D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\components\\Story.js",[],"D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\components\\Team.js",[],"D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\components\\Partners.js",[],"D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\components\\Message.js",[],"D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\components\\Hero.js",[],"D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\components\\Writeup.js",["1291","1292"],"D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\components\\Gallery.js",[],"D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\components\\CheckoutSteps.js",[],"D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\components\\controls\\Spinner.js",[],"D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\components\\controls\\Button.js",[],["1293","1294"],"D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\actions\\productAction.js",["1295","1296"],"import axios from \"axios\";\r\nimport {\r\n  PRODUCT_LIST_REQUEST,\r\n  PRODUCT_LIST_SUCCESS,\r\n  PRODUCT_LIST_FAIL,\r\n  PRODUCT_LIST_BY_CATEGORY_ID_REQUEST,\r\n  PRODUCT_LIST_BY_CATEGORY_ID_SUCCESS,\r\n  PRODUCT_LIST_BY_CATEGORY_ID_FAIL,\r\n  PRODUCT_DETAILS_BY_SUBCATEGORY_ID_PRODUCT_ID_REQUEST,\r\n  PRODUCT_DETAILS_BY_SUBCATEGORY_ID_PRODUCT_ID_SUCCESS,\r\n  PRODUCT_DETAILS_BY_SUBCATEGORY_ID_PRODUCT_ID_FAIL,\r\n  PRODUCT_DETAILS_REQUEST,\r\n  PRODUCT_DETAILS_SUCCESS,\r\n  PRODUCT_DETAILS_FAIL,\r\n  PRODUCT_DELETE_SUCCESS,\r\n  PRODUCT_DELETE_REQUEST,\r\n  PRODUCT_DELETE_FAIL,\r\n  PRODUCT_CREATE_REQUEST,\r\n  PRODUCT_CREATE_SUCCESS,\r\n  PRODUCT_CREATE_FAIL,\r\n  PRODUCT_UPDATE_REQUEST,\r\n  PRODUCT_UPDATE_SUCCESS,\r\n  PRODUCT_UPDATE_FAIL,\r\n  PRODUCT_CREATE_REVIEW_REQUEST,\r\n  PRODUCT_CREATE_REVIEW_SUCCESS,\r\n  PRODUCT_CREATE_REVIEW_FAIL,\r\n  PRODUCT_TOP_REQUEST,\r\n  PRODUCT_TOP_SUCCESS,\r\n  PRODUCT_TOP_FAIL,\r\n  PRODUCT_LIST_BY_SUB_CATEGORY_REQUEST,\r\n  PRODUCT_LIST_BY_SUB_CATEGORY_SUCCESS,\r\n  PRODUCT_LIST_BY_SUB_CATEGORY_FAIL,\r\n  PRODUCT_DETAILS_BY_PRODUCT_ID_REQUEST,\r\n  PRODUCT_DETAILS_BY_PRODUCT_ID_SUCCESS,\r\n  PRODUCT_DETAILS_BY_PRODUCT_ID_FAIL,\r\n  PRODUCT_LIST_BEST_SELLER_REQUEST,\r\n  PRODUCT_LIST_BEST_SELLER_SUCCESS,\r\n  PRODUCT_LIST_BEST_SELLER_FAIL,\r\n} from \"../constants/productConstants\";\r\nimport { logout } from \"./userAction\";\r\n\r\nexport const listProducts = (\r\n  productid,\r\n  keyword = \"\",\r\n  pageNumber = \"\"\r\n) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_LIST_REQUEST });\r\n    // {`/api/subcategory/2/product/${match.params.id}`;}\r\n    const { data } = await axios.get(\"/api/subcategory/2/product\");\r\n\r\n    dispatch({\r\n      type: PRODUCT_LIST_SUCCESS,\r\n      payload: data,\r\n    });\r\n    console.log(\" Response Data : \" + data);\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const listProductDetailsByProductId = (productId) => async (\r\n  dispatch\r\n) => {\r\n  try {\r\n    console.log(\"Inside listProductDetailsByProductId : \" + productId);\r\n    dispatch({ type: PRODUCT_DETAILS_BY_PRODUCT_ID_REQUEST });\r\n    const { data } = await axios.get(`/api/product/${productId}`);\r\n\r\n    dispatch({\r\n      type: PRODUCT_DETAILS_BY_PRODUCT_ID_SUCCESS,\r\n      payload: data,\r\n    });\r\n    console.log(\" Response Data : \" + data);\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_DETAILS_BY_PRODUCT_ID_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const listProductsByCategoryId = (categoryId) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_LIST_BY_CATEGORY_ID_REQUEST });\r\n    const { data } = await axios.get(`/api/category/${categoryId}/product`);\r\n\r\n    dispatch({\r\n      type: PRODUCT_LIST_BY_CATEGORY_ID_SUCCESS,\r\n      payload: data,\r\n    });\r\n    console.log(\" Response Data : \" + data);\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_LIST_BY_CATEGORY_ID_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\nexport const listProductsBySubCategoryId = (subCategoryId, productId) => async (\r\n  dispatch\r\n) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_LIST_BY_SUB_CATEGORY_REQUEST });\r\n    // {`/api/subcategory/2/product/${match.params.id}`;}\r\n    const { data } = await axios.get(\r\n      `/api/subcategory/${subCategoryId}/product`\r\n    );\r\n\r\n    dispatch({\r\n      type: PRODUCT_LIST_BY_SUB_CATEGORY_SUCCESS,\r\n      payload: data,\r\n    });\r\n    console.log(\" Response Data : \" + data);\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_LIST_BY_SUB_CATEGORY_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const listProductDetailsBySubCategoryIdProductId = (\r\n  subCategoryId,\r\n  productId\r\n) => async (dispatch) => {\r\n  try {\r\n    console.log(\r\n      \"Inside product ACtion listProductDetailsBySubCategoryIdProductId  \" +\r\n        subCategoryId +\r\n        \"Product ID : \" +\r\n        productId\r\n    );\r\n    dispatch({ type: PRODUCT_DETAILS_BY_SUBCATEGORY_ID_PRODUCT_ID_REQUEST });\r\n\r\n    const { data } = await axios.get(\r\n      `/api/subcategory/${subCategoryId}/product/${productId}`\r\n    );\r\n\r\n    dispatch({\r\n      type: PRODUCT_DETAILS_BY_SUBCATEGORY_ID_PRODUCT_ID_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_DETAILS_BY_SUBCATEGORY_ID_PRODUCT_ID_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const listProductDetails = (subCategoryId, productId) => async (\r\n  dispatch\r\n) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_DETAILS_BY_SUBCATEGORY_ID_PRODUCT_ID_REQUEST });\r\n\r\n    const { data } = await axios.get(\r\n      `api/subcategory/${subCategoryId}/product/${productId}`\r\n    );\r\n\r\n    dispatch({\r\n      type: PRODUCT_DETAILS_BY_SUBCATEGORY_ID_PRODUCT_ID_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_DETAILS_BY_SUBCATEGORY_ID_PRODUCT_ID_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteProduct = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: PRODUCT_DELETE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    await axios.delete(`/api/products/${id}`, config);\r\n\r\n    dispatch({\r\n      type: PRODUCT_DELETE_SUCCESS,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === \"Not authorized, token failed\") {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: PRODUCT_DELETE_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const createProduct = (product) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: PRODUCT_CREATE_REQUEST,\r\n    });\r\n    console.log(product);\r\n    const {\r\n      name,\r\n      brand,\r\n      description,\r\n      countInStock,\r\n      isTaxble,\r\n      taxPercent,\r\n    } = product;\r\n    console.log(\r\n      \"name : \" +\r\n        product.name +\r\n        \" , description : \" +\r\n        product.description +\r\n        \" , brand : \" +\r\n        product.brand +\r\n        \" , countInStock : \" +\r\n        product.countInStock +\r\n        \" , isTaxable : \" +\r\n        product.isTaxable +\r\n        \" , taxPercent : \" +\r\n        product.taxPercent\r\n    );\r\n    dispatch({ type: PRODUCT_CREATE_REQUEST });\r\n    const { data } = await axios.post(\r\n      `/api/subcategory/${product.subCategorySelected}/product`,\r\n      {\r\n        name,\r\n        brand,\r\n        description,\r\n        countInStock,\r\n        isTaxble,\r\n        taxPercent,\r\n      }\r\n    );\r\n\r\n    dispatch({\r\n      type: PRODUCT_CREATE_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === \"Not authorized, token failed\") {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: PRODUCT_CREATE_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateProduct = (product) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: PRODUCT_UPDATE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(\r\n      `/api/products/${product._id}`,\r\n      product,\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: PRODUCT_UPDATE_SUCCESS,\r\n      payload: data,\r\n    });\r\n    dispatch({ type: PRODUCT_DETAILS_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === \"Not authorized, token failed\") {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: PRODUCT_UPDATE_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const createProductReview = (productId, review) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: PRODUCT_CREATE_REVIEW_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    await axios.post(`/api/products/${productId}/reviews`, review, config);\r\n\r\n    dispatch({\r\n      type: PRODUCT_CREATE_REVIEW_SUCCESS,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === \"Not authorized, token failed\") {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: PRODUCT_CREATE_REVIEW_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const listTopProducts = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_TOP_REQUEST });\r\n\r\n    const { data } = await axios.get(`/api/products/top`);\r\n\r\n    dispatch({\r\n      type: PRODUCT_TOP_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_TOP_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const listBestSellerProducts = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_LIST_BEST_SELLER_REQUEST });\r\n\r\n    const { data } = await axios.get(`/api/product/best-seller`);\r\n\r\n    dispatch({\r\n      type: PRODUCT_LIST_BEST_SELLER_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_LIST_BEST_SELLER_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n","D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\actions\\orderAction.js",["1297","1298","1299"],"import axios from \"axios\";\r\nimport { CART_CLEAR_ITEMS } from \"../constants/cartConstants\";\r\nimport {\r\n  ORDER_CREATE_REQUEST,\r\n  ORDER_CREATE_SUCCESS,\r\n  ORDER_CREATE_FAIL,\r\n  ORDER_DETAILS_FAIL,\r\n  ORDER_DETAILS_SUCCESS,\r\n  ORDER_DETAILS_REQUEST,\r\n  ORDER_PAY_FAIL,\r\n  ORDER_PAY_SUCCESS,\r\n  ORDER_PAY_REQUEST,\r\n  ORDER_LIST_MY_REQUEST,\r\n  ORDER_LIST_MY_SUCCESS,\r\n  ORDER_LIST_MY_FAIL,\r\n  ORDER_LIST_FAIL,\r\n  ORDER_LIST_SUCCESS,\r\n  ORDER_LIST_REQUEST,\r\n  ORDER_DELIVER_FAIL,\r\n  ORDER_DELIVER_SUCCESS,\r\n  ORDER_DELIVER_REQUEST,\r\n} from \"../constants/orderConstants\";\r\nimport { logout } from \"./userAction\";\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_CREATE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        // Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(\r\n      `/api/order/${userInfo.id}`,\r\n      order,\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: ORDER_CREATE_SUCCESS,\r\n      payload: data,\r\n    });\r\n    dispatch({\r\n      type: CART_CLEAR_ITEMS,\r\n      payload: data,\r\n    });\r\n    localStorage.removeItem(\"cartItems\");\r\n    localStorage.removeItem(\"paymentMethod\");\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === \"Not authorized, token failed\") {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: ORDER_CREATE_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getOrderDetailsById = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_DETAILS_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const { data } = await axios.get(`/api/order/${id}`);\r\n\r\n    dispatch({\r\n      type: ORDER_DETAILS_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === \"Not authorized, token failed\") {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: ORDER_DETAILS_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const payOrder = (orderId, paymentResult) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_PAY_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(\r\n      `/api/orders/${orderId}/pay`,\r\n      paymentResult,\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: ORDER_PAY_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === \"Not authorized, token failed\") {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: ORDER_PAY_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const deliverOrder = (order) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_DELIVER_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(\r\n      `/api/orders/${order._id}/deliver`,\r\n      {},\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: ORDER_DELIVER_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === \"Not authorized, token failed\") {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: ORDER_DELIVER_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const listMyOrders = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_LIST_MY_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    /*const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };*/\r\n\r\n    const { data } = await axios.get(`/api/order/myorders`);\r\n\r\n    dispatch({\r\n      type: ORDER_LIST_MY_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === \"Not authorized, token failed\") {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: ORDER_LIST_MY_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const listOrders = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_LIST_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const { data } = await axios.get(`/api/order`);\r\n\r\n    dispatch({\r\n      type: ORDER_LIST_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === \"Not authorized, token failed\") {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: ORDER_LIST_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n","D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\actions\\cartAction.js",[],"D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\actions\\userAction.js",["1300","1301"],"D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\constants\\orderConstants.js",[],"D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\constants\\userConstants.js",[],"D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\constants\\productConstants.js",[],"D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\constants\\cartConstants.js",[],"D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\constants\\rootCategoryConstants.js",[],"D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\constants\\categoryConstants.js",[],"D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\components\\atoms\\Image\\Image.js",[],"D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\components\\ZipCodeTracker.js",["1302"],"D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\components\\controls\\RupeeIcon.js",[],["1303","1304"],"D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\components\\MorePopper.js",["1305","1306","1307","1308","1309","1310","1311","1312","1313","1314","1315"],["1316","1317"],"D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\components\\organisms\\index.js",[],"D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\data\\index.js",[],"D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\components\\controls\\BulkLooseRadioGroup.js",["1318"],"import React from \"react\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: \"center\",\r\n    marginBottom: \"1.5em\",\r\n  },\r\n}));\r\n\r\nconst BulkLooseRadioGroup = ({ parentCB }) => {\r\n  const [orderType, setOrderType] = React.useState(\"bulk\");\r\n  const handleChange = (event) => {\r\n    setOrderType((prev) => event.target.value);\r\n    console.log(\"Selected \" + event.target.value);\r\n    parentCB(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Grid container spacing={3}>\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          style={{\r\n            fontSize: \"0.80rem\",\r\n            fontWeight: \"400\",\r\n            color: \"nlGray\",\r\n          }}\r\n        >\r\n          <FormControl\r\n            component=\"fieldset\"\r\n            style={{\r\n              fontSize: \"0.80rem\",\r\n              fontWeight: \"400\",\r\n              color: \"nlGray\",\r\n            }}\r\n          >\r\n            <RadioGroup\r\n              style={{\r\n                display: \"flex\",\r\n                fontSize: \"0.80rem\",\r\n                fontWeight: \"400\",\r\n                color: \"nlGray\",\r\n              }}\r\n              aria-label=\"orderType\"\r\n              name=\"orderType\"\r\n              value={orderType}\r\n              onChange={handleChange}\r\n            >\r\n              <FormControlLabel\r\n                style={{\r\n                  fontSize: \"0.80rem\",\r\n                  fontWeight: \"400\",\r\n                  color: \"nlGray\",\r\n                }}\r\n                value=\"bulk\"\r\n                control={<Radio />}\r\n                label=\"Bulk\"\r\n              />\r\n              <FormControlLabel\r\n                value=\"domestic\"\r\n                control={<Radio />}\r\n                label=\"Domestic\"\r\n              />\r\n            </RadioGroup>\r\n          </FormControl>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\nexport default BulkLooseRadioGroup;\r\n",["1319","1320"],"D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\components\\BestSellingProducts.js",["1321","1322","1323"],"import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { ButtonBase, Card } from \"@material-ui/core\";\r\nimport { listBestSellerProducts } from \"../actions/productAction\";\r\n// import relativePath from \"../assets/images/products/A.2PALM 15 LTRS.jpg\";\r\n\r\nimport Message from \"./Message\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    height: 130,\r\n    width: 130,\r\n  },\r\n  focusVisible: {},\r\n  imageButton: {\r\n    position: \"absolute\",\r\n    left: 0,\r\n    right: 0,\r\n    top: 0,\r\n    bottom: 0,\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    color: theme.palette.common.white,\r\n  },\r\n  imageSrc: {\r\n    position: \"absolute\",\r\n    left: 0,\r\n    right: 0,\r\n    top: 0,\r\n    bottom: 0,\r\n    backgroundSize: \"cover\",\r\n    backgroundPosition: \"center 40%\",\r\n  },\r\n  imageBackdrop: {\r\n    position: \"absolute\",\r\n    left: 0,\r\n    right: 0,\r\n    top: 0,\r\n    bottom: 0,\r\n    backgroundColor: theme.palette.common.black,\r\n    opacity: 0.4,\r\n    transition: theme.transitions.create(\"opacity\"),\r\n  },\r\n  imageTitle: {\r\n    position: \"relative\",\r\n    padding: `${theme.spacing(2)}px ${theme.spacing(4)}px ${\r\n      theme.spacing(1) + 6\r\n    }px`,\r\n  },\r\n  imageMarked: {\r\n    height: 3,\r\n    width: 18,\r\n    backgroundColor: theme.palette.common.white,\r\n    position: \"absolute\",\r\n    bottom: -2,\r\n    left: \"calc(50% - 9px)\",\r\n    transition: theme.transitions.create(\"opacity\"),\r\n  },\r\n}));\r\n\r\nconst BestSellingProducts = () => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  let renderBestSellerProducts;\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(listBestSellerProducts());\r\n  }, [dispatch]);\r\n  const bestSellers = useSelector((state) => state.bestSellers);\r\n  const { loading, error, bestSellerProducts } = bestSellers;\r\n  console.log(bestSellerProducts);\r\n\r\n  if (bestSellerProducts && bestSellerProducts.length > 0) {\r\n    renderBestSellerProducts = (\r\n      <Grid container className={classes.root} spacing={1}>\r\n        <Grid item xs={12}>\r\n          <Grid container justify=\"center\" spacing={6}>\r\n            {bestSellerProducts.map((item, index) => (\r\n              <Grid item key={item.id}>\r\n                {console.log(\r\n                  \"Each Item Id : \" +\r\n                    item.id +\r\n                    \", subCategoryId : \" +\r\n                    item.subCategory\r\n                )}\r\n                <Card className={classes.paper} spacing={1}>\r\n                  <ButtonBase\r\n                    focusRipple\r\n                    className={classes.image}\r\n                    onClick={() => {\r\n                      console.log(\r\n                        \"Clicked \" +\r\n                          item.id +\r\n                          \"ITEMS IMAGE URL \" +\r\n                          item.imageurl\r\n                      );\r\n                      history.push(`/product/${item.id}`);\r\n                    }}\r\n                    style={{\r\n                      width: \"8rem\",\r\n                      height: \"8rem\",\r\n                    }}\r\n                  >\r\n                    <img\r\n                      alt=\"Staples\"\r\n                      style={{\r\n                        width: \"7rem\",\r\n                        height: \"6rem\",\r\n                      }}\r\n                      src={item.imageurl}\r\n                    />\r\n                  </ButtonBase>\r\n                </Card>\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  } else {\r\n    renderBestSellerProducts = (\r\n      <Message>No Records Found for Best Seller category : </Message>\r\n    );\r\n  }\r\n  return <>{renderBestSellerProducts}</>;\r\n};\r\nexport default BestSellingProducts;\r\n","D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\components\\atoms\\Image\\index.js",[],"D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\components\\organisms\\CardBase\\index.js",[],"D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\components\\molecules\\SectionHeader\\index.js",[],"D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\components\\molecules\\index.js",[],"D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\components\\molecules\\SectionHeader\\SectionHeader.js",[],"D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\components\\organisms\\CardBase\\CardBase.js",[],"D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\components\\controls\\SectionHeader.js",[],["1324","1325"],"D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\components\\categoriesMenuData.js",[],"D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\components\\Rating.js",[],"D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\components\\CustomizedBadges.js",["1326","1327","1328"],"import React, { useState, useEffect } from \"react\";\r\nimport Badge from \"@material-ui/core/Badge\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport ShoppingCartIcon from \"@material-ui/icons/ShoppingCart\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fetchUpdatedCartItemsCount } from \"../actions/cartAction\";\r\nconst StyledBadge = withStyles((theme) => ({\r\n  badge: {\r\n    right: -3,\r\n    top: 13,\r\n    border: `2px solid ${theme.palette.background.paper}`,\r\n    padding: \"0 4px\",\r\n  },\r\n}))(Badge);\r\n\r\nexport default function CustomizedBadges() {\r\n  const [cartItemsCount, setCartItemsCount] = useState(0);\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(fetchUpdatedCartItemsCount());\r\n    // const updatedCartItemsCount = useSelector(\r\n    //   (state) => state.cart.cartItems.updatedCartItemsCount\r\n    // );\r\n    // const { cartItemsUpdatedCount } = updatedCartItemsCount;\r\n    let cartItems = localStorage.getItem(\"cartItems\")\r\n      ? JSON.parse(localStorage.getItem(\"cartItems\"))\r\n      : [];\r\n    console.log(\"cartItemsExist : \" + cartItems.length);\r\n    // setCartItemsCount(cartItemsUpdatedCount);\r\n  }, []);\r\n\r\n  const updatedCartItemsCount = useSelector(\r\n    (state) => state.cart.cartItems.updatedCartItemsCount\r\n  );\r\n  // const { cartItemsUpdatedCount } = updatedCartItemsCount;\r\n  // setCartItemsCount(updatedCartItemsCount);\r\n\r\n  return (\r\n    <IconButton aria-label=\"cart\">\r\n      <StyledBadge badgeContent={updatedCartItemsCount} color=\"secondary\">\r\n        <ShoppingCartIcon />\r\n      </StyledBadge>\r\n    </IconButton>\r\n  );\r\n}\r\n","D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\components\\Grid\\GridItem.js",[],"D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\components\\Grid\\GridContainer.js",[],"D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\components\\Table\\Table.js",[],"D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\components\\Card\\Card.js",[],"D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\components\\Card\\CardHeader.js",[],"D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\components\\Card\\CardBody.js",[],"D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\assets\\jss\\material-dashboard-react\\components\\cardBodyStyle.js",[],"D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\assets\\jss\\material-dashboard-react\\components\\cardHeaderStyle.js",[],"D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\assets\\jss\\material-dashboard-react\\components\\cardStyle.js",[],"D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\assets\\jss\\material-dashboard-react.js",[],"D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\assets\\jss\\material-dashboard-react\\components\\tableStyle.js",[],"D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\components\\ProductOverview.js",["1329","1330","1331","1332"],"import React, { useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport test_product_image from \"../assets/images/products/Vaishnavi.jpeg\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { makeStyles, useTheme } from \"@material-ui/styles\";\r\n\r\nimport {\r\n  Grid,\r\n  Card,\r\n  CardMedia,\r\n  CardContent,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport Image from \"./atoms/Image/Image\";\r\n\r\nconst ProductOverview = ({ match, product, categoryId }) => {\r\n  const history = useHistory();\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    imageIcon: {\r\n      height: \"100%\",\r\n    },\r\n    paper: {\r\n      height: \"90%\",\r\n      width: \"100vh\",\r\n      padding: \".5rem\",\r\n    },\r\n    iconRoot: {\r\n      textAlign: \"center\",\r\n    },\r\n    newButton: {\r\n      position: \"absolute\",\r\n      right: \"10px\",\r\n    },\r\n    image: {\r\n      objectFit: \"contain\",\r\n      height: 120,\r\n    },\r\n    fontWeightBold: {\r\n      fontWeight: \"bold\",\r\n    },\r\n    cardMedia: {\r\n      padding: theme.spacing(2, 2, 0, 2),\r\n      display: \"flex\",\r\n      justifyContent: \"center\",\r\n    },\r\n    addButton: {\r\n      width: \"100%\",\r\n      // padding: 14px 28px;\r\n      // font-size: 16px;\r\n      cursor: \"pointer\",\r\n      // text-align: center;\r\n    },\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 120,\r\n    },\r\n  }));\r\n  const classes = useStyles();\r\n\r\n  const addToCartHandler = () => {\r\n    console.log(\"Clicked Add to Cart Handler\");\r\n    history.push(`/product/${product.id}`);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Card raised={2}>\r\n        <CardMedia className={classes.cardMedia}>\r\n          <Image\r\n            src={product.imageurl}\r\n            alt={product.name}\r\n            className={classes.image}\r\n          />\r\n        </CardMedia>\r\n        <CardContent>\r\n          <Grid container spacing={2} align=\"center\">\r\n            <Grid item xs={12}>\r\n              <Typography color=\"textPrimary\" variant=\"subtitle1\" align=\"left\">\r\n                {product.name}\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={12} md={6}>\r\n              <Typography\r\n                color=\"textPrimary\"\r\n                variant=\"subtitle1\"\r\n                className={classes.fontWeightBold}\r\n                align=\"right\"\r\n              ></Typography>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Grid container spacing={2} align=\"center\">\r\n            <Grid item xs={12} align=\"center\">\r\n              <Button\r\n                size=\"small\"\r\n                variant=\"contained\"\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                className={classes.addButton}\r\n                onClick={() => {\r\n                  addToCartHandler();\r\n                }}\r\n                disabled={product.countInStock === 0}\r\n              >\r\n                Add to cart\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductOverview;\r\n","D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\components\\MainCategories.js",["1333","1334","1335","1336"],"import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { ButtonBase, Card } from \"@material-ui/core\";\r\nimport { useHistory } from \"react-router\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { listCategories } from \"../actions/categoryAction\";\r\nimport Message from \"./Message\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    height: 130,\r\n    width: 130,\r\n  },\r\n  focusVisible: {},\r\n  imageButton: {\r\n    position: \"absolute\",\r\n    left: 0,\r\n    right: 0,\r\n    top: 0,\r\n    bottom: 0,\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    color: theme.palette.common.white,\r\n  },\r\n  imageSrc: {\r\n    position: \"absolute\",\r\n    left: 0,\r\n    right: 0,\r\n    top: 0,\r\n    bottom: 0,\r\n    backgroundSize: \"cover\",\r\n    backgroundPosition: \"center 40%\",\r\n  },\r\n  imageBackdrop: {\r\n    position: \"absolute\",\r\n    left: 0,\r\n    right: 0,\r\n    top: 0,\r\n    bottom: 0,\r\n    // backgroundColor: theme.palette.common.black,\r\n    opacity: 0.4,\r\n    transition: theme.transitions.create(\"opacity\"),\r\n  },\r\n  imageTitle: {\r\n    position: \"relative\",\r\n    padding: `${theme.spacing(2)}px ${theme.spacing(4)}px ${\r\n      theme.spacing(1) + 6\r\n    }px`,\r\n  },\r\n  imageMarked: {\r\n    height: 3,\r\n    width: 18,\r\n    backgroundColor: theme.palette.common.white,\r\n    position: \"absolute\",\r\n    bottom: -2,\r\n    left: \"calc(50% - 9px)\",\r\n    transition: theme.transitions.create(\"opacity\"),\r\n  },\r\n}));\r\n\r\nexport default function MainCategories() {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  let renderMainCategories;\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(listCategories());\r\n  }, [dispatch]);\r\n  const categoryList = useSelector((state) => state.categoryList);\r\n  const { loading, error, categories } = categoryList;\r\n  console.log(categories);\r\n  let tempImgUrl = \"\";\r\n\r\n  if (categories && categories.length > 0) {\r\n    renderMainCategories = (\r\n      <Grid container className={classes.root} spacing={1}>\r\n        <Grid item xs={12}>\r\n          <Grid container justify=\"center\" spacing={6}>\r\n            {categories.map((item, index) => (\r\n              <Grid item key={item.id}>\r\n                {\r\n                  console.log(\r\n                    \"Each Item Id : \" +\r\n                      item.id +\r\n                      \", Category Name : \" +\r\n                      item.imageurl\r\n                  )\r\n                  // tempImgUrl = item.imageurl;\r\n                }\r\n                <Card className={classes.paper} spacing={1}>\r\n                  <ButtonBase\r\n                    focusRipple\r\n                    className={classes.image}\r\n                    focusVisibleClassName={classes.focusVisible}\r\n                    onClick={() => {\r\n                      console.log(\r\n                        \"Clicked category : \" +\r\n                          item.id +\r\n                          \" Category Name : \" +\r\n                          item.name\r\n                      );\r\n                      history.push(`/category/${item.id}`);\r\n                    }}\r\n                    style={{\r\n                      width: \"130\",\r\n                      height: \"130\",\r\n                    }}\r\n                  >\r\n                    <img\r\n                      className=\"img-thumbnail\"\r\n                      alt=\"Staples\"\r\n                      src={item.imageurl}\r\n                      style={{\r\n                        width: \"130\",\r\n                        height: \"130\",\r\n                      }}\r\n                    />\r\n\r\n                    <span className={classes.imageBackdrop} />\r\n                    <span className={classes.imageButton}></span>\r\n                  </ButtonBase>\r\n                </Card>\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  } else {\r\n    renderMainCategories = <Message>No Records Found for Categories: </Message>;\r\n  }\r\n  return <>{renderMainCategories}</>;\r\n}\r\n","D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\actions\\categoryAction.js",[],"D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\components\\Paginate.js",[],"D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\components\\CategoryWiseProducts.js",["1337"],"import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../components/Message\";\nimport { listProductsByCategoryId } from \"../actions/productAction\";\nimport Spinner from \"../components/controls/Spinner\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport { useMediaQuery, Grid } from \"@material-ui/core\";\nimport ProductOverview from \"../components/ProductOverview\";\n\nconst CategoryWiseProducts = ({ history, match }) => {\n  const theme = useTheme();\n  const isMd = useMediaQuery(theme.breakpoints.up(\"md\"), {\n    defaultMatches: true,\n  });\n  let categoryId = match.params.categoryId;\n  const productsByCategoryId = [];\n  const dispatch = useDispatch();\n  let renderProducts;\n  useEffect(() => {\n    console.log(\"match.params.categoryId : --> \" + categoryId);\n\n    dispatch(listProductsByCategoryId(categoryId));\n  }, [dispatch, categoryId]);\n  const productListByCategory = useSelector(\n    (state) => state.productListByCategory\n  );\n  const { loading, error, category } = productListByCategory;\n  console.log(productListByCategory);\n  if (category && category.subCategories) {\n    console.log(\"TRUE\");\n    category.subCategories.map(function (val, indx) {\n      console.log(val.products);\n      val.products.map(function (prd, ind) {\n        console.log(prd);\n        productsByCategoryId.push(prd);\n      });\n      return productsByCategoryId;\n    });\n  }\n\n  if (productsByCategoryId && productsByCategoryId.length > 0) {\n    renderProducts = (\n      <Grid container spacing={isMd ? 4 : 2}>\n        {productsByCategoryId.map((item, index) => (\n          <Grid item xs={12} sm={6} md={3} key={index} data-aos=\"fade-up\">\n            <ProductOverview product={item} categoryId={categoryId} />\n          </Grid>\n        ))}\n      </Grid>\n    );\n  } else {\n    renderProducts = (\n      <Message>No Records Found for Category ID : {categoryId}</Message>\n    );\n  }\n  /**\n   * BELOW CODE WILL BE REPLACED WITH dispatch -- SUNIL LAKKAKULA\n   */\n  /**\n   * URL : http://localhost:8080/api/subcategory/2/product\n   */\n\n  return (\n    <>\n      {loading ? (\n        <Spinner />\n      ) : error ? (\n        <Message variant=\"danger\">{error}</Message>\n      ) : (\n        <div>{renderProducts}</div>\n      )}\n    </>\n  );\n};\n\nexport default CategoryWiseProducts;\n","D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\components\\OrderScreen.js",["1338","1339","1340","1341","1342","1343"],"D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\components\\PaymentScreen.js",["1344","1345"],"import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport CheckoutSteps from \"../components/CheckoutSteps\";\nimport { savePaymentMethod } from \"../actions/cartAction\";\nimport { Link } from \"react-router-dom\";\nimport {\n  FormControlLabel,\n  FormLabel,\n  Grid,\n  Paper,\n  Radio,\n  RadioGroup,\n  Button,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport GridContainer from \"../components/Grid/GridContainer\";\nimport GridItem from \"../components/Grid/GridItem\";\nimport Card from \"./Card/Card\";\nimport CardHeader from \"./Card/CardHeader\";\nimport CardBody from \"./Card/CardBody\";\nimport StepperScreen from \"./StepperScreen\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    justifyContent: \"center\",\n  },\n  paper: {\n    height: \"100%\",\n    width: \"100vh\",\n    padding: \"2rem\",\n  },\n  control: {\n    padding: theme.spacing(2),\n  },\n  cardCategoryWhite: {\n    \"&,& a,& a:hover,& a:focus\": {\n      color: \"rgba(255,255,255,.62)\",\n      margin: \"0\",\n      fontSize: \"14px\",\n      marginTop: \"0\",\n      marginBottom: \"0\",\n    },\n    \"& a,& a:hover,& a:focus\": {\n      color: \"#FFFFFF\",\n    },\n  },\n  cardTitleGreen: {\n    color: \"#26A541\",\n    marginTop: \"0px\",\n    minHeight: \"auto\",\n    fontFamily: \"Roboto\",\n    marginBottom: \"3px\",\n    textDecoration: \"none\",\n    fontSize: \"1rem\",\n    fontWeight: 500,\n    textTransform: \"capitalize\",\n    textAlign: \"left\",\n    \"& small\": {\n      color: \"#777\",\n      fontSize: \"65%\",\n      fontWeight: \"400\",\n      lineHeight: \"1\",\n    },\n  },\n}));\n\nconst PaymentScreen = ({ history }) => {\n  const cart = useSelector((state) => state.cart);\n  const classes = useStyles();\n  const { shippingAddress } = cart;\n\n  if (!shippingAddress.address) {\n    history.push(\"/shipping\");\n  }\n  const handleChange = (event) => {\n    setPaymentMethod(event.target.value);\n  };\n\n  const [paymentMethod, setPaymentMethod] = useState(\"gpay\");\n\n  const dispatch = useDispatch();\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(savePaymentMethod(paymentMethod));\n    history.push(\"/placeorder\");\n  };\n\n  return (\n    <>\n      <GridContainer>\n        <GridItem xs={12} sm={12} md={12}>\n          <Link\n            className=\"btn\"\n            size=\"small\"\n            variant=\"contained\"\n            type=\"submit\"\n            color=\"primary\"\n            to=\"/\"\n            style={{\n              color: \"white\",\n              backgroundColor: \"#26A541\",\n              marginTop: \"1rem\",\n              marginBottom: \"1rem\",\n              align: \"center\",\n              width: \"9rem\",\n            }}\n          >\n            Go to Groceries\n          </Link>\n        </GridItem>\n      </GridContainer>\n      <GridContainer>\n        <GridItem xs={12} sm={12} md={12}>\n          <StepperScreen currentStep=\"2\" />\n        </GridItem>\n        <GridItem xs={12} sm={12} md={12}>\n          <Card>\n            <CardHeader color=\"primary\">\n              <h4 className={classes.cardTitleWhite}>Payment Details</h4>\n            </CardHeader>\n            <CardBody>\n              <Grid container className={classes.root} spacing={2}>\n                <Grid item xs={12} container justify=\"center\">\n                  <Paper className={classes.paper}>\n                    <form onSubmit={submitHandler}>\n                      <Grid item xs={12} container>\n                        <RadioGroup\n                          aria-label=\"payment\"\n                          name=\"payment\"\n                          value={paymentMethod}\n                          onChange={handleChange}\n                        >\n                          <FormControlLabel\n                            value=\"gpay\"\n                            control={<Radio />}\n                            label=\"G-Pay\"\n                          />\n                          <FormControlLabel\n                            value=\"upi\"\n                            control={<Radio />}\n                            label=\"UPI payment\"\n                          />\n                        </RadioGroup>\n                      </Grid>\n                      <Grid item xs={12} container justify=\"center\">\n                        <Button\n                          size=\"small\"\n                          variant=\"contained\"\n                          type=\"submit\"\n                          color=\"primary\"\n                        >\n                          Continue\n                        </Button>\n                      </Grid>\n                    </form>\n                  </Paper>\n                </Grid>\n              </Grid>\n            </CardBody>\n          </Card>\n        </GridItem>\n      </GridContainer>\n    </>\n  );\n};\n\nexport default PaymentScreen;\n","D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\components\\UserListScreen.js",[],"D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\components\\ProfileScreen.js",["1346","1347","1348","1349","1350","1351","1352"],"import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getUserDetails, updateUserProfile } from \"../actions/userAction\";\nimport { listMyOrders } from \"../actions/orderAction\";\nimport { USER_UPDATE_PROFILE_RESET } from \"../constants/userConstants\";\nimport { Button, Divider, Grid, Paper, TextField } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& .MuiTextField-root\": {\n      margin: theme.spacing(1),\n      width: 200,\n    },\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: \"center\",\n    color: theme.palette.text.secondary,\n  },\n\n  imageFrame: {\n    boxShadow: `0 5px 12px 0 ${theme.palette.cardShadow}`,\n    borderRadius: theme.spacing(1),\n  },\n}));\n\nconst ProfileScreen = ({ location, history }) => {\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [contactNo, setContactNo] = useState(\"\");\n  const dispatch = useDispatch();\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n  const { loading, error, user } = userInfo;\n\n  // const userLogin = useSelector((state) => state.userLogin);\n  // const { userInfo } = userLogin;\n\n  const userUpdateProfile = useSelector((state) => state.userUpdateProfile);\n  const { success } = userUpdateProfile;\n\n  const orderListMy = useSelector((state) => state.orderListMy);\n  const { loading: loadingOrders, error: errorOrders, orders } = orderListMy;\n  const classes = useStyles();\n  useEffect(() => {\n    if (!userInfo) {\n      history.push(\"/login\");\n    } else {\n      if (!user || !user.name || success) {\n        dispatch({ type: USER_UPDATE_PROFILE_RESET });\n        dispatch(getUserDetails(userInfo.id));\n        // dispatch(listMyOrders());\n      } else {\n        setName(user.name);\n        setEmail(user.emailId);\n      }\n    }\n  }, [dispatch, history, userInfo, user, success]);\n\n  const updateProfileHandler = (e) => {\n    e.preventDefault();\n    if (password !== confirmPassword) {\n      setMessage(\"Passwords do not match\");\n    } else {\n      dispatch(\n        updateUserProfile({ id: user.id, name, email, password, contactNo })\n      );\n    }\n  };\n  // const updateProfileHandler = (e) => {\n  //   console.log(\"updating Profile..\");\n  //   // dispatch()\n  // };\n  return (\n    <div>\n      <Grid container spacing={1}>\n        {/* Profile Grid */}\n        <Grid item xs={3}>\n          <Paper className={classes.paper}>\n            <Grid container spacing={2}>\n              <Grid item xs={12}>\n                <h3>Users Profile</h3>\n                <Divider />\n              </Grid>\n              <Grid item xs={12}>\n                <Grid container spacing={2} data-aos=\"fade-up\">\n                  <Grid item xs={12}>\n                    <TextField\n                      placeholder=\"Name\"\n                      label=\"Name\"\n                      id=\"outlined-size-small\"\n                      variant=\"outlined\"\n                      size=\"small\"\n                      onChange={(e) => setName(e.target.value)}\n                      type=\"text\"\n                      value={name}\n                    />\n                  </Grid>\n                </Grid>\n              </Grid>\n              <Grid item xs={12}>\n                <Grid container spacing={2} data-aos=\"fade-up\">\n                  <Grid item xs={12}>\n                    <TextField\n                      placeholder=\"Password\"\n                      label=\"Password\"\n                      id=\"outlined-size-small\"\n                      variant=\"outlined\"\n                      size=\"small\"\n                      onChange={(e) => setPassword(e.target.value)}\n                      type=\"text\"\n                      value={password}\n                    />\n                  </Grid>\n                </Grid>\n              </Grid>\n              <Grid item xs={12}>\n                <Grid container spacing={1} data-aos=\"fade-up\">\n                  <Grid item xs={12}>\n                    <TextField\n                      placeholder=\"Confirm Password\"\n                      label=\"Confirm Password\"\n                      id=\"outlined-size-small\"\n                      variant=\"outlined\"\n                      size=\"small\"\n                      onChange={(e) => setConfirmPassword(e.target.value)}\n                      type=\"text\"\n                      value={confirmPassword}\n                    />\n                  </Grid>\n                </Grid>\n              </Grid>\n              <Grid item xs={12}>\n                <Grid container spacing={1} data-aos=\"fade-up\">\n                  <Grid item xs={12}>\n                    <TextField\n                      placeholder=\"Contact No\"\n                      label=\"Contact No\"\n                      id=\"outlined-size-small\"\n                      variant=\"outlined\"\n                      size=\"small\"\n                      onChange={(e) => setContactNo(e.target.value)}\n                      type=\"text\"\n                      value={contactNo}\n                    />\n                  </Grid>\n                </Grid>\n              </Grid>\n              <Grid item xs={12}>\n                <Grid container spacing={2} data-aos=\"fade-up\">\n                  <Grid item xs={12}>\n                    <TextField\n                      placeholder=\"Email Id\"\n                      label=\"Email Id\"\n                      id=\"outlined-size-small\"\n                      variant=\"outlined\"\n                      size=\"small\"\n                      onChange={(e) => setEmail(e.target.value)}\n                      type=\"text\"\n                      value={email}\n                    />\n                  </Grid>\n                </Grid>\n              </Grid>\n\n              <Grid item xs={12} align=\"center\">\n                <Button\n                  align=\"center\"\n                  size=\"small\"\n                  variant=\"contained\"\n                  type=\"submit\"\n                  color=\"primary\"\n                  onClick={updateProfileHandler}\n                >\n                  Update Profile\n                </Button>\n              </Grid>\n              {/* <button onClick={() => history.push(\"/\")}>Back to Groceries</button> */}\n            </Grid>\n          </Paper>\n        </Grid>\n        {/* Orders Grid */}\n        <Grid item xs={9}>\n          <Paper className={classes.paper}>\n            <Grid container spacing={2}>\n              <Grid item xs={12}>\n                <h3>Previous Orders</h3>\n                <Divider />\n              </Grid>\n            </Grid>\n          </Paper>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\nexport default ProfileScreen;\n","D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\components\\UserEditScreen.js",["1353","1354","1355","1356","1357","1358","1359","1360"],"D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\components\\ProductScreen.js",["1361","1362","1363","1364","1365"],"import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport { listProductDetailsByProductId } from \"../actions/productAction\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport ReactSelectMaterialUi from \"react-select-material-ui\";\r\nimport {\r\n  Grid,\r\n  Button,\r\n  Icon,\r\n  MenuItem,\r\n  Paper,\r\n  Typography,\r\n  Divider,\r\n} from \"@material-ui/core\";\r\nimport rupeeSvgIcon from \"../assets/images/currency-inr.svg\";\r\nimport { Link } from \"react-router-dom\";\r\nimport GridContainer from \"../components/Grid/GridContainer\";\r\nimport GridItem from \"../components/Grid/GridItem\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: \"center\",\r\n    color: theme.palette.text.secondary,\r\n  },\r\n\r\n  imageFrame: {\r\n    boxShadow: `0 5px 12px 0 ${theme.palette.cardShadow}`,\r\n    borderRadius: theme.spacing(1),\r\n  },\r\n  listGrid: {\r\n    overflow: \"hidden\",\r\n  },\r\n  partnerImage: {\r\n    maxWidth: 120,\r\n  },\r\n  imageIcon: {\r\n    height: \"60%\",\r\n  },\r\n  iconRoot: {\r\n    textAlign: \"center\",\r\n  },\r\n  image: {\r\n    objectFit: \"contain\",\r\n    height: 300,\r\n    width: 200,\r\n  },\r\n}));\r\n\r\nconst ProductScreen = ({ history, match }) => {\r\n  const [quantitySelected, setQuantitySelected] = useState(() => {\r\n    return 0;\r\n  });\r\n\r\n  const options = Array(100)\r\n    .fill()\r\n    .map((_, i) => {\r\n      return i.toString();\r\n    });\r\n\r\n  const handleOrderTypeChange = (value) => {\r\n    console.log(\"Order Type Ver2 Changed :--> \" + value);\r\n    setOrderTypeSelected(value);\r\n  };\r\n  const orderTypeOptions = [\"Select\", \"Bulk\", \"Domestic\"];\r\n\r\n  const calculateSellingPrice = (qtySelected) => {\r\n    console.log(\"Exc calculateSellingPrice for QTY : \" + qtySelected);\r\n    if (\r\n      (orderTypeSelected === \"d\" || orderTypeSelected === \"Domestic\") &&\r\n      qtySelected > 0\r\n    ) {\r\n      return product.availableInDomestic\r\n        .filter((domestic) => domestic.unitOfMessure === uom)\r\n        .map((matchedRec) => {\r\n          console.log(\r\n            \"matchedRec.sellingPrice * counter : matchedRec.sellingPrice -> \" +\r\n              matchedRec.sellingPrice +\r\n              \" , qtySelected : -> \" +\r\n              qtySelected\r\n          );\r\n          console.log(\"Result of CALC\" + matchedRec.sellingPrice * qtySelected);\r\n          return matchedRec.sellingPrice * qtySelected;\r\n        });\r\n    } else if (\r\n      (orderTypeSelected === \"b\" || orderTypeSelected === \"Bulk\") &&\r\n      qtySelected > 0\r\n    ) {\r\n      return product.availableInBulk\r\n        .filter((bulk) => bulk.unitOfMessure === uom)\r\n        .map((matchedRec) => {\r\n          console.log(\r\n            \"matchedRec.sellingPrice * counter : matchedRec.sellingPrice -> \" +\r\n              matchedRec.sellingPrice +\r\n              \" , qtySelected : -> \" +\r\n              qtySelected\r\n          );\r\n          console.log(\"Result of CALC\" + matchedRec.sellingPrice * qtySelected);\r\n          return matchedRec.sellingPrice * qtySelected;\r\n        });\r\n    }\r\n  };\r\n  const [calculatedSellingPrice, setCalculatedSellingPrice] = useState(() => {\r\n    return 0.0;\r\n  });\r\n\r\n  let [orderTypeSelected, setOrderTypeSelected] = useState(\"bulk\");\r\n  const classes = useStyles();\r\n  const [uom, setUom] = useState(() => \"None\");\r\n  // const [disableFlag, setDisableFlag] = useState(Boolean(true));\r\n\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    console.log(\"Exec useEffect..!\" + \"\" + uom + \"\" + orderTypeSelected);\r\n\r\n    dispatch(\r\n      listProductDetailsByProductId(\r\n        // match.params.subCategoryId,\r\n        match.params.productId\r\n      )\r\n    );\r\n  }, [dispatch, match]);\r\n\r\n  const productDetailsByProductId = useSelector(\r\n    (state) => state.productDetailsByProductId\r\n  );\r\n  const { loading, error, product } = productDetailsByProductId;\r\n\r\n  const renderUomOptions = () => {\r\n    console.log(\"*** Exec renderUomOptions --> Reading product ****\");\r\n    if (product) {\r\n      console.log(\"orderTypeSelected : \" + orderTypeSelected);\r\n      if (orderTypeSelected === \"Domestic\") {\r\n        console.log(\"Exec D Option Menu Code\");\r\n        console.log(product.availableInDomestic);\r\n        if (product.availableInDomestic) {\r\n          return product.availableInDomestic.map((domesticItem, i) => {\r\n            return (\r\n              <MenuItem key={i} value={domesticItem.unitOfMessure}>\r\n                {domesticItem.unitOfMessure}\r\n              </MenuItem>\r\n            );\r\n          });\r\n        }\r\n      }\r\n      if (orderTypeSelected === \"Bulk\") {\r\n        console.log(\"Exec b Option Menu Code\");\r\n        console.log(product);\r\n        if (product.availableInBulk) {\r\n          return product.availableInBulk.map((bulkItem, i) => {\r\n            return (\r\n              <MenuItem key={i} value={bulkItem.unitOfMessure}>\r\n                {bulkItem.unitOfMessure}\r\n              </MenuItem>\r\n            );\r\n          });\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const addToCartHandler = () => {\r\n    history.push(\r\n      `/cart/${match.params.productId}?qty=${quantitySelected}&uom=${uom}&order=${orderTypeSelected}`\r\n    );\r\n  };\r\n\r\n  const handleChangeUom = (event) => {\r\n    console.log(\"Handler for Change of UOM : Value :-> \" + event.target.value);\r\n    setUom((u) => event.target.value);\r\n    setQuantitySelected(0);\r\n    setCalculatedSellingPrice(0);\r\n  };\r\n  const handleChangeCounter = (value) => {\r\n    console.log(\"value : \" + value);\r\n    if (value === \"0\") {\r\n      console.log(\"value angd 0 are equal\");\r\n      setCalculatedSellingPrice(0);\r\n    } else {\r\n      console.log(\"value angd 0 are  NOT equal\");\r\n      setQuantitySelected(value);\r\n      console.log(calculateSellingPrice(value));\r\n      setCalculatedSellingPrice(calculateSellingPrice(value));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <GridContainer>\r\n        <GridItem xs={12} sm={12} md={12}>\r\n          <Link\r\n            className=\"btn\"\r\n            size=\"small\"\r\n            variant=\"contained\"\r\n            type=\"submit\"\r\n            color=\"primary\"\r\n            to=\"/\"\r\n            style={{\r\n              color: \"white\",\r\n              backgroundColor: \"#26A541\",\r\n              marginTop: \"1rem\",\r\n              marginBottom: \"1rem\",\r\n              align: \"center\",\r\n              width: \"9rem\",\r\n            }}\r\n          >\r\n            Go to Groceries\r\n          </Link>\r\n        </GridItem>\r\n      </GridContainer>\r\n      {console.log(\"Product : \" + product)}\r\n      {!product ? (\r\n        <Message />\r\n      ) : (\r\n        <div>\r\n          <Grid container spacing={1}>\r\n            <Grid item xs={6}>\r\n              <Paper className={classes.paper}>\r\n                <Grid container spacing={2}>\r\n                  <Grid item xs={12}>\r\n                    <Typography variant=\"h6\">{product.description}</Typography>\r\n                    <Divider />\r\n                  </Grid>\r\n\r\n                  <Grid item xs={12}>\r\n                    <Grid container spacing={2} data-aos=\"fade-up\">\r\n                      <Grid item xs={12}>\r\n                        <Grid container spacing={1}>\r\n                          <Grid item xs={6} align=\"left\">\r\n                            Order Type\r\n                          </Grid>\r\n                          <Grid item xs={6} align=\"center\">\r\n                            <ReactSelectMaterialUi\r\n                              style={{ width: \"10rem\" }}\r\n                              value=\"bulk\"\r\n                              options={orderTypeOptions}\r\n                              onChange={handleOrderTypeChange}\r\n                            />\r\n                          </Grid>\r\n                        </Grid>\r\n                      </Grid>\r\n\r\n                      <Grid item xs={12}>\r\n                        <Grid container spacing={1}>\r\n                          <Grid item xs={6} align=\"left\">\r\n                            Unit Of Messure\r\n                          </Grid>\r\n                          <Grid item xs={6} align=\"center\">\r\n                            <Select value={uom} onChange={handleChangeUom}>\r\n                              {renderUomOptions()}\r\n                            </Select>\r\n                          </Grid>\r\n                        </Grid>\r\n                      </Grid>\r\n                      <Grid item xs={12}>\r\n                        <Grid container spacing={1}>\r\n                          <Grid item xs={6} align=\"left\">\r\n                            Quantity\r\n                          </Grid>\r\n                          <Grid item xs={6} align=\"center\">\r\n                            <ReactSelectMaterialUi\r\n                              style={{ width: \"10rem\" }}\r\n                              value={quantitySelected}\r\n                              options={options}\r\n                              onChange={handleChangeCounter}\r\n                            />\r\n                          </Grid>\r\n                        </Grid>\r\n                      </Grid>\r\n\r\n                      <Grid item xs={12}>\r\n                        <Grid container spacing={1}>\r\n                          <Grid item xs={6} align=\"left\">\r\n                            Price\r\n                          </Grid>\r\n                          <Grid item xs={6} align=\"center\">\r\n                            <Icon classes={{ root: classes.iconRoot }}>\r\n                              <img\r\n                                alt=\"curency inr\"\r\n                                src={rupeeSvgIcon}\r\n                                className={classes.imageIcon}\r\n                              />\r\n                            </Icon>{\" \"}\r\n                            {calculatedSellingPrice\r\n                              ? calculatedSellingPrice\r\n                              : 0.0}\r\n                          </Grid>\r\n                        </Grid>\r\n                      </Grid>\r\n                      <Grid item xs={12}>\r\n                        <Grid container spacing={1}>\r\n                          <Grid item xs={6} align=\"left\">\r\n                            Availability Status\r\n                          </Grid>\r\n                          <Grid item xs={6} align=\"center\">\r\n                            {product.countInStock > 0 ? (\r\n                              <span style={{ color: \"green\", fontWeight: 500 }}>\r\n                                IN STOCK\r\n                              </span>\r\n                            ) : (\r\n                              <span style={{ color: \"red\", fontWeight: 500 }}>\r\n                                OUT OF STOCK\r\n                              </span>\r\n                            )}\r\n                            {/* {product.price} */}\r\n                          </Grid>\r\n                        </Grid>\r\n                      </Grid>\r\n\r\n                      <Grid item xs={12} align=\"center\">\r\n                        <Button\r\n                          disabled={\r\n                            product.countInStock === 0 ||\r\n                            calculatedSellingPrice === 0\r\n                          }\r\n                          align=\"center\"\r\n                          size=\"small\"\r\n                          variant=\"contained\"\r\n                          type=\"submit\"\r\n                          color=\"primary\"\r\n                          onClick={addToCartHandler}\r\n                        >\r\n                          Add To Cart\r\n                        </Button>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n              </Paper>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <Paper className={classes.paper}>\r\n                <img\r\n                  alt=\"productImage\"\r\n                  src={product.imageurl}\r\n                  className={classes.image}\r\n                />\r\n              </Paper>\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductScreen;\r\n","D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\components\\ShippingScreen.js",["1366","1367"],"import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { saveShippingAddress } from \"../actions/cartAction\";\nimport {\n  Grid,\n  Button,\n  Paper,\n  TextField,\n  TextareaAutosize,\n} from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport GridContainer from \"../components/Grid/GridContainer\";\nimport GridItem from \"../components/Grid/GridItem\";\nimport Card from \"./Card/Card\";\nimport CardHeader from \"./Card/CardHeader\";\nimport CardBody from \"./Card/CardBody\";\nimport StepperScreen from \"./StepperScreen\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    padding: theme.spacing(3, 2),\n    // height: 200,\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n  },\n  textarea: {\n    resize: \"both\",\n    margin: \"auto\",\n    padding: \"1rem\",\n    alignContent: \"center\",\n  },\n  paper: {\n    height: \"45vh\",\n    width: \"70vh\",\n  },\n  inputText: {\n    margin: \"auto\",\n    padding: \"1rem\",\n    alignContent: \"center\",\n  },\n\n  input: {\n    \"&::placeholder\": {\n      color: \"gray\",\n      fontSize: \"0.85rem\",\n      fontWeight: 500,\n      fontFamily: \"Roboto\",\n    },\n    color: \"gray\", // if you also want to change the color of the input, this is the prop you'd use\n  },\n  cardCategoryWhite: {\n    \"&,& a,& a:hover,& a:focus\": {\n      color: \"rgba(255,255,255,.62)\",\n      margin: \"0\",\n      fontSize: \"14px\",\n      marginTop: \"0\",\n      marginBottom: \"0\",\n    },\n    \"& a,& a:hover,& a:focus\": {\n      color: \"#FFFFFF\",\n    },\n  },\n  cardTitleGreen: {\n    color: \"#26A541\",\n    marginTop: \"0px\",\n    minHeight: \"auto\",\n    fontFamily: \"Roboto\",\n    marginBottom: \"3px\",\n    textDecoration: \"none\",\n    fontSize: \"1rem\",\n    fontWeight: 500,\n    textTransform: \"capitalize\",\n    textAlign: \"left\",\n    \"& small\": {\n      color: \"#777\",\n      fontSize: \"65%\",\n      fontWeight: \"400\",\n      lineHeight: \"1\",\n    },\n  },\n}));\n\nconst ShippingScreen = ({ history }) => {\n  const classes = useStyles();\n  const cart = useSelector((state) => state.cart);\n  const { shippingAddress } = cart;\n\n  const [address, setAddress] = useState(shippingAddress.address);\n  const [city, setCity] = useState(shippingAddress.city);\n  const [postalCode, setPostalCode] = useState(shippingAddress.postalCode);\n\n  const dispatch = useDispatch();\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(saveShippingAddress({ address, city, postalCode }));\n    history.push(\"/payment\");\n  };\n  return (\n    <>\n      <GridContainer>\n        <GridItem xs={12} sm={12} md={12}>\n          <Link\n            className=\"btn\"\n            size=\"small\"\n            variant=\"contained\"\n            type=\"submit\"\n            color=\"primary\"\n            to=\"/\"\n            style={{\n              color: \"white\",\n              backgroundColor: \"#26A541\",\n              marginTop: \"1rem\",\n              marginBottom: \"1rem\",\n              align: \"center\",\n              width: \"9rem\",\n            }}\n          >\n            Go to Groceries\n          </Link>\n        </GridItem>\n      </GridContainer>\n      <GridContainer>\n        <GridItem xs={12} sm={12} md={12}>\n          <StepperScreen currentStep=\"1\" />\n        </GridItem>\n        <GridItem xs={12} sm={12} md={12}>\n          <Card>\n            <CardHeader color=\"primary\">\n              <h4 className={classes.cardTitleWhite}>Shipping Details</h4>\n            </CardHeader>\n            <CardBody>\n              <Grid container spacing={2}>\n                <Grid item xs={12}>\n                  <Grid container justify=\"center\" spacing={1}>\n                    <Grid item>\n                      <form onSubmit={submitHandler}>\n                        <Paper className={classes.paper}>\n                          <Grid item xs={12}>\n                            <TextField\n                              placeholder=\"Address\"\n                              multiline\n                              onChange={(e) => setAddress(e.target.value)}\n                              fullWidth\n                              variant=\"outlined\"\n                              inputProps={{ className: classes.textarea }}\n                            />\n                          </Grid>\n                          <Grid item xs={12}>\n                            <TextField\n                              className={classes.inputText}\n                              placeholder=\"City\"\n                              variant=\"outlined\"\n                              size=\"small\"\n                              name=\"city\"\n                              fullWidth\n                              onChange={(e) => setCity(e.target.value)}\n                              type=\"text\"\n                              value={city}\n                              InputProps={{\n                                classes: { input: classes.input },\n                              }}\n                            />\n                          </Grid>\n                          <Grid item xs={12}>\n                            <TextField\n                              className={classes.inputText}\n                              placeholder=\"Postal Code\"\n                              variant=\"outlined\"\n                              size=\"small\"\n                              name=\"postalcode\"\n                              fullWidth\n                              onChange={(e) => setPostalCode(e.target.value)}\n                              type=\"text\"\n                              value={postalCode}\n                              InputProps={{\n                                classes: { input: classes.input },\n                              }}\n                            />\n                          </Grid>\n\n                          <Grid item xs={12}>\n                            <Grid container justify=\"center\" spacing={1}>\n                              <Grid item xs={12}>\n                                <Button\n                                  style={{\n                                    align: \"center\",\n                                  }}\n                                  fullWidth\n                                  size=\"small\"\n                                  variant=\"contained\"\n                                  type=\"submit\"\n                                  color=\"primary\"\n                                >\n                                  Proceed to Payment\n                                </Button>\n                              </Grid>\n                            </Grid>\n                          </Grid>\n                        </Paper>\n                      </form>\n                    </Grid>\n                  </Grid>\n                </Grid>\n              </Grid>\n            </CardBody>\n          </Card>\n        </GridItem>\n      </GridContainer>\n    </>\n  );\n};\n\nexport default ShippingScreen;\n","D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\components\\Dashboard.js",["1368","1369","1370","1371"],"import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport Writeup from \"../components/Writeup\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport BestSellingProducts from \"../components/BestSellingProducts\";\r\nimport OurProducts from \"../components/MainCategories\";\r\nimport MainCategories from \"../components/MainCategories\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    height: \"5rem\",\r\n    width: \"5rem\",\r\n  },\r\n  control: {\r\n    padding: theme.spacing(2),\r\n  },\r\n  imageContainer: {\r\n    height: \"5rem\",\r\n    width: \"5rem\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundSize: \"5rem 5rem\",\r\n    backgroundImage: `url(${\"/images/products/Chilli.jpg\"})`,\r\n  },\r\n}));\r\n\r\nconst Dashboard = ({ history }) => {\r\n  const classes = useStyles();\r\n  history = useHistory();\r\n\r\n  return (\r\n    <>\r\n      <Grid\r\n        container\r\n        className={classes.root}\r\n        spacing={2}\r\n        style={{ marginBottom: \"2rem\" }}\r\n      >\r\n        <Grid item xs={12}>\r\n          <Writeup />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <BestSellingProducts />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <MainCategories />\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\nexport default Dashboard;\r\n","D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\components\\ProductListScreen.js",["1372","1373","1374","1375","1376","1377","1378"],"import React, { useEffect, Fragment } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../components/Message\";\nimport Spinner from \"../components/controls/Spinner\";\nimport { Link } from \"@material-ui/core\";\n// import Button from \"../components/controls/Button\";\nimport GridItem from \"../components/Grid/GridItem.js\";\nimport GridContainer from \"../components/Grid/GridContainer.js\";\n// import Table from \"../components/Table/Table.js\";\nimport Card from \"../components/Card/Card.js\";\nimport CardHeader from \"../components/Card/CardHeader.js\";\nimport CardBody from \"../components/Card/CardBody.js\";\nimport { Table } from \"react-bootstrap\";\nimport Paginate from \"../components/Paginate\";\nimport EditRoundedIcon from \"@material-ui/icons/EditRounded\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\nimport DeleteOutlineIcon from \"@material-ui/icons/DeleteOutline\";\nimport { PRODUCT_CREATE_RESET } from \"../constants/productConstants\";\nimport {\n  listProducts,\n  deleteProduct,\n  createProduct,\n} from \"../actions/productAction\";\nimport {\n  Typography,\n  Grid,\n  Button,\n  TextField,\n  Paper,\n  IconButton,\n} from \"@material-ui/core\";\nconst styles = {\n  cardCategoryWhite: {\n    \"&,& a,& a:hover,& a:focus\": {\n      color: \"rgba(255,255,255,.62)\",\n      margin: \"0\",\n      fontSize: \"14px\",\n      marginTop: \"0\",\n      marginBottom: \"0\",\n    },\n    \"& a,& a:hover,& a:focus\": {\n      color: \"#FFFFFF\",\n    },\n  },\n  cardTitleGreen: {\n    color: \"#26A541\",\n    marginTop: \"0px\",\n    minHeight: \"auto\",\n    fontFamily: \"Roboto\",\n    marginBottom: \"3px\",\n    textDecoration: \"none\",\n    fontSize: \"1rem\",\n    fontWeight: 500,\n    textTransform: \"capitalize\",\n    textAlign: \"left\",\n    \"& small\": {\n      color: \"#777\",\n      fontSize: \"65%\",\n      fontWeight: \"400\",\n      lineHeight: \"1\",\n    },\n  },\n};\n\nconst ProductListScreen = ({ history, match }) => {\n  const useStyles = makeStyles(styles);\n  const classes = useStyles();\n  const pageNumber = match.params.pageNumber || 1;\n\n  const dispatch = useDispatch();\n\n  const productList = useSelector((state) => state.productList);\n  const { loading, error, products, page, pages } = productList;\n\n  const productDelete = useSelector((state) => state.productDelete);\n  const {\n    loading: loadingDelete,\n    error: errorDelete,\n    success: successDelete,\n  } = productDelete;\n\n  const productCreate = useSelector((state) => state.productCreate);\n  const {\n    loading: loadingCreate,\n    error: errorCreate,\n    success: successCreate,\n    product: createdProduct,\n  } = productCreate;\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  useEffect(() => {\n    dispatch({ type: PRODUCT_CREATE_RESET });\n\n    if (!userInfo.role === \"ROLE_ADMIN\") history.push(\"/login\");\n\n    if (successCreate) {\n      history.push(\"/admin/products\");\n    } else {\n      dispatch(listProducts());\n    }\n  }, [\n    dispatch,\n    history,\n    userInfo,\n    successDelete,\n    successCreate,\n    createdProduct,\n    pageNumber,\n  ]);\n\n  const deleteHandler = (id) => {\n    if (window.confirm(\"Are you sure\")) {\n      dispatch(deleteProduct(id));\n    }\n  };\n\n  const handleEdit = (id) => {\n    history.push(`/admin/product/${id}/edit`);\n  };\n  const handleSettings = (id) => {\n    history.push(`/admin/product-settings/${id}`);\n  };\n  const createProductHandler = (product) => {\n    history.push(\"/admin/product/new\");\n    // dispatch(createProduct(1));\n    // console.log(\"Create product Handler\");\n  };\n\n  return (\n    <>\n      {loadingDelete && <Spinner />}\n      {errorDelete && <Message variant=\"danger\">{errorDelete}</Message>}\n      {loadingCreate && <Spinner />}\n      {errorCreate && <Message variant=\"info\">{errorCreate}</Message>}\n      {loading ? (\n        <Spinner />\n      ) : error ? (\n        <Message variant=\"danger\">{error}</Message>\n      ) : (\n        <Fragment>\n          <GridContainer>\n            <GridItem xs={12} sm={12} md={12}>\n              <Button\n                style={{\n                  marginLeft: \"0.75rem\",\n                  marginTop: \"1rem\",\n                  marginBottom: \"1rem\",\n                  align: \"center\",\n                  width: \"9rem\",\n                }}\n                size=\"small\"\n                variant=\"contained\"\n                type=\"submit\"\n                color=\"primary\"\n                onClick={createProductHandler}\n              >\n                New product\n              </Button>\n            </GridItem>\n          </GridContainer>\n          <GridContainer>\n            <GridItem xs={12} sm={12} md={12}>\n              <Card>\n                <CardHeader color=\"primary\">\n                  <h4 className={classes.cardTitleWhite}>Products </h4>\n                </CardHeader>\n                <CardBody>\n                  <Table striped bordered hover responsive className=\"table-sm\">\n                    <thead>\n                      <tr>\n                        <th>\n                          <Typography\n                            className={classes.cardTitleGreen}\n                            align=\"center\"\n                          >\n                            ID\n                          </Typography>\n                        </th>\n                        <th>\n                          <Typography\n                            className={classes.cardTitleGreen}\n                            align=\"center\"\n                          >\n                            Name\n                          </Typography>\n                        </th>\n                        <th>\n                          <Typography\n                            className={classes.cardTitleGreen}\n                            align=\"center\"\n                          >\n                            Description\n                          </Typography>\n                        </th>\n                        <th>\n                          <Typography\n                            className={classes.cardTitleGreen}\n                            align=\"center\"\n                          >\n                            Count In Stock\n                          </Typography>\n                        </th>\n                        <th>\n                          <Typography\n                            className={classes.cardTitleGreen}\n                            align=\"center\"\n                          >\n                            Tax Percent\n                          </Typography>\n                        </th>\n                        {/* <th>\n                          <Typography\n                            className={classes.cardTitleGreen}\n                            align=\"center\"\n                          >\n                            Is Taxable\n                          </Typography>\n                        </th> */}\n                        <th>\n                          <Typography\n                            className={classes.cardTitleGreen}\n                            align=\"center\"\n                          >\n                            Brand\n                          </Typography>\n                        </th>\n                        <th>\n                          <Typography\n                            className={classes.cardTitleGreen}\n                            align=\"center\"\n                          >\n                            Action\n                          </Typography>\n                        </th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {products.map((product) => (\n                        <tr key={product.id}>\n                          <td>{product.id}</td>\n                          <td>{product.name}</td>\n                          <td>{product.description}</td>\n                          <td>{product.countInStock}</td>\n                          <td>{product.taxPercent}</td>\n                          {/* <td>{product.isTaxable}</td> */}\n                          <td>{product.brand}</td>\n                          <td>\n                            <EditRoundedIcon\n                              style={{ color: \"green\" }}\n                              onClick={() => handleEdit(product.id)}\n                            />\n                            <DeleteOutlineIcon\n                              style={{ color: \"red\" }}\n                              // onClick={() => }\n                            />\n                            <SettingsIcon\n                              style={{ color: \"green\" }}\n                              onClick={() => handleSettings(product.id)}\n                            />\n                          </td>\n                        </tr>\n                      ))}\n                    </tbody>\n                  </Table>\n                  <Paginate pages={pages} page={page} isAdmin={true} />\n                </CardBody>\n              </Card>\n            </GridItem>\n          </GridContainer>\n        </Fragment>\n      )}\n    </>\n  );\n};\n\nexport default ProductListScreen;\n","D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\components\\LoginScreen.js",["1379","1380","1381","1382","1383","1384"],"import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../components/Message\";\nimport Spinner from \"../components/controls/Spinner\";\nimport { login } from \"../actions/userAction\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Typography,\n  Grid,\n  Button,\n  TextField,\n  Paper,\n  FormControl,\n  InputLabel,\n  Input,\n  InputAdornment,\n} from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\nimport { AccountCircleOutlined } from \"@material-ui/icons\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    padding: theme.spacing(3, 2),\n    height: 200,\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n  },\n  paper: {\n    height: \"45vh\",\n    width: \"60vh\",\n  },\n  inputText: {\n    margin: \"auto\",\n    padding: \"1rem\",\n    alignContent: \"center\",\n  },\n\n  input: {\n    \"&::placeholder\": {\n      color: \"gray\",\n      fontSize: \"0.85rem\",\n      fontWeight: 500,\n      fontFamily: \"Roboto\",\n    },\n    color: \"gray\", // if you also want to change the color of the input, this is the prop you'd use\n  },\n}));\n\nconst LoginScreen = ({ location, history }) => {\n  const classes = useStyles();\n  const [userName, setUserName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const dispatch = useDispatch();\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { loading, error, userInfo } = userLogin;\n\n  const redirect = location.search ? location.search.split(\"=\")[1] : \"/\";\n\n  useEffect(() => {\n    if (userInfo) {\n      history.push(redirect);\n    }\n  }, [history, userInfo, redirect]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(login(userName, password));\n  };\n  const handleSignUp = (e) => {\n    console.log(\"Clicked Sign Up\");\n    e.preventDefault();\n    history.push(\"/signup\");\n  };\n\n  return (\n    <>\n      <Grid\n        container\n        spacing={2}\n        style={{\n          top: \"50%\",\n          transform: \"translateY(+50%)\",\n        }}\n      >\n        <Grid item xs={12}>\n          <Grid container justify=\"center\" spacing={1}>\n            <Grid item>\n              <form onSubmit={submitHandler}>\n                <Paper className={classes.paper}>\n                  <Grid item xs={12}>\n                    <Typography variant=\"h6\" align=\"center\">\n                      Tagline Traders Login{\" \"}\n                    </Typography>\n                  </Grid>\n                  <Grid item xs={12}>\n                    {error && <Message variant=\"danger\">{error}</Message>}\n                    {loading && <Spinner />}\n                  </Grid>\n\n                  <Grid item xs={12}>\n                    {/* <FormControl className={classes.margin}>\n                      <InputLabel htmlFor=\"input-with-icon-adornment\"></InputLabel>\n                      <Input\n                        id=\"input-with-icon-adornment\"\n                        startAdornment={\n                          <InputAdornment position=\"start\">\n                            <AccountCircleOutlined />\n                          </InputAdornment>\n                        }\n                      />\n                    </FormControl> */}\n                    <TextField\n                      className={classes.inputText}\n                      align=\"center\"\n                      placeholder=\"User Name\"\n                      variant=\"outlined\"\n                      size=\"small\"\n                      name=\"userName\"\n                      fullWidth\n                      onChange={(e) => setUserName(e.target.value)}\n                      type=\"text\"\n                      value={userName}\n                      InputProps={{\n                        classes: { input: classes.input },\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12}>\n                    <TextField\n                      className={classes.inputText}\n                      placeholder=\"Password\"\n                      variant=\"outlined\"\n                      size=\"small\"\n                      name=\"password\"\n                      fullWidth\n                      onChange={(e) => setPassword(e.target.value)}\n                      type=\"password\"\n                      value={password}\n                      InputProps={{\n                        classes: { input: classes.input },\n                      }}\n                    />\n                  </Grid>\n\n                  <Grid item xs={12}>\n                    <Grid container justify=\"center\" spacing={1}>\n                      <Grid item xs={6}>\n                        <Button\n                          style={{\n                            marginLeft: \"0.75rem\",\n                            align: \"center\",\n                            width: \"9rem\",\n                          }}\n                          size=\"small\"\n                          variant=\"contained\"\n                          type=\"submit\"\n                          color=\"primary\"\n                          // onClick={submitHandler}\n                        >\n                          Sign In\n                        </Button>\n                      </Grid>\n                      <Grid item xs={6}>\n                        <Button\n                          style={{\n                            marginRight: \"0.75rem\",\n                            align: \"center\",\n                            width: \"9rem\",\n                          }}\n                          size=\"small\"\n                          variant=\"contained\"\n                          type=\"submit\"\n                          color=\"primary\"\n                          onClick={handleSignUp}\n                        >\n                          Sign Up\n                        </Button>\n                      </Grid>\n                    </Grid>\n                  </Grid>\n                </Paper>\n              </form>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default LoginScreen;\n","D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\components\\CartLayoutScreen.js",["1385","1386","1387","1388","1389","1390"],"import React, { useEffect } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  addToCart,\r\n  fetchUpdatedCartItemsCount,\r\n  removeFromCart,\r\n  editCartItems,\r\n} from \"../actions/cartAction\";\r\nimport rupeeSvgIcon from \"../assets/images/currency-inr.svg\";\r\n// import imagePath from \"../assets/images/products/edible-oils/Edible-Oils-2.jpg\";\r\nimport {\r\n  useMediaQuery,\r\n  Grid,\r\n  Typography,\r\n  Button,\r\n  IconButton,\r\n  Icon,\r\n  Divider,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogContentText,\r\n  FormControl,\r\n  Select,\r\n  MenuItem,\r\n  DialogActions,\r\n} from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { DeleteOutline } from \"@material-ui/icons\";\r\nimport EditOutlinedIcon from \"@material-ui/icons/EditOutlined\";\r\nimport GridContainer from \"../components/Grid/GridContainer\";\r\nimport GridItem from \"../components/Grid/GridItem\";\r\nimport Card from \"./Card/Card\";\r\nimport CardHeader from \"./Card/CardHeader\";\r\nimport CardBody from \"./Card/CardBody\";\r\nimport ProductScreen from \"./ProductScreen\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    display: \"grid\",\r\n    gridTemplateColumns: \"repeat(12, 1fr)\",\r\n    gridGap: theme.spacing(3),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(1),\r\n    textAlign: \"center\",\r\n    color: theme.palette.text.secondary,\r\n    whiteSpace: \"nowrap\",\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n  childPaper: {\r\n    padding: theme.spacing(1),\r\n    textAlign: \"center\",\r\n    color: theme.palette.text.secondary,\r\n    whiteSpace: \"nowrap\",\r\n    width: \"100%\",\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n  divider: {\r\n    margin: theme.spacing(2, 0),\r\n  },\r\n  imageIcon: {\r\n    height: \"60%\",\r\n  },\r\n  iconRoot: {\r\n    textAlign: \"center\",\r\n  },\r\n  cardCategoryWhite: {\r\n    \"&,& a,& a:hover,& a:focus\": {\r\n      color: \"rgba(255,255,255,.62)\",\r\n      margin: \"0\",\r\n      fontSize: \"14px\",\r\n      marginTop: \"0\",\r\n      marginBottom: \"0\",\r\n    },\r\n    \"& a,& a:hover,& a:focus\": {\r\n      color: \"#FFFFFF\",\r\n    },\r\n  },\r\n  cardTitleGreen: {\r\n    color: \"#26A541\",\r\n    marginTop: \"0px\",\r\n    minHeight: \"auto\",\r\n    fontFamily: \"Roboto\",\r\n    marginBottom: \"3px\",\r\n    textDecoration: \"none\",\r\n    fontSize: \"1rem\",\r\n    fontWeight: 500,\r\n    textTransform: \"capitalize\",\r\n    textAlign: \"left\",\r\n    \"& small\": {\r\n      color: \"#777\",\r\n      fontSize: \"65%\",\r\n      fontWeight: \"400\",\r\n      lineHeight: \"1\",\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function CartLayoutScreen({ match, location, history }) {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const dispatch = useDispatch();\r\n\r\n  const isMd = useMediaQuery(theme.breakpoints.up(\"md\"), {\r\n    defaultMatches: true,\r\n  });\r\n\r\n  const productId = match.params.id;\r\n  const searchStringArray = location.search.split(\"&\");\r\n  let qty, uom, order;\r\n  searchStringArray.forEach(function (item) {\r\n    var tempField = item.split(\"=\");\r\n    switch (tempField[0]) {\r\n      case \"?qty\":\r\n        qty = Number(tempField[1]);\r\n        break;\r\n      case \"uom\":\r\n        uom = tempField[1];\r\n        break;\r\n      case \"order\":\r\n        order = tempField[1];\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  });\r\n  const [open, setOpen] = React.useState(false);\r\n  const handleClickOpen = () => {\r\n    // setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const cart = useSelector((state) => state.cart);\r\n  const { cartItems } = cart;\r\n\r\n  useEffect(() => {\r\n    if (productId) {\r\n      dispatch(addToCart(productId, qty, uom, order));\r\n      // dispatch(fetchUpdatedCartItemsCount());\r\n    }\r\n  }, [dispatch, productId, qty, uom, order]);\r\n\r\n  const removeFromCartHandler = (id, indx) => {\r\n    console.log(\"Id :\" + id);\r\n    dispatch(removeFromCart(id, indx));\r\n  };\r\n  const editCartHandler = (id) => {\r\n    console.log(\"Editing \" + id);\r\n    dispatch(editCartItems(id));\r\n  };\r\n\r\n  const checkoutHandler = () => {\r\n    history.push(\"/login?redirect=shipping\");\r\n  };\r\n\r\n  const renderDialog = (\r\n    <Dialog\r\n      fullWidth\r\n      maxWidth=\"md\"\r\n      open={open}\r\n      onClose={handleClose}\r\n      aria-labelledby=\"max-width-dialog-title\"\r\n    >\r\n      <DialogTitle id=\"max-width-dialog-title\">Edit Cart Item</DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText>\r\n          You can set my maximum width and whether to adapt or not.\r\n        </DialogContentText>\r\n        <ProductScreen />\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleClose} color=\"primary\">\r\n          Close\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n  return (\r\n    <div>\r\n      <GridContainer>\r\n        <GridItem xs={12} sm={12} md={12}>\r\n          <Link\r\n            className=\"btn\"\r\n            size=\"small\"\r\n            variant=\"contained\"\r\n            type=\"submit\"\r\n            color=\"primary\"\r\n            to=\"/\"\r\n            style={{\r\n              color: \"white\",\r\n              backgroundColor: \"#26A541\",\r\n              marginTop: \"1rem\",\r\n              marginBottom: \"1rem\",\r\n              align: \"center\",\r\n              width: \"9rem\",\r\n            }}\r\n          >\r\n            Go to Groceries\r\n          </Link>\r\n        </GridItem>\r\n      </GridContainer>\r\n      <GridContainer>\r\n        <GridItem xs={12} sm={12} md={12}>\r\n          <Card>\r\n            <CardHeader color=\"primary\">\r\n              <h4 className={classes.cardTitleWhite}>Cart Items</h4>\r\n            </CardHeader>\r\n            <CardBody>\r\n              {cartItems.length === 0 ? (\r\n                <div>Empty Cart</div>\r\n              ) : (\r\n                <Grid container spacing={1}>\r\n                  <Grid item xs={8}>\r\n                    <Paper className={classes.childPaper}>\r\n                      {cartItems.map((item, index) => (\r\n                        <>\r\n                          <Grid\r\n                            container\r\n                            spacing={1}\r\n                            key={item.id + \"\" + index}\r\n                          >\r\n                            <Grid item xs={2}>\r\n                              <img\r\n                                alt=\"Staples\"\r\n                                style={{\r\n                                  height: \"3.5rem\",\r\n                                  width: \"3.5rem\",\r\n                                }}\r\n                                src={item.imageUrl}\r\n                              />\r\n                            </Grid>\r\n\r\n                            <Grid item xs={8}>\r\n                              <Grid container spacing={1}>\r\n                                <Grid item xs={12} variant=\"alignLeft\">\r\n                                  <Typography variant=\"body1\">\r\n                                    {item.name}\r\n                                  </Typography>\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                  <Grid container spacing={1}>\r\n                                    <Grid item xs={4}>\r\n                                      <Typography variant=\"body1\">\r\n                                        <Icon\r\n                                          classes={{ root: classes.iconRoot }}\r\n                                        >\r\n                                          <img\r\n                                            alt=\"curency inr\"\r\n                                            src={rupeeSvgIcon}\r\n                                            className={classes.imageIcon}\r\n                                          />\r\n                                        </Icon>\r\n                                        {item.unitPrice}\r\n                                      </Typography>\r\n                                    </Grid>\r\n                                    <Grid item xs={4}>\r\n                                      <Typography variant=\"body2\">\r\n                                        UOM : {item.uom}\r\n                                      </Typography>\r\n                                    </Grid>\r\n                                    <Grid item xs={4}>\r\n                                      <Typography variant=\"body1\">\r\n                                        Qty : {item.quantityOrdered}\r\n                                      </Typography>\r\n                                    </Grid>\r\n                                  </Grid>\r\n                                </Grid>\r\n                              </Grid>\r\n                            </Grid>\r\n                            <Grid item xs={1}>\r\n                              <IconButton\r\n                                aria-label=\"edit\"\r\n                                onClick={handleClickOpen}\r\n                              >\r\n                                {/* {renderDialog} */}\r\n                                <EditOutlinedIcon />\r\n                              </IconButton>\r\n                            </Grid>\r\n                            <Grid item xs={1}>\r\n                              <IconButton\r\n                                aria-label=\"delete\"\r\n                                onClick={() =>\r\n                                  removeFromCartHandler(item.product, index)\r\n                                }\r\n                              >\r\n                                <DeleteOutline />\r\n                              </IconButton>\r\n                            </Grid>\r\n                          </Grid>\r\n                          <Divider />\r\n                        </>\r\n                      ))}\r\n                    </Paper>\r\n                  </Grid>\r\n                  <Grid item xs={4}>\r\n                    <Paper className={classes.paper}>\r\n                      <Grid container spacing={1} data-aos=\"fade-up\">\r\n                        <Grid item xs={12}>\r\n                          <Typography\r\n                            variant=\"h6\"\r\n                            color=\"primary\"\r\n                            align={isMd ? \"left\" : \"center\"}\r\n                          >\r\n                            Subtotal (\r\n                            {cartItems.reduce(\r\n                              (acc, item) => acc + item.quantityOrdered,\r\n                              0\r\n                            )}\r\n                            ) items\r\n                          </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                          <Icon classes={{ root: classes.iconRoot }}>\r\n                            <img\r\n                              alt=\"curency inr\"\r\n                              src={rupeeSvgIcon}\r\n                              className={classes.imageIcon}\r\n                            />\r\n                          </Icon>\r\n                          {cartItems\r\n                            .reduce(\r\n                              (acc, item) =>\r\n                                acc + item.quantityOrdered * item.unitPrice,\r\n                              0\r\n                            )\r\n                            .toFixed(2)}\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                          <Button\r\n                            disabled={cartItems.length === 0}\r\n                            size=\"small\"\r\n                            variant=\"contained\"\r\n                            type=\"submit\"\r\n                            color=\"primary\"\r\n                            onClick={checkoutHandler}\r\n                          >\r\n                            Proceed To Checkout\r\n                          </Button>\r\n                        </Grid>\r\n                      </Grid>\r\n                    </Paper>\r\n                  </Grid>\r\n                </Grid>\r\n              )}\r\n            </CardBody>\r\n          </Card>\r\n        </GridItem>\r\n      </GridContainer>\r\n    </div>\r\n  );\r\n}\r\n","D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\components\\ProductEditScreen.js",["1391","1392","1393","1394","1395","1396","1397","1398","1399","1400","1401","1402","1403","1404","1405","1406","1407","1408","1409"],"import axios from \"axios\";\nimport React, { useState, useEffect, Fragment } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../components/Message\";\nimport Spinner from \"../components/controls/Spinner\";\nimport { Link } from \"react-router-dom\";\n// import Button from \"../components/controls/Button\";\nimport GridItem from \"../components/Grid/GridItem.js\";\nimport GridContainer from \"../components/Grid/GridContainer.js\";\n// import Table from \"../components/Table/Table.js\";\nimport Card from \"../components/Card/Card.js\";\nimport CardHeader from \"../components/Card/CardHeader.js\";\nimport CardBody from \"../components/Card/CardBody.js\";\nimport {\n  listProductDetailsByProductId,\n  updateProduct,\n} from \"../actions/productAction\";\nimport { Table } from \"react-bootstrap\";\nimport Paginate from \"../components/Paginate\";\nimport EditRoundedIcon from \"@material-ui/icons/EditRounded\";\nimport DeleteOutlineIcon from \"@material-ui/icons/DeleteOutline\";\nimport {\n  PRODUCT_CREATE_RESET,\n  PRODUCT_UPDATE_RESET,\n} from \"../constants/productConstants\";\nimport {\n  listProducts,\n  deleteProduct,\n  createProduct,\n} from \"../actions/productAction\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport {\n  Typography,\n  Grid,\n  Button,\n  TextField,\n  Paper,\n  IconButton,\n} from \"@material-ui/core\";\n\nconst ProductEditScreen = ({ history, match }) => {\n  const productId = match.params.id;\n  const useStyles = makeStyles(() => ({\n    root: {\n      flexGrow: 0,\n      padding: 1,\n      marginTop: \"1rem\",\n      marginBottom: \"1rem\",\n      display: \"flex\",\n      flexDirection: \"inherit\",\n      // justifyContent: \"center\",\n      // alignContent: \"center\",\n      alignItems: \"center\",\n      height: \"30rem\",\n      width: \"30rem\",\n    },\n    inputText: {\n      margin: \"auto\",\n      padding: \"1rem\",\n      alignContent: \"center\",\n    },\n\n    input: {\n      \"&::placeholder\": {\n        color: \"gray\",\n        fontSize: \"0.85rem\",\n        fontWeight: 500,\n        fontFamily: \"Roboto\",\n      },\n      color: \"gray\", // if you also want to change the color of the input, this is the prop you'd use\n    },\n    cardCategoryWhite: {\n      \"&,& a,& a:hover,& a:focus\": {\n        color: \"rgba(255,255,255,.62)\",\n        margin: \"0\",\n        fontSize: \"14px\",\n        marginTop: \"0\",\n        marginBottom: \"0\",\n      },\n      \"& a,& a:hover,& a:focus\": {\n        color: \"#FFFFFF\",\n      },\n    },\n    cardTitleGreen: {\n      color: \"#26A541\",\n      marginTop: \"0px\",\n      minHeight: \"auto\",\n      fontFamily: \"Roboto\",\n      marginBottom: \"3px\",\n      textDecoration: \"none\",\n      fontSize: \"1rem\",\n      fontWeight: 500,\n      textTransform: \"capitalize\",\n      textAlign: \"left\",\n      \"& small\": {\n        color: \"#777\",\n        fontSize: \"65%\",\n        fontWeight: \"400\",\n        lineHeight: \"1\",\n      },\n    },\n  }));\n  const classes = useStyles();\n\n  const [name, setName] = useState(\"\");\n  const [price, setPrice] = useState(0);\n  const [image, setImage] = useState(\"\");\n  const [brand, setBrand] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n  const [countInStock, setCountInStock] = useState(0);\n  const [description, setDescription] = useState(\"\");\n  const [uploading, setUploading] = useState(false);\n\n  const dispatch = useDispatch();\n\n  const productDetailsByProductId = useSelector(\n    (state) => state.productDetailsByProductId\n  );\n  const { loading, error, product } = productDetailsByProductId;\n  // const productUpdate = useSelector((state) => state.productUpdate);\n  // const {\n  //   loading: loadingUpdate,\n  //   error: errorUpdate,\n  //   success: successUpdate,\n  // } = productUpdate;\n  useEffect(() => {\n    if (product.id !== productId) {\n      console.log(\"!product.name || product.id !== productId\");\n      dispatch(listProductDetailsByProductId(productId));\n    } else {\n      console.log(\"Exec Else of !product.name || product.id !== productId\");\n      setName(product.name);\n      setPrice(product.price);\n      setImage(product.image);\n      setBrand(product.brand);\n      setCategory(product.category);\n      setCountInStock(product.countInStock);\n      setDescription(product.description);\n    }\n  }, [dispatch, history, productId]);\n\n  // const uploadFileHandler = async (e) => {\n  //   const file = e.target.files[0];\n  //   const formData = new FormData();\n  //   formData.append(\"image\", file);\n  //   setUploading(true);\n\n  //   try {\n  //     const config = {\n  //       headers: {\n  //         \"Content-Type\": \"multipart/form-data\",\n  //       },\n  //     };\n\n  //     const { data } = await axios.post(\"/api/upload\", formData, config);\n\n  //     setImage(data);\n  //     setUploading(false);\n  //   } catch (error) {\n  //     console.error(error);\n  //     setUploading(false);\n  //   }\n  // };\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    // dispatch(\n    //   updateProduct({\n    //     _id: productId,\n    //     name,\n    //     price,\n    //     image,\n    //     brand,\n    //     category,\n    //     description,\n    //     countInStock,\n    //   })\n    // );\n  };\n  return (\n    <>\n      {/* {loadingUpdate && <Spinner />}\n      {errorUpdate && <Message variant=\"danger\">{errorUpdate}</Message>} */}\n      {loading ? (\n        <Spinner />\n      ) : error ? (\n        <Message variant=\"danger\">{error}</Message>\n      ) : (\n        <Fragment>\n          <GridContainer>\n            <GridItem xs={12} sm={12} md={12}>\n              <Link\n                className=\"btn\"\n                size=\"small\"\n                variant=\"contained\"\n                type=\"submit\"\n                color=\"primary\"\n                to=\"/admin/productlist\"\n                style={{\n                  color: \"white\",\n                  backgroundColor: \"#26A541\",\n                  marginTop: \"1rem\",\n                  marginBottom: \"1rem\",\n                  align: \"center\",\n                  width: \"9rem\",\n                }}\n              >\n                Go Back\n              </Link>\n            </GridItem>\n          </GridContainer>\n          <GridContainer>\n            <GridItem xs={12} sm={12} md={12}>\n              <Card>\n                <CardHeader color=\"primary\">\n                  <h4 className={classes.cardTitleWhite}>Edit Product </h4>\n                </CardHeader>\n                <CardBody>\n                  <form onSubmit={submitHandler}>\n                    <Grid container spacing={2}>\n                      <Grid item xs={12}>\n                        <Grid\n                          container\n                          spacing={1}\n                          alignItems=\"center\"\n                          justify=\"center\"\n                        >\n                          <Grid item xs={6}>\n                            <TextField\n                              className={classes.inputText}\n                              placeholder=\"Name\"\n                              variant=\"outlined\"\n                              name=\"name\"\n                              onChange={(e) => setName(e.target.value)}\n                              type=\"text\"\n                              size=\"small\"\n                              value={name}\n                              fullWidth\n                              InputProps={{\n                                classes: { input: classes.input },\n                              }}\n                            />\n                          </Grid>\n                        </Grid>\n                      </Grid>\n                    </Grid>\n                    <Grid container spacing={2}>\n                      <Grid item xs={12}>\n                        <Grid\n                          container\n                          spacing={1}\n                          alignItems=\"center\"\n                          justify=\"center\"\n                        >\n                          <Grid item xs={6}>\n                            <TextField\n                              className={classes.inputText}\n                              placeholder=\"Description\"\n                              variant=\"outlined\"\n                              size=\"small\"\n                              name=\"description\"\n                              onChange={(e) => setDescription(e.target.value)}\n                              type=\"text\"\n                              value={description}\n                              fullWidth\n                              InputProps={{\n                                classes: { input: classes.input },\n                              }}\n                            />\n                          </Grid>\n                        </Grid>\n                      </Grid>\n                    </Grid>\n                    <Grid container spacing={2}>\n                      <Grid item xs={12}>\n                        <Grid\n                          container\n                          spacing={1}\n                          // direction=\"column\"\n                          alignItems=\"center\"\n                          justify=\"center\"\n                        >\n                          <Grid item xs={6}>\n                            <TextField\n                              className={classes.inputText}\n                              placeholder=\"Brand\"\n                              variant=\"outlined\"\n                              size=\"small\"\n                              name=\"brand\"\n                              onChange={(e) => setBrand(e.target.value)}\n                              type=\"text\"\n                              value={brand}\n                              fullWidth\n                              InputProps={{\n                                classes: { input: classes.input },\n                              }}\n                            />\n                          </Grid>\n                        </Grid>\n                      </Grid>\n                    </Grid>\n\n                    <Grid container spacing={2}>\n                      <Grid item xs={12}>\n                        <Grid\n                          container\n                          spacing={1}\n                          alignItems=\"center\"\n                          justify=\"center\"\n                        >\n                          <Grid item xs={6}>\n                            <TextField\n                              className={classes.inputText}\n                              placeholder=\"Count In Stock\"\n                              variant=\"outlined\"\n                              size=\"small\"\n                              name=\"countInStock\"\n                              onChange={(e) => setCountInStock(e.target.value)}\n                              type=\"text\"\n                              fullWidth\n                              value={countInStock}\n                              InputProps={{\n                                classes: { input: classes.input },\n                              }}\n                            />\n                          </Grid>\n                        </Grid>\n                      </Grid>\n                    </Grid>\n                    <Grid container spacing={2}>\n                      <Grid item xs={12}>\n                        <Grid\n                          container\n                          spacing={1}\n                          alignItems=\"center\"\n                          justify=\"center\"\n                        >\n                          <Grid item xs={6}>\n                            <TextField\n                              className={classes.inputText}\n                              placeholder=\"Category\"\n                              variant=\"outlined\"\n                              size=\"small\"\n                              name=\"category\"\n                              onChange={(e) => setCategory(e.target.value)}\n                              type=\"text\"\n                              value={category}\n                              fullWidth\n                              InputProps={{\n                                classes: { input: classes.input },\n                              }}\n                            />\n                          </Grid>\n                        </Grid>\n                      </Grid>\n                    </Grid>\n                    <Grid container spacing={2}>\n                      <Grid item xs={12}>\n                        <Grid\n                          container\n                          spacing={1}\n                          alignItems=\"center\"\n                          justify=\"center\"\n                        >\n                          <Grid item xs={6}>\n                            <TextField\n                              className={classes.inputText}\n                              placeholder=\"Enter Image Url\"\n                              variant=\"outlined\"\n                              size=\"small\"\n                              name=\"image\"\n                              onChange={(e) => setImage(e.target.value)}\n                              type=\"text\"\n                              fullWidth\n                              value={image}\n                              InputProps={{\n                                classes: { input: classes.input },\n                              }}\n                            />\n                            <file\n                              id=\"image-file\"\n                              label=\"Choose File\"\n                              // custom\n                              // onChange={uploadFileHandler}\n                            ></file>\n                          </Grid>\n                        </Grid>\n                      </Grid>\n                    </Grid>\n                    <Grid container spacing={2}>\n                      <Grid item xs={12}>\n                        <Grid\n                          container\n                          spacing={1}\n                          // alignItems=\"center\"\n                          justify=\"center\"\n                        >\n                          <Grid item xs={6} justify=\"center\">\n                            <Button\n                              size=\"small\"\n                              variant=\"contained\"\n                              type=\"submit\"\n                              color=\"primary\"\n                            >\n                              Update\n                            </Button>\n                          </Grid>\n                        </Grid>\n                      </Grid>\n                    </Grid>\n                  </form>\n                </CardBody>\n              </Card>\n            </GridItem>\n          </GridContainer>\n        </Fragment>\n      )}\n    </>\n  );\n};\n\nexport default ProductEditScreen;\n","D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\components\\PlaceOrderScreen.js",["1410","1411","1412"],"import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../components/Message\";\nimport { createOrder } from \"../actions/orderAction\";\nimport { ORDER_CREATE_RESET } from \"../constants/orderConstants\";\nimport { USER_DETAILS_RESET } from \"../constants/userConstants\";\nimport {\n  Button,\n  Paper,\n  useMediaQuery,\n  Grid,\n  Typography,\n  Icon,\n} from \"@material-ui/core\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport { Divider } from \"@material-ui/core\";\nimport rupeeSvgIcon from \"../assets/images/currency-inr.svg\";\nimport imagePath from \"../assets/images/products/edible-oils/Edible-Oils-2.jpg\";\nimport GridContainer from \"../components/Grid/GridContainer\";\nimport GridItem from \"../components/Grid/GridItem\";\nimport StepperScreen from \"./StepperScreen\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    justifyContent: \"center\",\n  },\n  imageIcon: {\n    height: \"80%\",\n  },\n  paper: {\n    height: \"100%\",\n    width: \"150vh\",\n    padding: \".5rem\",\n  },\n  control: {\n    padding: theme.spacing(2),\n  },\n  link: {\n    color: \"white\",\n    backgroundColor: \"#26A541\",\n  },\n  iconRoot: {\n    textAlign: \"center\",\n  },\n}));\nconst PlaceOrderScreen = ({ history }) => {\n  const classes = useStyles();\n  const theme = useTheme();\n  const isMd = useMediaQuery(theme.breakpoints.up(\"md\"), {\n    defaultMatches: true,\n  });\n\n  const dispatch = useDispatch();\n  const cart = useSelector((state) => state.cart);\n  const [payMethod, setPayMethod] = useState(\"\");\n\n  if (!cart.shippingAddress.address) {\n    history.push(\"/shipping\");\n  } else if (!cart.paymentMethod) {\n    history.push(\"/payment\");\n  }\n  //   Calculate prices\n  const addDecimals = (num) => {\n    return (Math.round(num * 100) / 100).toFixed(2);\n  };\n\n  cart.itemsPrice = addDecimals(\n    cart.cartItems.reduce(\n      (acc, item) => acc + item.unitPrice * item.quantityOrdered,\n      0\n    )\n  );\n  cart.shippingPrice = addDecimals(cart.itemsPrice > 100 ? 0 : 100);\n  cart.taxPrice = addDecimals(Number((0.05 * cart.itemsPrice).toFixed(2)));\n  cart.totalPrice = (\n    Number(cart.itemsPrice) +\n    Number(cart.shippingPrice) +\n    Number(cart.taxPrice)\n  ).toFixed(2);\n\n  const orderCreate = useSelector((state) => state.orderCreate);\n  const { order, success, error } = orderCreate;\n\n  useEffect(() => {\n    if (success) {\n      history.push(`/order/${order.id}`);\n      dispatch({ type: USER_DETAILS_RESET });\n      dispatch({ type: ORDER_CREATE_RESET });\n      // let cartItems = localStorage.getItem(\"paymentMethod\");\n      console.log(\n        \"localStorage.getItem(paymentMethod : \" +\n          localStorage.getItem(\"paymentMethod\")\n      );\n      setPayMethod(localStorage.getItem(\"paymentMethod\"));\n    }\n    // eslint-disable-next-line\n  }, [history, success]);\n\n  const placeOrderHandler = () => {\n    dispatch(\n      createOrder({\n        orderItems: cart.cartItems,\n        shippingDetails: cart.shippingAddress,\n        paymentDetails: {\n          paymentType: cart.paymentMethod,\n          status: \"Initiated\",\n        },\n        itemsPrice: cart.itemsPrice,\n        shippingPrice: cart.shippingPrice,\n        taxPrice: cart.taxPrice,\n        totalPrice: cart.totalPrice,\n      })\n    );\n  };\n\n  return (\n    <>\n      <GridContainer>\n        <GridItem xs={12} sm={12} md={12}>\n          <Link\n            className=\"btn\"\n            size=\"small\"\n            variant=\"contained\"\n            type=\"submit\"\n            color=\"primary\"\n            to=\"/\"\n            style={{\n              color: \"white\",\n              backgroundColor: \"#26A541\",\n              // marginRight: \"5rem\",\n              // marginLeft: \"0.75rem\",\n              marginTop: \"1rem\",\n              marginBottom: \"1rem\",\n              align: \"center\",\n              width: \"9rem\",\n            }}\n          >\n            Go to Groceries\n          </Link>\n        </GridItem>\n      </GridContainer>\n      <Grid container className={classes.root} spacing={2}>\n        <Grid item xs={8} container justify=\"center\">\n          <Paper className={classes.paper}>\n            <form onSubmit={placeOrderHandler}>\n              {/* <Grid container>\n                <Grid item xs={12}>\n                  <Typography variant=\"h6\">Shipping Details</Typography>\n                  <Divider />\n                </Grid>\n\n                <Grid item xs={12} style={{ margin: \".5rem\" }}>\n                  <Grid container>\n                    <Grid item xs={12}>\n                      <Grid container>\n                        <Grid item xs={3}>\n                          <Typography variant=\"body1\">Address</Typography>\n                        </Grid>\n                        <Grid item xs={9}>\n                          <Typography variant=\"body1\">\n                            {cart.shippingAddress.address}\n                          </Typography>\n                        </Grid>\n                      </Grid>\n                    </Grid>\n                    <Grid item xs={12}>\n                      <Grid container>\n                        <Grid item xs={3}>\n                          <Typography variant=\"body1\">City</Typography>\n                        </Grid>\n                        <Grid item xs={9}>\n                          <Typography variant=\"body1\">\n                            {\" \"}\n                            {cart.shippingAddress.city}\n                          </Typography>\n                        </Grid>\n                      </Grid>\n                    </Grid>\n                    <Grid item xs={12}>\n                      <Grid container>\n                        <Grid item xs={3}>\n                          <Typography variant=\"body1\">Postal Code</Typography>\n                        </Grid>\n                        <Grid item xs={9}>\n                          <Typography variant=\"body1\">\n                            {cart.shippingAddress.postalCode}\n                          </Typography>\n                        </Grid>\n                      </Grid>\n                    </Grid>\n                  </Grid>\n                </Grid>\n              </Grid>\n              <Divider /> */}\n              <Grid container>\n                <Grid item xs={12}>\n                  {cart.cartItems.length === 0 ? (\n                    <Message>Your cart is empty</Message>\n                  ) : (\n                    <Grid conatiner>\n                      <GridItem xs={12} sm={12} md={12}>\n                        <StepperScreen currentStep=\"3\" />\n                      </GridItem>\n                      <Grid container>\n                        <Grid item xs={12}>\n                          <Typography variant=\"h6\">Shipping Details</Typography>\n                          <Divider />\n                        </Grid>\n                        <Grid item xs={12} style={{ margin: \".5rem\" }}>\n                          <Grid container>\n                            <Grid item xs={12}>\n                              <Grid container>\n                                <Grid item xs={3}>\n                                  <Typography variant=\"body1\">\n                                    Address\n                                  </Typography>\n                                </Grid>\n                                <Grid item xs={9}>\n                                  <Typography variant=\"body1\">\n                                    {cart.shippingAddress.address}\n                                  </Typography>\n                                </Grid>\n                              </Grid>\n                            </Grid>\n                            <Grid item xs={12}>\n                              <Grid container>\n                                <Grid item xs={3}>\n                                  <Typography variant=\"body1\">City</Typography>\n                                </Grid>\n                                <Grid item xs={9}>\n                                  <Typography variant=\"body1\">\n                                    {\" \"}\n                                    {cart.shippingAddress.city}\n                                  </Typography>\n                                </Grid>\n                              </Grid>\n                            </Grid>\n                            <Grid item xs={12}>\n                              <Grid container>\n                                <Grid item xs={3}>\n                                  <Typography variant=\"body1\">\n                                    Postal Code\n                                  </Typography>\n                                </Grid>\n                                <Grid item xs={9}>\n                                  <Typography variant=\"body1\">\n                                    {cart.shippingAddress.postalCode}\n                                  </Typography>\n                                </Grid>\n                              </Grid>\n                            </Grid>\n                          </Grid>\n                        </Grid>\n                      </Grid>\n\n                      <Grid item xs={12}>\n                        <Typography variant=\"h6\">Order Details</Typography>\n                        <Divider />\n                      </Grid>\n                      {cart.cartItems.map((item, index) => (\n                        <Grid item key={index} style={{ margin: \".5rem\" }}>\n                          <Grid container>\n                            <Grid item xs={3}>\n                              <img\n                                className=\"img-thumbnail\"\n                                src={item.imageUrl}\n                                alt={item.name}\n                                style={{\n                                  height: \"3.5rem\",\n                                  width: \"3.5rem\",\n                                  marginRight: \"5rem\",\n                                }}\n                              />\n                            </Grid>\n                            <Grid item xs={9}>\n                              <Grid container>\n                                <Grid\n                                  item\n                                  xs={3}\n                                  style={{\n                                    justify: \"center\",\n                                    alignContent: \"center\",\n                                    marginRight: \"5rem\",\n                                    marginTop: \"1rem\",\n                                  }}\n                                >\n                                  <Link to={`/product/${item.product}`}>\n                                    <Typography variant=\"body1\">\n                                      {item.name}\n                                    </Typography>\n                                  </Link>\n                                </Grid>\n                                <Grid item xs={3}>\n                                  <Typography variant=\"body1\">\n                                    {item.quantityOrdered} X{\" \"}\n                                    {/* </Typography> */}\n                                    <Icon classes={{ root: classes.iconRoot }}>\n                                      <img\n                                        alt=\"curency inr\"\n                                        src={rupeeSvgIcon}\n                                        className={classes.imageIcon}\n                                      />\n                                    </Icon>\n                                    {item.unitPrice}\n                                  </Typography>\n                                </Grid>\n                                <Grid item xs={1}>\n                                  <Typography variant=\"body1\">=</Typography>\n                                </Grid>\n                                <Grid item xs={3}>\n                                  <Typography variant=\"body1\">\n                                    <Icon classes={{ root: classes.iconRoot }}>\n                                      <img\n                                        alt=\"curency inr\"\n                                        src={rupeeSvgIcon}\n                                        className={classes.imageIcon}\n                                      />\n                                    </Icon>\n\n                                    {item.quantityOrdered * item.unitPrice}\n                                  </Typography>\n                                </Grid>\n                              </Grid>\n                            </Grid>\n                          </Grid>\n                          <Divider />\n                        </Grid>\n                      ))}\n                      <Grid item xs={12}>\n                        <Grid container>\n                          <Grid item xs={12}>\n                            <Typography variant=\"h6\">\n                              Payment Details\n                              <Divider />\n                            </Typography>\n                          </Grid>\n                          <Grid item xs={3}>\n                            <Typography variant=\"body1\">\n                              Payment Method\n                            </Typography>\n                          </Grid>\n                          <Grid item xs={9}>\n                            <Typography variant=\"body1\">\n                              {cart.paymentMethod}\n                            </Typography>\n                          </Grid>\n                        </Grid>\n                      </Grid>\n                    </Grid>\n                  )}\n                </Grid>\n              </Grid>\n            </form>\n          </Paper>\n        </Grid>\n        <Grid item xs={4} container justify=\"center\">\n          <Paper className={classes.paper}>\n            <Typography variant=\"h6\">Order Summary</Typography>\n            <Divider />\n            <Grid container spacing={1} row justify=\"center\">\n              <Grid item xs={12} justify=\"center\">\n                <Grid container>\n                  <Grid item xs={6}>\n                    <Typography variant=\"body1\">Items Cost</Typography>\n                  </Grid>\n                  <Grid item xs={6}>\n                    <Typography variant=\"body1\">\n                      <Icon classes={{ root: classes.iconRoot }}>\n                        <img\n                          alt=\"curency inr\"\n                          src={rupeeSvgIcon}\n                          className={classes.imageIcon}\n                        />\n                      </Icon>\n                      {cart.itemsPrice}\n                    </Typography>\n                  </Grid>\n                </Grid>\n              </Grid>\n              <Divider />\n              <Grid item xs={12}>\n                <Grid container>\n                  <Grid item xs={6}>\n                    <Typography variant=\"body1\">Shipping Cost</Typography>\n                  </Grid>\n                  <Grid item xs={6}>\n                    <Typography variant=\"body1\">\n                      <Icon classes={{ root: classes.iconRoot }}>\n                        <img\n                          alt=\"curency inr\"\n                          src={rupeeSvgIcon}\n                          className={classes.imageIcon}\n                        />\n                      </Icon>\n                      {cart.shippingPrice}\n                    </Typography>\n                  </Grid>\n                </Grid>\n              </Grid>\n              <Grid item xs={12}>\n                <Grid container>\n                  <Grid item xs={6}>\n                    <Typography variant=\"body1\">Tax</Typography>\n                  </Grid>\n                  <Grid item xs={6}>\n                    <Typography variant=\"body1\">\n                      <Icon classes={{ root: classes.iconRoot }}>\n                        <img\n                          alt=\"curency inr\"\n                          src={rupeeSvgIcon}\n                          className={classes.imageIcon}\n                        />\n                      </Icon>\n                      {cart.taxPrice}\n                    </Typography>\n                  </Grid>\n                </Grid>\n              </Grid>\n              <Grid item xs={12}>\n                <Grid container>\n                  <Grid item xs={6}>\n                    <Typography variant=\"body1\">Total</Typography>\n                  </Grid>\n                  <Grid item xs={6}>\n                    <Typography variant=\"body1\">\n                      <Icon classes={{ root: classes.iconRoot }}>\n                        <img\n                          alt=\"curency inr\"\n                          src={rupeeSvgIcon}\n                          className={classes.imageIcon}\n                        />\n                      </Icon>\n                      {cart.totalPrice}\n                    </Typography>\n                  </Grid>\n                </Grid>\n              </Grid>\n              <Grid item xs={12}>\n                {error && <Message variant=\"danger\">{error}</Message>}\n              </Grid>\n              <Grid item xs={12} align=\"center\">\n                <Button\n                  size=\"small\"\n                  variant=\"contained\"\n                  type=\"submit\"\n                  color=\"primary\"\n                  onClick={placeOrderHandler}\n                  disabled={cart.cartItems === 0}\n                  justify=\"center\"\n                  fullWidth\n                >\n                  Place Order\n                </Button>\n              </Grid>\n            </Grid>\n          </Paper>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default PlaceOrderScreen;\n","D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\components\\OrderListScreen.js",["1413","1414","1415","1416","1417","1418","1419","1420","1421","1422","1423","1424","1425","1426","1427","1428"],"D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\components\\ProductCreateScreen.js",["1429"],"import React, { useState, useEffect, Fragment } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"./Message\";\nimport Spinner from \"./controls/Spinner\";\nimport { Link } from \"react-router-dom\";\nimport GridItem from \"./Grid/GridItem.js\";\nimport GridContainer from \"./Grid/GridContainer.js\";\nimport Card from \"./Card/Card.js\";\nimport CardHeader from \"./Card/CardHeader.js\";\nimport CardBody from \"./Card/CardBody.js\";\n\nimport { createProduct } from \"../actions/productAction\";\nimport {\n  Typography,\n  Grid,\n  Button,\n  TextField,\n  MenuItem,\n  Select,\n} from \"@material-ui/core\";\nimport { listCategories } from \"../actions/categoryAction\";\n\nconst ProductCreateScreen = ({ history, match }) => {\n  const useStyles = makeStyles(() => ({\n    root: {\n      flexGrow: 0,\n      padding: 1,\n      marginTop: \"1rem\",\n      marginBottom: \"1rem\",\n      display: \"flex\",\n      flexDirection: \"inherit\",\n      alignItems: \"center\",\n      height: \"30rem\",\n      width: \"30rem\",\n    },\n    inputText: {\n      margin: \"auto\",\n      padding: \"1rem\",\n      alignContent: \"center\",\n    },\n\n    input: {\n      \"&::placeholder\": {\n        color: \"gray\",\n        fontSize: \"0.85rem\",\n        fontWeight: 500,\n        fontFamily: \"Roboto\",\n      },\n      color: \"gray\", // if you also want to change the color of the input, this is the prop you'd use\n    },\n    cardCategoryWhite: {\n      \"&,& a,& a:hover,& a:focus\": {\n        color: \"rgba(255,255,255,.62)\",\n        margin: \"0\",\n        fontSize: \"14px\",\n        marginTop: \"0\",\n        marginBottom: \"0\",\n      },\n      \"& a,& a:hover,& a:focus\": {\n        color: \"#FFFFFF\",\n      },\n    },\n    cardTitleGreen: {\n      color: \"#26A541\",\n      marginTop: \"0px\",\n      minHeight: \"auto\",\n      fontFamily: \"Roboto\",\n      marginBottom: \"3px\",\n      textDecoration: \"none\",\n      fontSize: \"1rem\",\n      fontWeight: 500,\n      textTransform: \"capitalize\",\n      textAlign: \"left\",\n      \"& small\": {\n        color: \"#777\",\n        fontSize: \"65%\",\n        fontWeight: \"400\",\n        lineHeight: \"1\",\n      },\n    },\n  }));\n  const classes = useStyles();\n\n  const [name, setName] = useState(\"\");\n  const [brand, setBrand] = useState(\"\");\n\n  const [categorySelected, setCategorySelected] = useState(() => \"\");\n\n  // const [subCategories, setSubCategories] = useState(() => []);\n  const [subCategorySelected, setSubCategorySelected] = useState(() => \"\");\n  const [countInStock, setCountInStock] = useState(() => 0);\n  const [isTaxble, setIsTaxble] = useState(() => \"false\");\n  const [taxPercent, setTaxPercent] = useState(() => 0.0);\n  const [description, setDescription] = useState(() => \"\");\n\n  const dispatch = useDispatch();\n\n  const productCreate = useSelector((state) => state.productCreate);\n  const { loading, error, product, success } = productCreate;\n\n  useEffect(() => {\n    dispatch(listCategories());\n  }, [dispatch]);\n  const categoryList = useSelector((state) => state.categoryList);\n  const { categories } = categoryList;\n\n  let renderCategoriesOptions = \"\";\n  if (categories && categories.length > 0) {\n    renderCategoriesOptions = categories.map((eachCategory, idx) => {\n      return (\n        <MenuItem key={idx} value={eachCategory.id}>\n          {eachCategory.name}\n        </MenuItem>\n      );\n    });\n  }\n  let renderSubCategoriesOptions = \"\";\n  if (categorySelected) {\n    let filteredCategory = [];\n    filteredCategory = categories.filter(function (eachCategory) {\n      return (\n        eachCategory.id === categorySelected &&\n        eachCategory.subCategories.length > 0\n      );\n    });\n    if (\n      filteredCategory[0] &&\n      filteredCategory[0].subCategories &&\n      filteredCategory[0].subCategories.length\n    ) {\n      renderSubCategoriesOptions = filteredCategory[0].subCategories.map(\n        (eachSubCategory) => {\n          return (\n            <MenuItem key={eachSubCategory.id} value={eachSubCategory.id}>\n              {eachSubCategory.name}\n            </MenuItem>\n          );\n        }\n      );\n    }\n  }\n  if (success) {\n    console.log(\"Success Response to redirecting to Products List\");\n    history.push(\"/admin/products\");\n  }\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    console.log(\n      \"name : \" +\n        name +\n        \" , description : \" +\n        description +\n        \" , brand : \" +\n        brand +\n        \" , countInStock : \" +\n        countInStock +\n        \" , isTaxble : \" +\n        isTaxble +\n        \" , taxPercent : \" +\n        taxPercent\n    );\n    dispatch(\n      createProduct({\n        name,\n        brand,\n        categorySelected,\n        subCategorySelected,\n        description,\n        countInStock,\n        isTaxble,\n        taxPercent,\n      })\n    );\n  };\n\n  const handleChangeCategory = (e) => {\n    setCategorySelected(() => e.target.value);\n  };\n  const handleChangeSubCategory = (e) => {\n    console.log(\"Exc handleChangeSubCategory\" + e.target.value);\n    setSubCategorySelected(e.target.value);\n  };\n\n  return (\n    <>\n      <GridContainer>\n        <GridItem xs={12} sm={12} md={12}>\n          <Link\n            className=\"btn\"\n            size=\"small\"\n            variant=\"contained\"\n            type=\"submit\"\n            color=\"primary\"\n            to=\"/admin/productlist\"\n            style={{\n              color: \"white\",\n              backgroundColor: \"#26A541\",\n              marginTop: \"1rem\",\n              marginBottom: \"1rem\",\n              align: \"center\",\n              width: \"9rem\",\n            }}\n          >\n            Go Back\n          </Link>\n        </GridItem>\n      </GridContainer>\n      {loading && <Spinner />}\n      {error && <Message variant=\"danger\">{error}</Message>}\n      {loading ? (\n        <Spinner />\n      ) : error ? (\n        <Message variant=\"danger\">{error}</Message>\n      ) : (\n        <GridContainer spacing={1} alignItems=\"center\" justify=\"center\">\n          <GridItem xs={12} sm={12} md={12}>\n            <Card>\n              <CardHeader color=\"primary\">\n                <h4 className={classes.cardTitleWhite}>New Product </h4>\n              </CardHeader>\n              <CardBody>\n                <form onSubmit={submitHandler}>\n                  <Grid container>\n                    <Grid item xs={12}>\n                      <Grid\n                        container\n                        spacing={1}\n                        alignItems=\"center\"\n                        justify=\"center\"\n                      >\n                        <Grid item xs={3}>\n                          <Typography\n                            variant=\"body1\"\n                            style={{\n                              alignItems: \"right\",\n                              justify: \"right\",\n                              marginLeft: \"5rem\",\n                            }}\n                          >\n                            Category{\" \"}\n                          </Typography>\n                        </Grid>\n                        <Grid item xs={3}>\n                          <Select\n                            value={categorySelected}\n                            onChange={handleChangeCategory}\n                            placeholder=\"Category\"\n                            style={{ width: \"10rem\" }}\n                          >\n                            {/* {renderCategories} */}\n                            {renderCategoriesOptions}\n                          </Select>\n                        </Grid>\n                      </Grid>\n                    </Grid>\n                  </Grid>\n                  <Grid container spacing={1}>\n                    <Grid item xs={12}>\n                      <Grid\n                        container\n                        spacing={1}\n                        alignItems=\"center\"\n                        justify=\"center\"\n                      >\n                        <Grid item xs={3}>\n                          <Typography\n                            variant=\"body1\"\n                            style={{\n                              alignItems: \"right\",\n                              justify: \"right\",\n                              marginLeft: \"5rem\",\n                            }}\n                          >\n                            Sub Category{\" \"}\n                          </Typography>\n                        </Grid>\n                        <Grid item xs={3}>\n                          <Select\n                            value={subCategorySelected}\n                            onChange={handleChangeSubCategory}\n                            placeholder=\"Sub Category\"\n                            style={{ width: \"10rem\" }}\n                          >\n                            {/* renderSubCategories */}\n                            {renderSubCategoriesOptions}\n                          </Select>\n                        </Grid>\n                      </Grid>\n                    </Grid>\n                  </Grid>\n                  <Grid container spacing={1}>\n                    <Grid item xs={12}>\n                      <Grid\n                        container\n                        spacing={1}\n                        alignItems=\"center\"\n                        justify=\"center\"\n                      >\n                        <Grid item xs={6}>\n                          <TextField\n                            className={classes.inputText}\n                            placeholder=\"Name\"\n                            variant=\"outlined\"\n                            name=\"name\"\n                            onChange={(e) => setName(e.target.value)}\n                            type=\"text\"\n                            size=\"small\"\n                            value={name}\n                            fullWidth\n                            InputProps={{\n                              classes: { input: classes.input },\n                            }}\n                          />\n                        </Grid>\n                      </Grid>\n                    </Grid>\n                  </Grid>\n                  <Grid container spacing={1}>\n                    <Grid item xs={12}>\n                      <Grid\n                        container\n                        spacing={1}\n                        alignItems=\"center\"\n                        justify=\"center\"\n                      >\n                        <Grid item xs={6}>\n                          <TextField\n                            className={classes.inputText}\n                            placeholder=\"Description\"\n                            variant=\"outlined\"\n                            size=\"small\"\n                            name=\"description\"\n                            onChange={(e) => setDescription(e.target.value)}\n                            type=\"text\"\n                            value={description}\n                            fullWidth\n                            InputProps={{\n                              classes: { input: classes.input },\n                            }}\n                          />\n                        </Grid>\n                      </Grid>\n                    </Grid>\n                  </Grid>\n                  <Grid container spacing={1}>\n                    <Grid item xs={12}>\n                      <Grid\n                        container\n                        spacing={1}\n                        alignItems=\"center\"\n                        justify=\"center\"\n                      >\n                        <Grid item xs={6}>\n                          <TextField\n                            className={classes.inputText}\n                            placeholder=\"Brand\"\n                            variant=\"outlined\"\n                            size=\"small\"\n                            name=\"brand\"\n                            onChange={(e) => setBrand(e.target.value)}\n                            type=\"text\"\n                            value={brand}\n                            fullWidth\n                            InputProps={{\n                              classes: { input: classes.input },\n                            }}\n                          />\n                        </Grid>\n                      </Grid>\n                    </Grid>\n                  </Grid>\n\n                  <Grid container spacing={1}>\n                    <Grid item xs={12}>\n                      <Grid\n                        container\n                        spacing={1}\n                        alignItems=\"center\"\n                        justify=\"center\"\n                      >\n                        <Grid item xs={6}>\n                          <TextField\n                            className={classes.inputText}\n                            placeholder=\"Count In Stock\"\n                            variant=\"outlined\"\n                            size=\"small\"\n                            name=\"countInStock\"\n                            onChange={(e) => setCountInStock(e.target.value)}\n                            type=\"number\"\n                            fullWidth\n                            value={countInStock}\n                            InputProps={{\n                              classes: { input: classes.input },\n                            }}\n                          />\n                        </Grid>\n                      </Grid>\n                    </Grid>\n                  </Grid>\n                  <Grid container spacing={1}>\n                    <Grid item xs={12}>\n                      <Grid\n                        container\n                        spacing={1}\n                        alignItems=\"center\"\n                        justify=\"center\"\n                      >\n                        <Grid item xs={6}>\n                          <TextField\n                            className={classes.inputText}\n                            placeholder=\"Is Taxable\"\n                            variant=\"outlined\"\n                            size=\"small\"\n                            name=\"isTaxable\"\n                            onChange={(e) => setIsTaxble(e.target.value)}\n                            type=\"text\"\n                            fullWidth\n                            value={isTaxble}\n                            InputProps={{\n                              classes: { input: classes.input },\n                            }}\n                          />\n                        </Grid>\n                      </Grid>\n                    </Grid>\n                  </Grid>\n                  <Grid container spacing={1}>\n                    <Grid item xs={12}>\n                      <Grid\n                        container\n                        spacing={1}\n                        alignItems=\"center\"\n                        justify=\"center\"\n                      >\n                        <Grid item xs={6}>\n                          <TextField\n                            className={classes.inputText}\n                            placeholder=\"Tax Percent\"\n                            variant=\"outlined\"\n                            size=\"small\"\n                            name=\"taxPercent\"\n                            onChange={(e) => setTaxPercent(e.target.value)}\n                            type=\"number\"\n                            fullWidth\n                            value={taxPercent}\n                            InputProps={{\n                              classes: { input: classes.input },\n                            }}\n                          />\n                        </Grid>\n                      </Grid>\n                    </Grid>\n                  </Grid>\n\n                  <Grid container spacing={1}>\n                    <Grid item xs={12}>\n                      <Grid\n                        container\n                        spacing={1}\n                        alignItems=\"center\"\n                        justify=\"center\"\n                      >\n                        <Grid item xs={2}>\n                          <Button\n                            size=\"small\"\n                            variant=\"contained\"\n                            type=\"submit\"\n                            color=\"primary\"\n                            fullWidth\n                          >\n                            Create\n                          </Button>\n                        </Grid>\n                      </Grid>\n                    </Grid>\n                  </Grid>\n                </form>\n              </CardBody>\n            </Card>\n          </GridItem>\n        </GridContainer>\n      )}\n    </>\n  );\n};\n\nexport default ProductCreateScreen;\n","D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\components\\ShoppingCartCountScreen.js",[],"D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\components\\StepperScreen.js",["1430"],"import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\nimport clsx from \"clsx\";\r\nimport Stepper from \"@material-ui/core/Stepper\";\r\nimport Step from \"@material-ui/core/Step\";\r\nimport StepLabel from \"@material-ui/core/StepLabel\";\r\nimport Check from \"@material-ui/icons/Check\";\r\nimport ContactMailOutlinedIcon from \"@material-ui/icons/ContactMailOutlined\";\r\nimport AccountBalanceWalletOutlinedIcon from \"@material-ui/icons/AccountBalanceWalletOutlined\";\r\nimport RateReviewOutlinedIcon from \"@material-ui/icons/RateReviewOutlined\";\r\nimport StepConnector from \"@material-ui/core/StepConnector\";\r\n\r\nconst useQontoStepIconStyles = makeStyles({\r\n  root: {\r\n    color: \"#eaeaf0\",\r\n    display: \"flex\",\r\n    height: 22,\r\n    alignItems: \"center\",\r\n  },\r\n  active: {\r\n    color: \"#784af4\",\r\n  },\r\n  circle: {\r\n    width: 8,\r\n    height: 8,\r\n    borderRadius: \"50%\",\r\n    backgroundColor: \"currentColor\",\r\n  },\r\n  completed: {\r\n    color: \"#784af4\",\r\n    zIndex: 1,\r\n    fontSize: 18,\r\n  },\r\n});\r\n\r\nfunction QontoStepIcon(props) {\r\n  const classes = useQontoStepIconStyles();\r\n  const { active, completed } = props;\r\n\r\n  return (\r\n    <div\r\n      className={clsx(classes.root, {\r\n        [classes.active]: active,\r\n      })}\r\n    >\r\n      {completed ? (\r\n        <Check className={classes.completed} />\r\n      ) : (\r\n        <div className={classes.circle} />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nQontoStepIcon.propTypes = {\r\n  /**\r\n   * Whether this step is active.\r\n   */\r\n  active: PropTypes.bool,\r\n  /**\r\n   * Mark the step as completed. Is passed to child components.\r\n   */\r\n  completed: PropTypes.bool,\r\n};\r\n\r\nconst ColorlibConnector = withStyles({\r\n  alternativeLabel: {\r\n    top: 22,\r\n  },\r\n  active: {\r\n    \"& $line\": {\r\n      backgroundImage:\r\n        \"linear-gradient( 95deg,rgb(242,113,33) 0%,rgb(233,64,87) 50%,rgb(138,35,135) 100%)\",\r\n    },\r\n  },\r\n  completed: {\r\n    \"& $line\": {\r\n      backgroundImage:\r\n        \"linear-gradient( 95deg,rgb(242,113,33) 0%,rgb(233,64,87) 50%,rgb(138,35,135) 100%)\",\r\n    },\r\n  },\r\n  line: {\r\n    height: 3,\r\n    border: 0,\r\n    backgroundColor: \"#eaeaf0\",\r\n    borderRadius: 1,\r\n  },\r\n})(StepConnector);\r\n\r\nconst useColorlibStepIconStyles = makeStyles({\r\n  root: {\r\n    backgroundColor: \"#ccc\",\r\n    zIndex: 1,\r\n    color: \"#fff\",\r\n    width: 50,\r\n    height: 50,\r\n    display: \"flex\",\r\n    borderRadius: \"50%\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  active: {\r\n    backgroundImage:\r\n      \"linear-gradient( 136deg, rgb(242,113,33) 0%, rgb(233,64,87) 50%, rgb(138,35,135) 100%)\",\r\n    boxShadow: \"0 4px 10px 0 rgba(0,0,0,.25)\",\r\n  },\r\n  completed: {\r\n    backgroundImage:\r\n      \"linear-gradient( 136deg, rgb(242,113,33) 0%, rgb(233,64,87) 50%, rgb(138,35,135) 100%)\",\r\n  },\r\n});\r\n\r\nfunction ColorlibStepIcon(props) {\r\n  const classes = useColorlibStepIconStyles();\r\n  const { active, completed } = props;\r\n\r\n  const icons = {\r\n    1: <ContactMailOutlinedIcon />,\r\n    2: <AccountBalanceWalletOutlinedIcon />,\r\n    3: <RateReviewOutlinedIcon />,\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={clsx(classes.root, {\r\n        [classes.active]: active,\r\n        [classes.completed]: completed,\r\n      })}\r\n    >\r\n      {icons[String(props.icon)]}\r\n    </div>\r\n  );\r\n}\r\n\r\nColorlibStepIcon.propTypes = {\r\n  /**\r\n   * Whether this step is active.\r\n   */\r\n  active: PropTypes.bool,\r\n  /**\r\n   * Mark the step as completed. Is passed to child components.\r\n   */\r\n  completed: PropTypes.bool,\r\n  /**\r\n   * The label displayed in the step icon.\r\n   */\r\n  icon: PropTypes.node,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  button: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  instructions: {\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nfunction getSteps() {\r\n  return [\"Shipping Details\", \"Payment Details\", \"Review Order\"];\r\n}\r\n\r\nexport default function StepperScreen(props) {\r\n  const classes = useStyles();\r\n  const [activeStep, setActiveStep] = props.currentStep;\r\n  const steps = getSteps();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Stepper\r\n        alternativeLabel\r\n        activeStep={activeStep}\r\n        connector={<ColorlibConnector />}\r\n      >\r\n        {steps.map((label) => (\r\n          <Step key={label}>\r\n            <StepLabel StepIconComponent={ColorlibStepIcon}>{label}</StepLabel>\r\n          </Step>\r\n        ))}\r\n      </Stepper>\r\n      <div>{activeStep === steps.length ? <div></div> : <div></div>}</div>\r\n    </div>\r\n  );\r\n}\r\n","D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\components\\SignUpScreen.js",["1431","1432","1433"],"D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\components\\ProductSettingsScreen.js",["1434","1435","1436","1437","1438","1439","1440","1441"],"import {\n  Button,\n  FormControl,\n  Grid,\n  InputLabel,\n  MenuItem,\n  Paper,\n  Select,\n  TextField,\n  Typography,\n} from \"@material-ui/core\";\nimport React, { Component } from \"react\";\nimport ProductConfigureForm from \"./ProductConfigureForm\";\nimport ProductConfigureTable from \"./ProductConfigureTable\";\n\nclass ProductSettingsScreen extends Component {\n  state = {\n    data: [],\n    editIdx: -1,\n  };\n\n  handleRemove = (i) => {\n    this.setState((state) => ({\n      data: state.data.filter((row, j) => j !== i),\n    }));\n  };\n\n  startEditing = (i) => {\n    this.setState({ editIdx: i });\n  };\n\n  stopEditing = () => {\n    this.setState({ editIdx: -1 });\n  };\n\n  handleChange = (e, name, i) => {\n    const { value } = e.target;\n    this.setState((state) => ({\n      data: state.data.map((row, j) =>\n        j === i ? { ...row, [name]: value } : row\n      ),\n    }));\n  };\n\n  render() {\n    return (\n      <>\n        <Grid\n          container\n          spacing={1}\n          style={{ top: \"5%\", transform: \"translateY(+5%)\" }}\n        >\n          <Grid item xs={12}>\n            <Grid item>\n              <ProductConfigureForm\n                onSubmit={(submission) =>\n                  this.setState({\n                    data: [...this.state.data, submission],\n                  })\n                }\n              />\n            </Grid>\n            {/* </Grid> */}\n          </Grid>\n        </Grid>\n        <ProductConfigureTable\n          handleRemove={this.handleRemove}\n          startEditing={this.startEditing}\n          editIdx={this.state.editIdx}\n          stopEditing={this.stopEditing}\n          handleChange={this.handleChange}\n          data={this.state.data}\n          header={[\n            {\n              name: \"Order Type\",\n              prop: \"orderType\",\n            },\n            {\n              name: \"Unit Of Messure\",\n              prop: \"unitOfMessure\",\n            },\n\n            {\n              name: \"Selling Price\",\n              prop: \"sellingPrice\",\n            },\n          ]}\n        />\n      </>\n    );\n  }\n}\n\nexport default ProductSettingsScreen;\n","D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\components\\ProductConfigureForm.js",["1442","1443","1444","1445"],"D:\\Work\\Vishudha\\vtt-react-workspace\\tagline-traders-web\\src\\components\\ProductConfigureTable.js",["1446","1447","1448","1449","1450"],{"ruleId":"1451","replacedBy":"1452"},{"ruleId":"1453","replacedBy":"1454"},{"ruleId":"1455","severity":1,"message":"1456","line":1,"column":8,"nodeType":"1457","messageId":"1458","endLine":1,"endColumn":25},{"ruleId":"1455","severity":1,"message":"1459","line":3,"column":8,"nodeType":"1457","messageId":"1458","endLine":3,"endColumn":21},{"ruleId":"1455","severity":1,"message":"1460","line":7,"column":8,"nodeType":"1457","messageId":"1458","endLine":7,"endColumn":14},{"ruleId":"1455","severity":1,"message":"1461","line":1,"column":27,"nodeType":"1457","messageId":"1458","endLine":1,"endColumn":36},{"ruleId":"1455","severity":1,"message":"1462","line":7,"column":8,"nodeType":"1457","messageId":"1458","endLine":7,"endColumn":18},{"ruleId":"1455","severity":1,"message":"1463","line":10,"column":10,"nodeType":"1457","messageId":"1458","endLine":10,"endColumn":19},{"ruleId":"1455","severity":1,"message":"1464","line":62,"column":9,"nodeType":"1457","messageId":"1458","endLine":62,"endColumn":19},{"ruleId":"1455","severity":1,"message":"1465","line":63,"column":9,"nodeType":"1457","messageId":"1458","endLine":63,"endColumn":25},{"ruleId":"1455","severity":1,"message":"1466","line":65,"column":9,"nodeType":"1457","messageId":"1458","endLine":65,"endColumn":30},{"ruleId":"1455","severity":1,"message":"1467","line":73,"column":9,"nodeType":"1457","messageId":"1458","endLine":73,"endColumn":24},{"ruleId":"1455","severity":1,"message":"1468","line":78,"column":9,"nodeType":"1457","messageId":"1458","endLine":78,"endColumn":29},{"ruleId":"1455","severity":1,"message":"1469","line":106,"column":10,"nodeType":"1457","messageId":"1458","endLine":106,"endColumn":15},{"ruleId":"1455","severity":1,"message":"1470","line":106,"column":17,"nodeType":"1457","messageId":"1458","endLine":106,"endColumn":25},{"ruleId":"1455","severity":1,"message":"1471","line":107,"column":10,"nodeType":"1457","messageId":"1458","endLine":107,"endColumn":18},{"ruleId":"1455","severity":1,"message":"1472","line":107,"column":20,"nodeType":"1457","messageId":"1458","endLine":107,"endColumn":31},{"ruleId":"1455","severity":1,"message":"1473","line":2,"column":10,"nodeType":"1457","messageId":"1458","endLine":2,"endColumn":14},{"ruleId":"1455","severity":1,"message":"1474","line":15,"column":9,"nodeType":"1457","messageId":"1458","endLine":15,"endColumn":16},{"ruleId":"1455","severity":1,"message":"1475","line":3,"column":8,"nodeType":"1457","messageId":"1458","endLine":3,"endColumn":18},{"ruleId":"1455","severity":1,"message":"1476","line":2,"column":10,"nodeType":"1457","messageId":"1458","endLine":2,"endColumn":14},{"ruleId":"1455","severity":1,"message":"1477","line":8,"column":8,"nodeType":"1457","messageId":"1458","endLine":8,"endColumn":17},{"ruleId":"1455","severity":1,"message":"1478","line":13,"column":3,"nodeType":"1457","messageId":"1458","endLine":13,"endColumn":7},{"ruleId":"1455","severity":1,"message":"1479","line":14,"column":3,"nodeType":"1457","messageId":"1458","endLine":14,"endColumn":12},{"ruleId":"1455","severity":1,"message":"1480","line":15,"column":3,"nodeType":"1457","messageId":"1458","endLine":15,"endColumn":14},{"ruleId":"1455","severity":1,"message":"1462","line":16,"column":3,"nodeType":"1457","messageId":"1458","endLine":16,"endColumn":13},{"ruleId":"1455","severity":1,"message":"1481","line":18,"column":8,"nodeType":"1457","messageId":"1458","endLine":18,"endColumn":13},{"ruleId":"1455","severity":1,"message":"1482","line":19,"column":8,"nodeType":"1457","messageId":"1458","endLine":19,"endColumn":12},{"ruleId":"1455","severity":1,"message":"1474","line":40,"column":9,"nodeType":"1457","messageId":"1458","endLine":40,"endColumn":16},{"ruleId":"1455","severity":1,"message":"1483","line":54,"column":37,"nodeType":"1457","messageId":"1458","endLine":54,"endColumn":41},{"ruleId":"1455","severity":1,"message":"1484","line":54,"column":43,"nodeType":"1457","messageId":"1458","endLine":54,"endColumn":48},{"ruleId":"1455","severity":1,"message":"1485","line":10,"column":10,"nodeType":"1457","messageId":"1458","endLine":10,"endColumn":37},{"ruleId":"1455","severity":1,"message":"1481","line":11,"column":8,"nodeType":"1457","messageId":"1458","endLine":11,"endColumn":13},{"ruleId":"1455","severity":1,"message":"1482","line":24,"column":8,"nodeType":"1457","messageId":"1458","endLine":24,"endColumn":12},{"ruleId":"1455","severity":1,"message":"1486","line":63,"column":9,"nodeType":"1457","messageId":"1458","endLine":63,"endColumn":13},{"ruleId":"1455","severity":1,"message":"1487","line":73,"column":11,"nodeType":"1457","messageId":"1458","endLine":73,"endColumn":19},{"ruleId":"1488","severity":1,"message":"1489","line":79,"column":6,"nodeType":"1490","endLine":79,"endColumn":23,"suggestions":"1491"},{"ruleId":"1455","severity":1,"message":"1462","line":9,"column":3,"nodeType":"1457","messageId":"1458","endLine":9,"endColumn":13},{"ruleId":"1455","severity":1,"message":"1492","line":11,"column":3,"nodeType":"1457","messageId":"1458","endLine":11,"endColumn":9},{"ruleId":"1455","severity":1,"message":"1475","line":12,"column":3,"nodeType":"1457","messageId":"1458","endLine":12,"endColumn":13},{"ruleId":"1455","severity":1,"message":"1493","line":14,"column":3,"nodeType":"1457","messageId":"1458","endLine":14,"endColumn":19},{"ruleId":"1455","severity":1,"message":"1494","line":15,"column":3,"nodeType":"1457","messageId":"1458","endLine":15,"endColumn":12},{"ruleId":"1455","severity":1,"message":"1495","line":17,"column":3,"nodeType":"1457","messageId":"1458","endLine":17,"endColumn":12},{"ruleId":"1455","severity":1,"message":"1496","line":20,"column":3,"nodeType":"1457","messageId":"1458","endLine":20,"endColumn":17},{"ruleId":"1455","severity":1,"message":"1497","line":24,"column":10,"nodeType":"1457","messageId":"1458","endLine":24,"endColumn":19},{"ruleId":"1455","severity":1,"message":"1498","line":24,"column":21,"nodeType":"1457","messageId":"1458","endLine":24,"endColumn":35},{"ruleId":"1455","severity":1,"message":"1499","line":25,"column":8,"nodeType":"1457","messageId":"1458","endLine":25,"endColumn":20},{"ruleId":"1455","severity":1,"message":"1500","line":43,"column":19,"nodeType":"1457","messageId":"1458","endLine":43,"endColumn":29},{"ruleId":"1455","severity":1,"message":"1486","line":46,"column":9,"nodeType":"1457","messageId":"1458","endLine":46,"endColumn":13},{"ruleId":"1455","severity":1,"message":"1501","line":56,"column":21,"nodeType":"1457","messageId":"1458","endLine":56,"endColumn":33},{"ruleId":"1455","severity":1,"message":"1476","line":2,"column":10,"nodeType":"1457","messageId":"1458","endLine":2,"endColumn":14},{"ruleId":"1455","severity":1,"message":"1502","line":10,"column":16,"nodeType":"1457","messageId":"1458","endLine":10,"endColumn":23},{"ruleId":"1455","severity":1,"message":"1470","line":11,"column":17,"nodeType":"1457","messageId":"1458","endLine":11,"endColumn":25},{"ruleId":"1455","severity":1,"message":"1472","line":12,"column":20,"nodeType":"1457","messageId":"1458","endLine":12,"endColumn":31},{"ruleId":"1455","severity":1,"message":"1503","line":13,"column":27,"nodeType":"1457","messageId":"1458","endLine":13,"endColumn":45},{"ruleId":"1455","severity":1,"message":"1504","line":29,"column":9,"nodeType":"1457","messageId":"1458","endLine":29,"endColumn":22},{"ruleId":"1455","severity":1,"message":"1476","line":2,"column":10,"nodeType":"1457","messageId":"1458","endLine":2,"endColumn":14},{"ruleId":"1455","severity":1,"message":"1505","line":5,"column":8,"nodeType":"1457","messageId":"1458","endLine":5,"endColumn":15},{"ruleId":"1455","severity":1,"message":"1506","line":7,"column":8,"nodeType":"1457","messageId":"1458","endLine":7,"endColumn":17},{"ruleId":"1455","severity":1,"message":"1462","line":12,"column":3,"nodeType":"1457","messageId":"1458","endLine":12,"endColumn":13},{"ruleId":"1455","severity":1,"message":"1507","line":13,"column":3,"nodeType":"1457","messageId":"1458","endLine":13,"endColumn":9},{"ruleId":"1455","severity":1,"message":"1508","line":14,"column":3,"nodeType":"1457","messageId":"1458","endLine":14,"endColumn":7},{"ruleId":"1455","severity":1,"message":"1494","line":15,"column":3,"nodeType":"1457","messageId":"1458","endLine":15,"endColumn":12},{"ruleId":"1455","severity":1,"message":"1509","line":16,"column":3,"nodeType":"1457","messageId":"1458","endLine":16,"endColumn":11},{"ruleId":"1455","severity":1,"message":"1510","line":58,"column":11,"nodeType":"1457","messageId":"1458","endLine":58,"endColumn":20},{"ruleId":"1455","severity":1,"message":"1511","line":66,"column":9,"nodeType":"1457","messageId":"1458","endLine":66,"endColumn":30},{"ruleId":"1455","severity":1,"message":"1512","line":70,"column":9,"nodeType":"1457","messageId":"1458","endLine":70,"endColumn":24},{"ruleId":"1455","severity":1,"message":"1462","line":7,"column":10,"nodeType":"1457","messageId":"1458","endLine":7,"endColumn":20},{"ruleId":"1455","severity":1,"message":"1513","line":84,"column":9,"nodeType":"1457","messageId":"1458","endLine":84,"endColumn":21},{"ruleId":"1455","severity":1,"message":"1514","line":99,"column":9,"nodeType":"1457","messageId":"1458","endLine":99,"endColumn":21},{"ruleId":"1455","severity":1,"message":"1515","line":5,"column":8,"nodeType":"1457","messageId":"1458","endLine":5,"endColumn":21},{"ruleId":"1455","severity":1,"message":"1462","line":15,"column":3,"nodeType":"1457","messageId":"1458","endLine":15,"endColumn":13},{"ruleId":"1455","severity":1,"message":"1492","line":16,"column":3,"nodeType":"1457","messageId":"1458","endLine":16,"endColumn":9},{"ruleId":"1455","severity":1,"message":"1475","line":17,"column":3,"nodeType":"1457","messageId":"1458","endLine":17,"endColumn":13},{"ruleId":"1455","severity":1,"message":"1493","line":18,"column":3,"nodeType":"1457","messageId":"1458","endLine":18,"endColumn":19},{"ruleId":"1455","severity":1,"message":"1494","line":19,"column":3,"nodeType":"1457","messageId":"1458","endLine":19,"endColumn":12},{"ruleId":"1455","severity":1,"message":"1516","line":20,"column":3,"nodeType":"1457","messageId":"1458","endLine":20,"endColumn":8},{"ruleId":"1455","severity":1,"message":"1495","line":21,"column":3,"nodeType":"1457","messageId":"1458","endLine":21,"endColumn":12},{"ruleId":"1455","severity":1,"message":"1517","line":22,"column":3,"nodeType":"1457","messageId":"1458","endLine":22,"endColumn":14},{"ruleId":"1455","severity":1,"message":"1518","line":23,"column":3,"nodeType":"1457","messageId":"1458","endLine":23,"endColumn":13},{"ruleId":"1455","severity":1,"message":"1496","line":24,"column":3,"nodeType":"1457","messageId":"1458","endLine":24,"endColumn":17},{"ruleId":"1455","severity":1,"message":"1481","line":28,"column":10,"nodeType":"1457","messageId":"1458","endLine":28,"endColumn":15},{"ruleId":"1455","severity":1,"message":"1486","line":59,"column":9,"nodeType":"1457","messageId":"1458","endLine":59,"endColumn":13},{"ruleId":"1455","severity":1,"message":"1505","line":3,"column":8,"nodeType":"1457","messageId":"1458","endLine":3,"endColumn":15},{"ruleId":"1455","severity":1,"message":"1519","line":4,"column":8,"nodeType":"1457","messageId":"1458","endLine":4,"endColumn":15},{"ruleId":"1455","severity":1,"message":"1472","line":12,"column":20,"nodeType":"1457","messageId":"1458","endLine":12,"endColumn":31},{"ruleId":"1455","severity":1,"message":"1503","line":13,"column":27,"nodeType":"1457","messageId":"1458","endLine":13,"endColumn":45},{"ruleId":"1455","severity":1,"message":"1520","line":14,"column":10,"nodeType":"1457","messageId":"1458","endLine":14,"endColumn":17},{"ruleId":"1455","severity":1,"message":"1521","line":19,"column":11,"nodeType":"1457","messageId":"1458","endLine":19,"endColumn":18},{"ruleId":"1455","severity":1,"message":"1522","line":19,"column":20,"nodeType":"1457","messageId":"1458","endLine":19,"endColumn":25},{"ruleId":"1455","severity":1,"message":"1523","line":28,"column":20,"nodeType":"1457","messageId":"1458","endLine":28,"endColumn":33},{"ruleId":"1455","severity":1,"message":"1524","line":28,"column":42,"nodeType":"1457","messageId":"1458","endLine":28,"endColumn":53},{"ruleId":"1455","severity":1,"message":"1525","line":28,"column":55,"nodeType":"1457","messageId":"1458","endLine":28,"endColumn":61},{"ruleId":"1455","severity":1,"message":"1504","line":45,"column":9,"nodeType":"1457","messageId":"1458","endLine":45,"endColumn":22},{"ruleId":"1455","severity":1,"message":"1476","line":2,"column":10,"nodeType":"1457","messageId":"1458","endLine":2,"endColumn":14},{"ruleId":"1455","severity":1,"message":"1526","line":4,"column":8,"nodeType":"1457","messageId":"1458","endLine":4,"endColumn":15},{"ruleId":"1455","severity":1,"message":"1527","line":7,"column":8,"nodeType":"1457","messageId":"1458","endLine":7,"endColumn":20},{"ruleId":"1455","severity":1,"message":"1521","line":17,"column":11,"nodeType":"1457","messageId":"1458","endLine":17,"endColumn":18},{"ruleId":"1455","severity":1,"message":"1522","line":17,"column":20,"nodeType":"1457","messageId":"1458","endLine":17,"endColumn":25},{"ruleId":"1455","severity":1,"message":"1528","line":17,"column":27,"nodeType":"1457","messageId":"1458","endLine":17,"endColumn":35},{"ruleId":"1455","severity":1,"message":"1483","line":17,"column":37,"nodeType":"1457","messageId":"1458","endLine":17,"endColumn":41},{"ruleId":"1455","severity":1,"message":"1484","line":17,"column":43,"nodeType":"1457","messageId":"1458","endLine":17,"endColumn":48},{"ruleId":"1455","severity":1,"message":"1529","line":2,"column":8,"nodeType":"1457","messageId":"1458","endLine":2,"endColumn":13},{"ruleId":"1455","severity":1,"message":"1476","line":3,"column":10,"nodeType":"1457","messageId":"1458","endLine":3,"endColumn":14},{"ruleId":"1455","severity":1,"message":"1506","line":16,"column":8,"nodeType":"1457","messageId":"1458","endLine":16,"endColumn":17},{"ruleId":"1455","severity":1,"message":"1530","line":21,"column":10,"nodeType":"1457","messageId":"1458","endLine":21,"endColumn":18},{"ruleId":"1455","severity":1,"message":"1531","line":21,"column":20,"nodeType":"1457","messageId":"1458","endLine":21,"endColumn":31},{"ruleId":"1455","severity":1,"message":"1532","line":29,"column":20,"nodeType":"1457","messageId":"1458","endLine":29,"endColumn":30},{"ruleId":"1455","severity":1,"message":"1533","line":32,"column":20,"nodeType":"1457","messageId":"1458","endLine":32,"endColumn":34},{"ruleId":"1488","severity":1,"message":"1534","line":59,"column":6,"nodeType":"1490","endLine":59,"endColumn":60,"suggestions":"1535"},{"ruleId":"1455","severity":1,"message":"1536","line":61,"column":9,"nodeType":"1457","messageId":"1458","endLine":61,"endColumn":30},{"ruleId":"1455","severity":1,"message":"1537","line":66,"column":9,"nodeType":"1457","messageId":"1458","endLine":66,"endColumn":23},{"ruleId":"1455","severity":1,"message":"1476","line":2,"column":10,"nodeType":"1457","messageId":"1458","endLine":2,"endColumn":14},{"ruleId":"1455","severity":1,"message":"1505","line":4,"column":8,"nodeType":"1457","messageId":"1458","endLine":4,"endColumn":15},{"ruleId":"1455","severity":1,"message":"1519","line":5,"column":8,"nodeType":"1457","messageId":"1458","endLine":5,"endColumn":15},{"ruleId":"1455","severity":1,"message":"1521","line":19,"column":11,"nodeType":"1457","messageId":"1458","endLine":19,"endColumn":18},{"ruleId":"1455","severity":1,"message":"1522","line":19,"column":20,"nodeType":"1457","messageId":"1458","endLine":19,"endColumn":25},{"ruleId":"1455","severity":1,"message":"1538","line":23,"column":14,"nodeType":"1457","messageId":"1458","endLine":23,"endColumn":27},{"ruleId":"1455","severity":1,"message":"1539","line":24,"column":12,"nodeType":"1457","messageId":"1458","endLine":24,"endColumn":23},{"ruleId":"1455","severity":1,"message":"1504","line":43,"column":9,"nodeType":"1457","messageId":"1458","endLine":43,"endColumn":22},{"ruleId":"1455","severity":1,"message":"1505","line":3,"column":8,"nodeType":"1457","messageId":"1458","endLine":3,"endColumn":15},{"ruleId":"1455","severity":1,"message":"1519","line":4,"column":8,"nodeType":"1457","messageId":"1458","endLine":4,"endColumn":15},{"ruleId":"1455","severity":1,"message":"1521","line":18,"column":11,"nodeType":"1457","messageId":"1458","endLine":18,"endColumn":18},{"ruleId":"1455","severity":1,"message":"1522","line":18,"column":20,"nodeType":"1457","messageId":"1458","endLine":18,"endColumn":25},{"ruleId":"1455","severity":1,"message":"1528","line":18,"column":27,"nodeType":"1457","messageId":"1458","endLine":18,"endColumn":35},{"ruleId":"1455","severity":1,"message":"1483","line":18,"column":37,"nodeType":"1457","messageId":"1458","endLine":18,"endColumn":41},{"ruleId":"1455","severity":1,"message":"1484","line":18,"column":43,"nodeType":"1457","messageId":"1458","endLine":18,"endColumn":48},{"ruleId":"1455","severity":1,"message":"1540","line":22,"column":14,"nodeType":"1457","messageId":"1458","endLine":22,"endColumn":27},{"ruleId":"1455","severity":1,"message":"1541","line":23,"column":12,"nodeType":"1457","messageId":"1458","endLine":23,"endColumn":23},{"ruleId":"1455","severity":1,"message":"1542","line":29,"column":14,"nodeType":"1457","messageId":"1458","endLine":29,"endColumn":27},{"ruleId":"1455","severity":1,"message":"1543","line":30,"column":12,"nodeType":"1457","messageId":"1458","endLine":30,"endColumn":23},{"ruleId":"1455","severity":1,"message":"1544","line":60,"column":9,"nodeType":"1457","messageId":"1458","endLine":60,"endColumn":22},{"ruleId":"1455","severity":1,"message":"1545","line":66,"column":9,"nodeType":"1457","messageId":"1458","endLine":66,"endColumn":29},{"ruleId":"1455","severity":1,"message":"1476","line":3,"column":10,"nodeType":"1457","messageId":"1458","endLine":3,"endColumn":14},{"ruleId":"1455","severity":1,"message":"1505","line":5,"column":8,"nodeType":"1457","messageId":"1458","endLine":5,"endColumn":15},{"ruleId":"1455","severity":1,"message":"1519","line":6,"column":8,"nodeType":"1457","messageId":"1458","endLine":6,"endColumn":15},{"ruleId":"1455","severity":1,"message":"1546","line":20,"column":10,"nodeType":"1457","messageId":"1458","endLine":20,"endColumn":19},{"ruleId":"1455","severity":1,"message":"1521","line":25,"column":11,"nodeType":"1457","messageId":"1458","endLine":25,"endColumn":18},{"ruleId":"1455","severity":1,"message":"1522","line":25,"column":20,"nodeType":"1457","messageId":"1458","endLine":25,"endColumn":25},{"ruleId":"1455","severity":1,"message":"1538","line":29,"column":14,"nodeType":"1457","messageId":"1458","endLine":29,"endColumn":27},{"ruleId":"1455","severity":1,"message":"1539","line":30,"column":12,"nodeType":"1457","messageId":"1458","endLine":30,"endColumn":23},{"ruleId":"1455","severity":1,"message":"1547","line":53,"column":9,"nodeType":"1457","messageId":"1458","endLine":53,"endColumn":26},{"ruleId":"1455","severity":1,"message":"1504","line":76,"column":9,"nodeType":"1457","messageId":"1458","endLine":76,"endColumn":22},{"ruleId":"1455","severity":1,"message":"1548","line":4,"column":8,"nodeType":"1457","messageId":"1458","endLine":4,"endColumn":13},{"ruleId":"1455","severity":1,"message":"1507","line":5,"column":10,"nodeType":"1457","messageId":"1458","endLine":5,"endColumn":16},{"ruleId":"1455","severity":1,"message":"1476","line":7,"column":10,"nodeType":"1457","messageId":"1458","endLine":7,"endColumn":14},{"ruleId":"1455","severity":1,"message":"1549","line":34,"column":9,"nodeType":"1457","messageId":"1458","endLine":34,"endColumn":25},{"ruleId":"1451","replacedBy":"1550"},{"ruleId":"1453","replacedBy":"1551"},{"ruleId":"1455","severity":1,"message":"1552","line":8,"column":7,"nodeType":"1457","messageId":"1458","endLine":8,"endColumn":16},{"ruleId":"1455","severity":1,"message":"1553","line":4,"column":8,"nodeType":"1457","messageId":"1458","endLine":4,"endColumn":19},{"ruleId":"1455","severity":1,"message":"1507","line":6,"column":8,"nodeType":"1457","messageId":"1458","endLine":6,"endColumn":14},{"ruleId":"1451","replacedBy":"1554"},{"ruleId":"1453","replacedBy":"1555"},{"ruleId":"1455","severity":1,"message":"1481","line":19,"column":8,"nodeType":"1457","messageId":"1458","endLine":19,"endColumn":13},{"ruleId":"1455","severity":1,"message":"1556","line":74,"column":9,"nodeType":"1457","messageId":"1458","endLine":74,"endColumn":25},{"ruleId":"1455","severity":1,"message":"1557","line":87,"column":9,"nodeType":"1457","messageId":"1458","endLine":87,"endColumn":25},{"ruleId":"1455","severity":1,"message":"1558","line":59,"column":9,"nodeType":"1457","messageId":"1458","endLine":59,"endColumn":24},{"ruleId":"1455","severity":1,"message":"1559","line":19,"column":8,"nodeType":"1457","messageId":"1458","endLine":19,"endColumn":19},{"ruleId":"1455","severity":1,"message":"1560","line":22,"column":8,"nodeType":"1457","messageId":"1458","endLine":22,"endColumn":13},{"ruleId":"1455","severity":1,"message":"1561","line":23,"column":8,"nodeType":"1457","messageId":"1458","endLine":23,"endColumn":17},{"ruleId":"1455","severity":1,"message":"1562","line":72,"column":25,"nodeType":"1457","messageId":"1458","endLine":72,"endColumn":43},{"ruleId":"1455","severity":1,"message":"1563","line":167,"column":9,"nodeType":"1457","messageId":"1458","endLine":167,"endColumn":24},{"ruleId":"1455","severity":1,"message":"1564","line":172,"column":9,"nodeType":"1457","messageId":"1458","endLine":172,"endColumn":25},{"ruleId":"1455","severity":1,"message":"1565","line":5,"column":3,"nodeType":"1457","messageId":"1458","endLine":5,"endColumn":14},{"ruleId":"1455","severity":1,"message":"1566","line":16,"column":22,"nodeType":"1457","messageId":"1458","endLine":16,"endColumn":30},{"ruleId":"1455","severity":1,"message":"1567","line":32,"column":21,"nodeType":"1457","messageId":"1458","endLine":32,"endColumn":33},{"ruleId":"1455","severity":1,"message":"1568","line":33,"column":20,"nodeType":"1457","messageId":"1458","endLine":33,"endColumn":31},{"ruleId":"1455","severity":1,"message":"1569","line":79,"column":9,"nodeType":"1457","messageId":"1458","endLine":79,"endColumn":24},{"ruleId":"1455","severity":1,"message":"1570","line":83,"column":9,"nodeType":"1457","messageId":"1458","endLine":83,"endColumn":24},{"ruleId":"1455","severity":1,"message":"1514","line":86,"column":9,"nodeType":"1457","messageId":"1458","endLine":86,"endColumn":21},{"ruleId":"1455","severity":1,"message":"1571","line":93,"column":10,"nodeType":"1457","messageId":"1458","endLine":93,"endColumn":13},{"ruleId":"1455","severity":1,"message":"1572","line":96,"column":9,"nodeType":"1457","messageId":"1458","endLine":96,"endColumn":19},{"ruleId":"1451","replacedBy":"1573"},{"ruleId":"1453","replacedBy":"1574"},{"ruleId":"1455","severity":1,"message":"1575","line":8,"column":8,"nodeType":"1457","messageId":"1458","endLine":8,"endColumn":25},{"ruleId":"1455","severity":1,"message":"1576","line":9,"column":8,"nodeType":"1457","messageId":"1458","endLine":9,"endColumn":20},{"ruleId":"1455","severity":1,"message":"1577","line":10,"column":8,"nodeType":"1457","messageId":"1458","endLine":10,"endColumn":22},{"ruleId":"1455","severity":1,"message":"1578","line":11,"column":8,"nodeType":"1457","messageId":"1458","endLine":11,"endColumn":18},{"ruleId":"1455","severity":1,"message":"1476","line":13,"column":10,"nodeType":"1457","messageId":"1458","endLine":13,"endColumn":14},{"ruleId":"1455","severity":1,"message":"1579","line":116,"column":17,"nodeType":"1457","messageId":"1458","endLine":116,"endColumn":25},{"ruleId":"1455","severity":1,"message":"1580","line":117,"column":25,"nodeType":"1457","messageId":"1458","endLine":117,"endColumn":41},{"ruleId":"1455","severity":1,"message":"1581","line":118,"column":16,"nodeType":"1457","messageId":"1458","endLine":118,"endColumn":23},{"ruleId":"1455","severity":1,"message":"1582","line":120,"column":21,"nodeType":"1457","messageId":"1458","endLine":120,"endColumn":33},{"ruleId":"1455","severity":1,"message":"1583","line":121,"column":27,"nodeType":"1457","messageId":"1458","endLine":121,"endColumn":45},{"ruleId":"1455","severity":1,"message":"1584","line":129,"column":9,"nodeType":"1457","messageId":"1458","endLine":129,"endColumn":12},{"ruleId":"1455","severity":1,"message":"1585","line":12,"column":10,"nodeType":"1457","messageId":"1458","endLine":12,"endColumn":23},{"ruleId":"1455","severity":1,"message":"1486","line":44,"column":9,"nodeType":"1457","messageId":"1458","endLine":44,"endColumn":13},{"ruleId":"1455","severity":1,"message":"1586","line":3,"column":19,"nodeType":"1457","messageId":"1458","endLine":3,"endColumn":35},{"ruleId":"1455","severity":1,"message":"1587","line":4,"column":8,"nodeType":"1457","messageId":"1458","endLine":4,"endColumn":15},{"ruleId":"1455","severity":1,"message":"1588","line":5,"column":8,"nodeType":"1457","messageId":"1458","endLine":5,"endColumn":12},{"ruleId":"1455","severity":1,"message":"1589","line":6,"column":8,"nodeType":"1457","messageId":"1458","endLine":6,"endColumn":13},{"ruleId":"1455","severity":1,"message":"1590","line":7,"column":8,"nodeType":"1457","messageId":"1458","endLine":7,"endColumn":16},{"ruleId":"1455","severity":1,"message":"1591","line":9,"column":8,"nodeType":"1457","messageId":"1458","endLine":9,"endColumn":16},{"ruleId":"1455","severity":1,"message":"1592","line":10,"column":8,"nodeType":"1457","messageId":"1458","endLine":10,"endColumn":15},{"ruleId":"1455","severity":1,"message":"1593","line":12,"column":16,"nodeType":"1457","messageId":"1458","endLine":12,"endColumn":25},{"ruleId":"1455","severity":1,"message":"1594","line":12,"column":27,"nodeType":"1457","messageId":"1458","endLine":12,"endColumn":34},{"ruleId":"1455","severity":1,"message":"1595","line":12,"column":36,"nodeType":"1457","messageId":"1458","endLine":12,"endColumn":43},{"ruleId":"1455","severity":1,"message":"1596","line":67,"column":9,"nodeType":"1457","messageId":"1458","endLine":67,"endColumn":21},{"ruleId":"1455","severity":1,"message":"1548","line":4,"column":8,"nodeType":"1457","messageId":"1458","endLine":4,"endColumn":13},{"ruleId":"1451","replacedBy":"1597"},{"ruleId":"1453","replacedBy":"1598"},{"ruleId":"1455","severity":1,"message":"1456","line":1,"column":8,"nodeType":"1457","messageId":"1458","endLine":1,"endColumn":25},{"ruleId":"1455","severity":1,"message":"1459","line":3,"column":8,"nodeType":"1457","messageId":"1458","endLine":3,"endColumn":21},{"ruleId":"1455","severity":1,"message":"1460","line":7,"column":8,"nodeType":"1457","messageId":"1458","endLine":7,"endColumn":14},{"ruleId":"1455","severity":1,"message":"1599","line":28,"column":8,"nodeType":"1457","messageId":"1458","endLine":28,"endColumn":29},{"ruleId":"1455","severity":1,"message":"1586","line":3,"column":19,"nodeType":"1457","messageId":"1458","endLine":3,"endColumn":35},{"ruleId":"1455","severity":1,"message":"1587","line":4,"column":8,"nodeType":"1457","messageId":"1458","endLine":4,"endColumn":15},{"ruleId":"1455","severity":1,"message":"1588","line":5,"column":8,"nodeType":"1457","messageId":"1458","endLine":5,"endColumn":12},{"ruleId":"1455","severity":1,"message":"1589","line":6,"column":8,"nodeType":"1457","messageId":"1458","endLine":6,"endColumn":13},{"ruleId":"1455","severity":1,"message":"1590","line":7,"column":8,"nodeType":"1457","messageId":"1458","endLine":7,"endColumn":16},{"ruleId":"1455","severity":1,"message":"1591","line":9,"column":8,"nodeType":"1457","messageId":"1458","endLine":9,"endColumn":16},{"ruleId":"1455","severity":1,"message":"1592","line":10,"column":8,"nodeType":"1457","messageId":"1458","endLine":10,"endColumn":15},{"ruleId":"1455","severity":1,"message":"1593","line":12,"column":16,"nodeType":"1457","messageId":"1458","endLine":12,"endColumn":25},{"ruleId":"1455","severity":1,"message":"1594","line":12,"column":27,"nodeType":"1457","messageId":"1458","endLine":12,"endColumn":34},{"ruleId":"1455","severity":1,"message":"1595","line":12,"column":36,"nodeType":"1457","messageId":"1458","endLine":12,"endColumn":43},{"ruleId":"1455","severity":1,"message":"1473","line":2,"column":10,"nodeType":"1457","messageId":"1458","endLine":2,"endColumn":14},{"ruleId":"1455","severity":1,"message":"1474","line":15,"column":9,"nodeType":"1457","messageId":"1458","endLine":15,"endColumn":16},{"ruleId":"1455","severity":1,"message":"1486","line":44,"column":9,"nodeType":"1457","messageId":"1458","endLine":44,"endColumn":13},{"ruleId":"1455","severity":1,"message":"1600","line":8,"column":8,"nodeType":"1457","messageId":"1458","endLine":8,"endColumn":13},{"ruleId":"1455","severity":1,"message":"1601","line":13,"column":8,"nodeType":"1457","messageId":"1458","endLine":13,"endColumn":24},{"ruleId":"1455","severity":1,"message":"1559","line":16,"column":8,"nodeType":"1457","messageId":"1458","endLine":16,"endColumn":19},{"ruleId":"1455","severity":1,"message":"1602","line":19,"column":8,"nodeType":"1457","messageId":"1458","endLine":19,"endColumn":24},{"ruleId":"1455","severity":1,"message":"1562","line":70,"column":25,"nodeType":"1457","messageId":"1458","endLine":70,"endColumn":43},{"ruleId":"1455","severity":1,"message":"1603","line":72,"column":10,"nodeType":"1457","messageId":"1458","endLine":72,"endColumn":19},{"ruleId":"1488","severity":1,"message":"1604","line":98,"column":6,"nodeType":"1490","endLine":98,"endColumn":46,"suggestions":"1605"},{"ruleId":"1455","severity":1,"message":"1606","line":120,"column":9,"nodeType":"1457","messageId":"1458","endLine":120,"endColumn":22},{"ruleId":"1455","severity":1,"message":"1607","line":143,"column":9,"nodeType":"1457","messageId":"1458","endLine":143,"endColumn":24},{"ruleId":"1455","severity":1,"message":"1461","line":1,"column":27,"nodeType":"1457","messageId":"1458","endLine":1,"endColumn":36},{"ruleId":"1455","severity":1,"message":"1462","line":7,"column":8,"nodeType":"1457","messageId":"1458","endLine":7,"endColumn":18},{"ruleId":"1455","severity":1,"message":"1463","line":10,"column":10,"nodeType":"1457","messageId":"1458","endLine":10,"endColumn":19},{"ruleId":"1455","severity":1,"message":"1464","line":62,"column":9,"nodeType":"1457","messageId":"1458","endLine":62,"endColumn":19},{"ruleId":"1455","severity":1,"message":"1465","line":63,"column":9,"nodeType":"1457","messageId":"1458","endLine":63,"endColumn":25},{"ruleId":"1455","severity":1,"message":"1466","line":65,"column":9,"nodeType":"1457","messageId":"1458","endLine":65,"endColumn":30},{"ruleId":"1455","severity":1,"message":"1467","line":73,"column":9,"nodeType":"1457","messageId":"1458","endLine":73,"endColumn":24},{"ruleId":"1455","severity":1,"message":"1468","line":78,"column":9,"nodeType":"1457","messageId":"1458","endLine":78,"endColumn":29},{"ruleId":"1455","severity":1,"message":"1469","line":106,"column":10,"nodeType":"1457","messageId":"1458","endLine":106,"endColumn":15},{"ruleId":"1455","severity":1,"message":"1470","line":106,"column":17,"nodeType":"1457","messageId":"1458","endLine":106,"endColumn":25},{"ruleId":"1455","severity":1,"message":"1471","line":107,"column":10,"nodeType":"1457","messageId":"1458","endLine":107,"endColumn":18},{"ruleId":"1455","severity":1,"message":"1472","line":107,"column":20,"nodeType":"1457","messageId":"1458","endLine":107,"endColumn":31},{"ruleId":"1455","severity":1,"message":"1608","line":3,"column":3,"nodeType":"1457","messageId":"1458","endLine":3,"endColumn":18},{"ruleId":"1455","severity":1,"message":"1553","line":4,"column":8,"nodeType":"1457","messageId":"1458","endLine":4,"endColumn":19},{"ruleId":"1455","severity":1,"message":"1507","line":6,"column":8,"nodeType":"1457","messageId":"1458","endLine":6,"endColumn":14},{"ruleId":"1451","replacedBy":"1609"},{"ruleId":"1453","replacedBy":"1610"},{"ruleId":"1455","severity":1,"message":"1611","line":12,"column":3,"nodeType":"1457","messageId":"1458","endLine":12,"endColumn":26},{"ruleId":"1455","severity":1,"message":"1612","line":14,"column":3,"nodeType":"1457","messageId":"1458","endLine":14,"endColumn":23},{"ruleId":"1455","severity":1,"message":"1487","line":80,"column":20,"nodeType":"1457","messageId":"1458","endLine":80,"endColumn":28},{"ruleId":"1455","severity":1,"message":"1487","line":197,"column":20,"nodeType":"1457","messageId":"1458","endLine":197,"endColumn":28},{"ruleId":"1455","severity":1,"message":"1487","line":234,"column":20,"nodeType":"1457","messageId":"1458","endLine":234,"endColumn":28},{"ruleId":"1455","severity":1,"message":"1487","line":132,"column":20,"nodeType":"1457","messageId":"1458","endLine":132,"endColumn":28},{"ruleId":"1455","severity":1,"message":"1487","line":206,"column":20,"nodeType":"1457","messageId":"1458","endLine":206,"endColumn":28},{"ruleId":"1455","severity":1,"message":"1475","line":3,"column":8,"nodeType":"1457","messageId":"1458","endLine":3,"endColumn":18},{"ruleId":"1451","replacedBy":"1613"},{"ruleId":"1453","replacedBy":"1614"},{"ruleId":"1455","severity":1,"message":"1575","line":8,"column":8,"nodeType":"1457","messageId":"1458","endLine":8,"endColumn":25},{"ruleId":"1455","severity":1,"message":"1576","line":9,"column":8,"nodeType":"1457","messageId":"1458","endLine":9,"endColumn":20},{"ruleId":"1455","severity":1,"message":"1577","line":10,"column":8,"nodeType":"1457","messageId":"1458","endLine":10,"endColumn":22},{"ruleId":"1455","severity":1,"message":"1578","line":11,"column":8,"nodeType":"1457","messageId":"1458","endLine":11,"endColumn":18},{"ruleId":"1455","severity":1,"message":"1476","line":13,"column":10,"nodeType":"1457","messageId":"1458","endLine":13,"endColumn":14},{"ruleId":"1455","severity":1,"message":"1579","line":116,"column":17,"nodeType":"1457","messageId":"1458","endLine":116,"endColumn":25},{"ruleId":"1455","severity":1,"message":"1580","line":117,"column":25,"nodeType":"1457","messageId":"1458","endLine":117,"endColumn":41},{"ruleId":"1455","severity":1,"message":"1581","line":118,"column":16,"nodeType":"1457","messageId":"1458","endLine":118,"endColumn":23},{"ruleId":"1455","severity":1,"message":"1582","line":120,"column":21,"nodeType":"1457","messageId":"1458","endLine":120,"endColumn":33},{"ruleId":"1455","severity":1,"message":"1583","line":121,"column":27,"nodeType":"1457","messageId":"1458","endLine":121,"endColumn":45},{"ruleId":"1455","severity":1,"message":"1584","line":129,"column":9,"nodeType":"1457","messageId":"1458","endLine":129,"endColumn":12},{"ruleId":"1451","replacedBy":"1615"},{"ruleId":"1453","replacedBy":"1616"},{"ruleId":"1455","severity":1,"message":"1617","line":9,"column":7,"nodeType":"1457","messageId":"1458","endLine":9,"endColumn":16},{"ruleId":"1451","replacedBy":"1618"},{"ruleId":"1453","replacedBy":"1619"},{"ruleId":"1455","severity":1,"message":"1620","line":1,"column":17,"nodeType":"1457","messageId":"1458","endLine":1,"endColumn":25},{"ruleId":"1455","severity":1,"message":"1521","line":76,"column":11,"nodeType":"1457","messageId":"1458","endLine":76,"endColumn":18},{"ruleId":"1455","severity":1,"message":"1522","line":76,"column":20,"nodeType":"1457","messageId":"1458","endLine":76,"endColumn":25},{"ruleId":"1451","replacedBy":"1621"},{"ruleId":"1453","replacedBy":"1622"},{"ruleId":"1455","severity":1,"message":"1623","line":18,"column":10,"nodeType":"1457","messageId":"1458","endLine":18,"endColumn":24},{"ruleId":"1455","severity":1,"message":"1624","line":18,"column":26,"nodeType":"1457","messageId":"1458","endLine":18,"endColumn":43},{"ruleId":"1488","severity":1,"message":"1625","line":31,"column":6,"nodeType":"1490","endLine":31,"endColumn":8,"suggestions":"1626"},{"ruleId":"1455","severity":1,"message":"1620","line":1,"column":17,"nodeType":"1457","messageId":"1458","endLine":1,"endColumn":25},{"ruleId":"1455","severity":1,"message":"1476","line":2,"column":10,"nodeType":"1457","messageId":"1458","endLine":2,"endColumn":14},{"ruleId":"1455","severity":1,"message":"1627","line":3,"column":8,"nodeType":"1457","messageId":"1458","endLine":3,"endColumn":26},{"ruleId":"1455","severity":1,"message":"1566","line":5,"column":22,"nodeType":"1457","messageId":"1458","endLine":5,"endColumn":30},{"ruleId":"1455","severity":1,"message":"1620","line":1,"column":17,"nodeType":"1457","messageId":"1458","endLine":1,"endColumn":25},{"ruleId":"1455","severity":1,"message":"1521","line":75,"column":11,"nodeType":"1457","messageId":"1458","endLine":75,"endColumn":18},{"ruleId":"1455","severity":1,"message":"1522","line":75,"column":20,"nodeType":"1457","messageId":"1458","endLine":75,"endColumn":25},{"ruleId":"1455","severity":1,"message":"1628","line":77,"column":7,"nodeType":"1457","messageId":"1458","endLine":77,"endColumn":17},{"ruleId":"1629","severity":1,"message":"1630","line":33,"column":24,"nodeType":"1631","messageId":"1632","endLine":33,"endColumn":33},{"ruleId":"1455","severity":1,"message":"1620","line":1,"column":17,"nodeType":"1457","messageId":"1458","endLine":1,"endColumn":25},{"ruleId":"1455","severity":1,"message":"1529","line":2,"column":8,"nodeType":"1457","messageId":"1458","endLine":2,"endColumn":13},{"ruleId":"1455","severity":1,"message":"1519","line":6,"column":8,"nodeType":"1457","messageId":"1458","endLine":6,"endColumn":15},{"ruleId":"1455","severity":1,"message":"1566","line":7,"column":22,"nodeType":"1457","messageId":"1458","endLine":7,"endColumn":30},{"ruleId":"1455","severity":1,"message":"1633","line":11,"column":8,"nodeType":"1457","messageId":"1458","endLine":11,"endColumn":17},{"ruleId":"1455","severity":1,"message":"1521","line":51,"column":11,"nodeType":"1457","messageId":"1458","endLine":51,"endColumn":18},{"ruleId":"1455","severity":1,"message":"1515","line":3,"column":8,"nodeType":"1457","messageId":"1458","endLine":3,"endColumn":21},{"ruleId":"1455","severity":1,"message":"1634","line":8,"column":3,"nodeType":"1457","messageId":"1458","endLine":8,"endColumn":12},{"ruleId":"1455","severity":1,"message":"1635","line":4,"column":10,"nodeType":"1457","messageId":"1458","endLine":4,"endColumn":22},{"ruleId":"1455","severity":1,"message":"1520","line":32,"column":10,"nodeType":"1457","messageId":"1458","endLine":32,"endColumn":17},{"ruleId":"1455","severity":1,"message":"1521","line":39,"column":11,"nodeType":"1457","messageId":"1458","endLine":39,"endColumn":18},{"ruleId":"1455","severity":1,"message":"1522","line":39,"column":20,"nodeType":"1457","messageId":"1458","endLine":39,"endColumn":25},{"ruleId":"1455","severity":1,"message":"1523","line":48,"column":20,"nodeType":"1457","messageId":"1458","endLine":48,"endColumn":33},{"ruleId":"1455","severity":1,"message":"1524","line":48,"column":42,"nodeType":"1457","messageId":"1458","endLine":48,"endColumn":53},{"ruleId":"1455","severity":1,"message":"1525","line":48,"column":55,"nodeType":"1457","messageId":"1458","endLine":48,"endColumn":61},{"ruleId":"1455","severity":1,"message":"1476","line":2,"column":10,"nodeType":"1457","messageId":"1458","endLine":2,"endColumn":14},{"ruleId":"1455","severity":1,"message":"1505","line":4,"column":8,"nodeType":"1457","messageId":"1458","endLine":4,"endColumn":15},{"ruleId":"1455","severity":1,"message":"1519","line":5,"column":8,"nodeType":"1457","messageId":"1458","endLine":5,"endColumn":15},{"ruleId":"1455","severity":1,"message":"1521","line":19,"column":11,"nodeType":"1457","messageId":"1458","endLine":19,"endColumn":18},{"ruleId":"1455","severity":1,"message":"1522","line":19,"column":20,"nodeType":"1457","messageId":"1458","endLine":19,"endColumn":25},{"ruleId":"1455","severity":1,"message":"1538","line":23,"column":14,"nodeType":"1457","messageId":"1458","endLine":23,"endColumn":27},{"ruleId":"1455","severity":1,"message":"1539","line":24,"column":12,"nodeType":"1457","messageId":"1458","endLine":24,"endColumn":23},{"ruleId":"1455","severity":1,"message":"1504","line":43,"column":9,"nodeType":"1457","messageId":"1458","endLine":43,"endColumn":22},{"ruleId":"1636","severity":1,"message":"1637","line":119,"column":37,"nodeType":"1638","messageId":"1639","endLine":119,"endColumn":38},{"ruleId":"1488","severity":1,"message":"1640","line":127,"column":6,"nodeType":"1490","endLine":127,"endColumn":23,"suggestions":"1641"},{"ruleId":"1455","severity":1,"message":"1521","line":132,"column":11,"nodeType":"1457","messageId":"1458","endLine":132,"endColumn":18},{"ruleId":"1455","severity":1,"message":"1522","line":132,"column":20,"nodeType":"1457","messageId":"1458","endLine":132,"endColumn":25},{"ruleId":"1455","severity":1,"message":"1487","line":168,"column":11,"nodeType":"1457","messageId":"1458","endLine":168,"endColumn":19},{"ruleId":"1455","severity":1,"message":"1642","line":9,"column":3,"nodeType":"1457","messageId":"1458","endLine":9,"endColumn":19},{"ruleId":"1455","severity":1,"message":"1566","line":12,"column":22,"nodeType":"1457","messageId":"1458","endLine":12,"endColumn":30},{"ruleId":"1455","severity":1,"message":"1548","line":4,"column":8,"nodeType":"1457","messageId":"1458","endLine":4,"endColumn":13},{"ruleId":"1455","severity":1,"message":"1507","line":5,"column":10,"nodeType":"1457","messageId":"1458","endLine":5,"endColumn":16},{"ruleId":"1455","severity":1,"message":"1476","line":7,"column":10,"nodeType":"1457","messageId":"1458","endLine":7,"endColumn":14},{"ruleId":"1455","severity":1,"message":"1643","line":9,"column":8,"nodeType":"1457","messageId":"1458","endLine":9,"endColumn":19},{"ruleId":"1455","severity":1,"message":"1476","line":6,"column":10,"nodeType":"1457","messageId":"1458","endLine":6,"endColumn":14},{"ruleId":"1455","severity":1,"message":"1644","line":23,"column":3,"nodeType":"1457","messageId":"1458","endLine":23,"endColumn":16},{"ruleId":"1455","severity":1,"message":"1645","line":27,"column":3,"nodeType":"1457","messageId":"1458","endLine":27,"endColumn":7},{"ruleId":"1455","severity":1,"message":"1495","line":29,"column":3,"nodeType":"1457","messageId":"1458","endLine":29,"endColumn":12},{"ruleId":"1455","severity":1,"message":"1548","line":30,"column":3,"nodeType":"1457","messageId":"1458","endLine":30,"endColumn":8},{"ruleId":"1455","severity":1,"message":"1475","line":31,"column":3,"nodeType":"1457","messageId":"1458","endLine":31,"endColumn":13},{"ruleId":"1455","severity":1,"message":"1544","line":114,"column":9,"nodeType":"1457","messageId":"1458","endLine":114,"endColumn":22},{"ruleId":"1455","severity":1,"message":"1517","line":13,"column":3,"nodeType":"1457","messageId":"1458","endLine":13,"endColumn":14},{"ruleId":"1455","severity":1,"message":"1518","line":14,"column":3,"nodeType":"1457","messageId":"1458","endLine":14,"endColumn":13},{"ruleId":"1455","severity":1,"message":"1516","line":15,"column":3,"nodeType":"1457","messageId":"1458","endLine":15,"endColumn":8},{"ruleId":"1455","severity":1,"message":"1646","line":16,"column":3,"nodeType":"1457","messageId":"1458","endLine":16,"endColumn":17},{"ruleId":"1455","severity":1,"message":"1476","line":18,"column":10,"nodeType":"1457","messageId":"1458","endLine":18,"endColumn":14},{"ruleId":"1455","severity":1,"message":"1647","line":19,"column":10,"nodeType":"1457","messageId":"1458","endLine":19,"endColumn":31},{"ruleId":"1455","severity":1,"message":"1648","line":7,"column":3,"nodeType":"1457","messageId":"1458","endLine":7,"endColumn":29},{"ruleId":"1455","severity":1,"message":"1517","line":25,"column":3,"nodeType":"1457","messageId":"1458","endLine":25,"endColumn":14},{"ruleId":"1455","severity":1,"message":"1492","line":26,"column":3,"nodeType":"1457","messageId":"1458","endLine":26,"endColumn":9},{"ruleId":"1455","severity":1,"message":"1509","line":27,"column":3,"nodeType":"1457","messageId":"1458","endLine":27,"endColumn":11},{"ruleId":"1455","severity":1,"message":"1649","line":152,"column":9,"nodeType":"1457","messageId":"1458","endLine":152,"endColumn":24},{"ruleId":"1455","severity":1,"message":"1650","line":161,"column":9,"nodeType":"1457","messageId":"1458","endLine":161,"endColumn":21},{"ruleId":"1455","severity":1,"message":"1529","line":1,"column":8,"nodeType":"1457","messageId":"1458","endLine":1,"endColumn":13},{"ruleId":"1455","severity":1,"message":"1651","line":17,"column":3,"nodeType":"1457","messageId":"1458","endLine":17,"endColumn":16},{"ruleId":"1455","severity":1,"message":"1652","line":19,"column":10,"nodeType":"1457","messageId":"1458","endLine":19,"endColumn":15},{"ruleId":"1455","severity":1,"message":"1653","line":20,"column":8,"nodeType":"1457","messageId":"1458","endLine":20,"endColumn":16},{"ruleId":"1455","severity":1,"message":"1654","line":21,"column":8,"nodeType":"1457","messageId":"1458","endLine":21,"endColumn":23},{"ruleId":"1455","severity":1,"message":"1655","line":22,"column":8,"nodeType":"1457","messageId":"1458","endLine":22,"endColumn":25},{"ruleId":"1455","severity":1,"message":"1656","line":24,"column":3,"nodeType":"1457","messageId":"1458","endLine":24,"endColumn":23},{"ruleId":"1455","severity":1,"message":"1657","line":25,"column":3,"nodeType":"1457","messageId":"1458","endLine":25,"endColumn":23},{"ruleId":"1455","severity":1,"message":"1658","line":28,"column":3,"nodeType":"1457","messageId":"1458","endLine":28,"endColumn":15},{"ruleId":"1455","severity":1,"message":"1659","line":29,"column":3,"nodeType":"1457","messageId":"1458","endLine":29,"endColumn":16},{"ruleId":"1455","severity":1,"message":"1644","line":30,"column":3,"nodeType":"1457","messageId":"1458","endLine":30,"endColumn":16},{"ruleId":"1455","severity":1,"message":"1566","line":32,"column":10,"nodeType":"1457","messageId":"1458","endLine":32,"endColumn":18},{"ruleId":"1455","severity":1,"message":"1462","line":34,"column":3,"nodeType":"1457","messageId":"1458","endLine":34,"endColumn":13},{"ruleId":"1455","severity":1,"message":"1548","line":38,"column":3,"nodeType":"1457","messageId":"1458","endLine":38,"endColumn":8},{"ruleId":"1455","severity":1,"message":"1475","line":39,"column":3,"nodeType":"1457","messageId":"1458","endLine":39,"endColumn":13},{"ruleId":"1455","severity":1,"message":"1660","line":107,"column":10,"nodeType":"1457","messageId":"1458","endLine":107,"endColumn":15},{"ruleId":"1455","severity":1,"message":"1546","line":113,"column":10,"nodeType":"1457","messageId":"1458","endLine":113,"endColumn":19},{"ruleId":"1455","severity":1,"message":"1661","line":113,"column":21,"nodeType":"1457","messageId":"1458","endLine":113,"endColumn":33},{"ruleId":"1488","severity":1,"message":"1662","line":141,"column":6,"nodeType":"1490","endLine":141,"endColumn":36,"suggestions":"1663"},{"ruleId":"1455","severity":1,"message":"1633","line":19,"column":8,"nodeType":"1457","messageId":"1458","endLine":19,"endColumn":17},{"ruleId":"1455","severity":1,"message":"1486","line":51,"column":9,"nodeType":"1457","messageId":"1458","endLine":51,"endColumn":13},{"ruleId":"1455","severity":1,"message":"1664","line":57,"column":10,"nodeType":"1457","messageId":"1458","endLine":57,"endColumn":19},{"ruleId":"1455","severity":1,"message":"1505","line":4,"column":8,"nodeType":"1457","messageId":"1458","endLine":4,"endColumn":15},{"ruleId":"1455","severity":1,"message":"1519","line":5,"column":8,"nodeType":"1457","messageId":"1458","endLine":5,"endColumn":15},{"ruleId":"1455","severity":1,"message":"1476","line":6,"column":10,"nodeType":"1457","messageId":"1458","endLine":6,"endColumn":14},{"ruleId":"1455","severity":1,"message":"1665","line":13,"column":17,"nodeType":"1457","messageId":"1458","endLine":13,"endColumn":20},{"ruleId":"1455","severity":1,"message":"1666","line":13,"column":22,"nodeType":"1457","messageId":"1458","endLine":13,"endColumn":25},{"ruleId":"1455","severity":1,"message":"1653","line":14,"column":8,"nodeType":"1457","messageId":"1458","endLine":14,"endColumn":16},{"ruleId":"1455","severity":1,"message":"1654","line":15,"column":8,"nodeType":"1457","messageId":"1458","endLine":15,"endColumn":23},{"ruleId":"1455","severity":1,"message":"1655","line":16,"column":8,"nodeType":"1457","messageId":"1458","endLine":16,"endColumn":25},{"ruleId":"1455","severity":1,"message":"1656","line":17,"column":10,"nodeType":"1457","messageId":"1458","endLine":17,"endColumn":30},{"ruleId":"1455","severity":1,"message":"1645","line":22,"column":3,"nodeType":"1457","messageId":"1458","endLine":22,"endColumn":7},{"ruleId":"1455","severity":1,"message":"1507","line":23,"column":3,"nodeType":"1457","messageId":"1458","endLine":23,"endColumn":9},{"ruleId":"1455","severity":1,"message":"1495","line":24,"column":3,"nodeType":"1457","messageId":"1458","endLine":24,"endColumn":12},{"ruleId":"1455","severity":1,"message":"1548","line":25,"column":3,"nodeType":"1457","messageId":"1458","endLine":25,"endColumn":8},{"ruleId":"1455","severity":1,"message":"1475","line":26,"column":3,"nodeType":"1457","messageId":"1458","endLine":26,"endColumn":13},{"ruleId":"1455","severity":1,"message":"1521","line":70,"column":11,"nodeType":"1457","messageId":"1458","endLine":70,"endColumn":18},{"ruleId":"1455","severity":1,"message":"1522","line":70,"column":20,"nodeType":"1457","messageId":"1458","endLine":70,"endColumn":25},{"ruleId":"1455","severity":1,"message":"1667","line":100,"column":27,"nodeType":"1457","messageId":"1458","endLine":100,"endColumn":34},{"ruleId":"1455","severity":1,"message":"1668","line":170,"column":22,"nodeType":"1457","messageId":"1458","endLine":170,"endColumn":35},{"ruleId":"1455","severity":1,"message":"1476","line":3,"column":10,"nodeType":"1457","messageId":"1458","endLine":3,"endColumn":14},{"ruleId":"1455","severity":1,"message":"1669","line":49,"column":10,"nodeType":"1457","messageId":"1458","endLine":49,"endColumn":14},{"ruleId":"1455","severity":1,"message":"1520","line":50,"column":10,"nodeType":"1457","messageId":"1458","endLine":50,"endColumn":17},{"ruleId":"1455","severity":1,"message":"1507","line":2,"column":3,"nodeType":"1457","messageId":"1458","endLine":2,"endColumn":9},{"ruleId":"1455","severity":1,"message":"1517","line":3,"column":3,"nodeType":"1457","messageId":"1458","endLine":3,"endColumn":14},{"ruleId":"1455","severity":1,"message":"1518","line":5,"column":3,"nodeType":"1457","messageId":"1458","endLine":5,"endColumn":13},{"ruleId":"1455","severity":1,"message":"1509","line":6,"column":3,"nodeType":"1457","messageId":"1458","endLine":6,"endColumn":11},{"ruleId":"1455","severity":1,"message":"1548","line":7,"column":3,"nodeType":"1457","messageId":"1458","endLine":7,"endColumn":8},{"ruleId":"1455","severity":1,"message":"1492","line":8,"column":3,"nodeType":"1457","messageId":"1458","endLine":8,"endColumn":9},{"ruleId":"1455","severity":1,"message":"1495","line":9,"column":3,"nodeType":"1457","messageId":"1458","endLine":9,"endColumn":12},{"ruleId":"1455","severity":1,"message":"1462","line":10,"column":3,"nodeType":"1457","messageId":"1458","endLine":10,"endColumn":13},{"ruleId":"1455","severity":1,"message":"1495","line":2,"column":8,"nodeType":"1457","messageId":"1458","endLine":2,"endColumn":17},{"ruleId":"1455","severity":1,"message":"1670","line":3,"column":10,"nodeType":"1457","messageId":"1458","endLine":3,"endColumn":20},{"ruleId":"1455","severity":1,"message":"1671","line":4,"column":31,"nodeType":"1457","messageId":"1458","endLine":4,"endColumn":40},{"ruleId":"1455","severity":1,"message":"1672","line":5,"column":8,"nodeType":"1457","messageId":"1458","endLine":5,"endColumn":16},{"ruleId":"1455","severity":1,"message":"1507","line":2,"column":10,"nodeType":"1457","messageId":"1458","endLine":2,"endColumn":16},{"ruleId":"1455","severity":1,"message":"1645","line":2,"column":18,"nodeType":"1457","messageId":"1458","endLine":2,"endColumn":22},{"ruleId":"1455","severity":1,"message":"1548","line":2,"column":24,"nodeType":"1457","messageId":"1458","endLine":2,"endColumn":29},{"ruleId":"1455","severity":1,"message":"1462","line":2,"column":42,"nodeType":"1457","messageId":"1458","endLine":2,"endColumn":52},{"ruleId":"1455","severity":1,"message":"1673","line":9,"column":8,"nodeType":"1457","messageId":"1458","endLine":9,"endColumn":17},"no-native-reassign",["1674"],"no-negated-in-lhs",["1675"],"no-unused-vars","'CategoriesSubMenu' is defined but never used.","Identifier","unusedVar","'SubMenuHeader' is defined but never used.","'Header' is defined but never used.","'useEffect' is defined but never used.","'Typography' is defined but never used.","'Container' is defined but never used.","'isMenuOpen' is assigned a value but never used.","'isMobileMenuOpen' is assigned a value but never used.","'handleProfileMenuOpen' is assigned a value but never used.","'handleMenuClose' is assigned a value but never used.","'handleMobileMenuOpen' is assigned a value but never used.","'email' is assigned a value but never used.","'setEmail' is assigned a value but never used.","'password' is assigned a value but never used.","'setPassword' is assigned a value but never used.","'fade' is defined but never used.","'classes' is assigned a value but never used.","'IconButton' is defined but never used.","'Link' is defined but never used.","'PropTypes' is defined but never used.","'Card' is defined but never used.","'CardMedia' is defined but never used.","'CardContent' is defined but never used.","'Image' is defined but never used.","'logo' is defined but never used.","'page' is assigned a value but never used.","'pages' is assigned a value but never used.","'PRODUCT_CREATE_REVIEW_RESET' is defined but never used.","'isMd' is assigned a value but never used.","'userInfo' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'product._id'. Either include it or remove the dependency array.","ArrayExpression",["1676"],"'Select' is defined but never used.","'FormControlLabel' is defined but never used.","'FormGroup' is defined but never used.","'TextField' is defined but never used.","'FormHelperText' is defined but never used.","'addToCart' is defined but never used.","'removeFromCart' is defined but never used.","'rupeeSvgIcon' is defined but never used.","'setSpacing' is assigned a value but never used.","'setFormState' is assigned a value but never used.","'setName' is assigned a value but never used.","'setConfirmPassword' is assigned a value but never used.","'submitHandler' is assigned a value but never used.","'Message' is defined but never used.","'RupeeIcon' is defined but never used.","'Button' is defined but never used.","'Icon' is defined but never used.","'MenuItem' is defined but never used.","'cartItems' is assigned a value but never used.","'removeFromCartHandler' is assigned a value but never used.","'checkoutHandler' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.","'handleChange' is assigned a value but never used.","'CheckoutSteps' is defined but never used.","'Input' is defined but never used.","'FormControl' is defined but never used.","'InputLabel' is defined but never used.","'Spinner' is defined but never used.","'message' is assigned a value but never used.","'loading' is assigned a value but never used.","'error' is assigned a value but never used.","'loadingOrders' is assigned a value but never used.","'errorOrders' is assigned a value but never used.","'orders' is assigned a value but never used.","'Writeup' is defined but never used.","'MainCarousel' is defined but never used.","'products' is assigned a value but never used.","'axios' is defined but never used.","'sdkReady' is assigned a value but never used.","'setSdkReady' is assigned a value but never used.","'loadingPay' is assigned a value but never used.","'loadingDeliver' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'history' and 'userInfo'. Either include them or remove the dependency array.",["1677"],"'successPaymentHandler' is assigned a value but never used.","'deliverHandler' is assigned a value but never used.","'loadingUpdate' is assigned a value but never used.","'errorUpdate' is assigned a value but never used.","'loadingDelete' is assigned a value but never used.","'errorDelete' is assigned a value but never used.","'loadingCreate' is assigned a value but never used.","'errorCreate' is assigned a value but never used.","'deleteHandler' is assigned a value but never used.","'createProductHandler' is assigned a value but never used.","'uploading' is assigned a value but never used.","'uploadFileHandler' is assigned a value but never used.","'Paper' is defined but never used.","'addToCartHandler' is assigned a value but never used.",["1674"],["1675"],"'orderType' is assigned a value but never used.","'CardActions' is defined but never used.",["1674"],["1675"],"'emptyCartContent' is assigned a value but never used.","'cartItemsConetnt' is assigned a value but never used.","'handleClickOpen' is assigned a value but never used.","'LoginScreen' is defined but never used.","'Tippy' is defined but never used.","'MoreTippy' is defined but never used.","'setAlreadyLoggedIn' is assigned a value but never used.","'loggedInContent' is assigned a value but never used.","'loggedOutContent' is assigned a value but never used.","'ButtonGroup' is defined but never used.","'useTheme' is defined but never used.","'setFullWidth' is assigned a value but never used.","'setMaxWidth' is assigned a value but never used.","'handleIncrement' is assigned a value but never used.","'handleDecrement' is assigned a value but never used.","'age' is assigned a value but never used.","'handleOpen' is assigned a value but never used.",["1674"],["1675"],"'NotificationsIcon' is defined but never used.","'LiveHelpIcon' is defined but never used.","'TrendingUpIcon' is defined but never used.","'GetAppIcon' is defined but never used.","'setArrow' is assigned a value but never used.","'setDisablePortal' is assigned a value but never used.","'setFlip' is assigned a value but never used.","'setPlacement' is assigned a value but never used.","'setPreventOverflow' is assigned a value but never used.","'jsx' is assigned a value but never used.","'SectionHeader' is defined but never used.","'SectionAlternate' is defined but never used.","'Contact' is defined but never used.","'Hero' is defined but never used.","'Story' is defined but never used.","'WhoWeAre' is defined but never used.","'Partners' is defined but never used.","'Gallery' is defined but never used.","'companies' is defined but never used.","'mapData' is defined but never used.","'gallery' is defined but never used.","'toggleRaised' is assigned a value but never used.",["1674"],["1675"],"'CategoriesSubMenuVer2' is defined but never used.","'Badge' is defined but never used.","'ShoppingCartIcon' is defined but never used.","'CustomizedBadges' is defined but never used.","'targetUrl' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'userInfo'. Either include it or remove the dependency array.",["1678"],"'logoutHandler' is assigned a value but never used.","'handleCartItems' is assigned a value but never used.","'CART_EDFIT_ITEM' is defined but never used.",["1674"],["1675"],"'PRODUCT_DETAILS_REQUEST' is defined but never used.","'PRODUCT_DETAILS_FAIL' is defined but never used.",["1674"],["1675"],["1674"],["1675"],"'useStyles' is assigned a value but never used.",["1674"],["1675"],"'useState' is defined but never used.",["1674"],["1675"],"'cartItemsCount' is assigned a value but never used.","'setCartItemsCount' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["1679"],"'test_product_image' is defined but never used.","'tempImgUrl' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from function.","FunctionExpression","expectedInside","'imagePath' is defined but never used.","'FormLabel' is defined but never used.","'listMyOrders' is defined but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","React Hook useEffect has missing dependencies: 'orderTypeSelected' and 'uom'. Either include them or remove the dependency array.",["1680"],"'TextareaAutosize' is defined but never used.","'OurProducts' is defined but never used.","'createProduct' is defined but never used.","'Grid' is defined but never used.","'InputAdornment' is defined but never used.","'AccountCircleOutlined' is defined but never used.","'fetchUpdatedCartItemsCount' is defined but never used.","'editCartHandler' is assigned a value but never used.","'renderDialog' is assigned a value but never used.","'updateProduct' is defined but never used.","'Table' is defined but never used.","'Paginate' is defined but never used.","'EditRoundedIcon' is defined but never used.","'DeleteOutlineIcon' is defined but never used.","'PRODUCT_CREATE_RESET' is defined but never used.","'PRODUCT_UPDATE_RESET' is defined but never used.","'listProducts' is defined but never used.","'deleteProduct' is defined but never used.","'price' is assigned a value but never used.","'setUploading' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'product.brand', 'product.category', 'product.countInStock', 'product.description', 'product.id', 'product.image', 'product.name', and 'product.price'. Either include them or remove the dependency array.",["1681"],"'payMethod' is assigned a value but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'product' is assigned a value but never used.","'setActiveStep' is assigned a value but never used.","'role' is assigned a value but never used.","'makeStyles' is defined but never used.","'InputBase' is defined but never used.","'GridItem' is defined but never used.","'TableHead' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"1682","fix":"1683"},{"desc":"1684","fix":"1685"},{"desc":"1686","fix":"1687"},{"desc":"1688","fix":"1689"},{"desc":"1690","fix":"1691"},{"desc":"1692","fix":"1693"},"Update the dependencies array to be: [dispatch, match, product._id]",{"range":"1694","text":"1695"},"Update the dependencies array to be: [dispatch, orderId, successPay, successDeliver, order, userInfo, history]",{"range":"1696","text":"1697"},"Update the dependencies array to be: [loginLogoutBtnTitle, loginLogoutBtnUrl, userInfo]",{"range":"1698","text":"1699"},"Update the dependencies array to be: [dispatch]",{"range":"1700","text":"1701"},"Update the dependencies array to be: [dispatch, match, orderTypeSelected, uom]",{"range":"1702","text":"1703"},"Update the dependencies array to be: [dispatch, history, product.brand, product.category, product.countInStock, product.description, product.id, product.image, product.name, product.price, productId]",{"range":"1704","text":"1705"},[2105,2122],"[dispatch, match, product._id]",[1760,1814],"[dispatch, orderId, successPay, successDeliver, order, userInfo, history]",[3131,3171],"[loginLogoutBtnTitle, loginLogoutBtnUrl, userInfo]",[1228,1230],"[dispatch]",[3777,3794],"[dispatch, match, orderTypeSelected, uom]",[4235,4265],"[dispatch, history, product.brand, product.category, product.countInStock, product.description, product.id, product.image, product.name, product.price, productId]"]